<Project>
  <Name>Project system</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.3.1512.0, Culture=neutral, PublicKeyToken=null">
    <Name>Projects - Core</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Comment">
        <Text>Note that the 'data-unit' graph only needs to hold the 'description' of each initial data set. The descriptions hold all the variables, geometry and other data which can be changed to obtain another 'data-unit'. 

The generator, visualization and actual data sets can be linked to the 'data-unit'-description but they don't necessarily need to be in the tree.

By separating the actual generated data from the 'description' data we can allow modification (copy/clone/modify/edit etc.) of a 'data-unit' without having to digg through all the generated data. This also forces components / users to indicate what data should be considered in the tree and what data doesn't need to be considered.</Text>
        <Location left="10" top="10" />
        <Size width="362" height="261" />
      </Entity>
      <Entity type="Interface">
        <Name>IHistory</Name>
        <Access>Internal</Access>
        <Location left="2402" top="879" />
        <Size width="162" height="76" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>ITimeLineProxy</Name>
        <Access>Internal</Access>
        <Location left="2402" top="1036" />
        <Size width="162" height="66" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IBuildProjects</Name>
        <Access>Internal</Access>
        <Location left="297" top="1277" />
        <Size width="515" height="129" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IBuildProjects Define()</Member>
        <Member type="Method">IBuildProjects WithDatasetDistributor(Func&lt;DatasetRequest, DistributionPlan&gt; distributor)</Member>
        <Member type="Method">IBuildProjects FromStorage(IPersistenceInformation persistenceInfo)</Member>
        <Member type="Method">IProject Build()</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IPersistenceProxy</Name>
        <Access>Internal</Access>
        <Location left="1146" top="1533" />
        <Size width="162" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IComponentResolver</Name>
        <Access>Internal</Access>
        <Location left="2588" top="788" />
        <Size width="162" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Comment">
        <Text>- Define default objects that get substituted for specific types, attribute values etc.. This is just like an IOC container. e.g. when using Autofac you hardcode that resolving interface X always gets you an instance of object Y. We can do a similar system for simple system components (e.g. a logger, a console application runner etc.)
- If we make this mechanism available over the entire application then we can allow the higher level components to create substitutions too. That way we could allow the project to setup the resolvers for different simulation components based on the type of simulation that the user has selected. When using this system we'll get a sort of distributed, dynamic IOC container where all the reference types get filled in at the last possible minute.
- We'll need to figure out how we are going to store all this information though. We could mabye use an actual IOC container and dynamically create builders (which we can discard when ever we want)
- Another issue is figuring out a way to be able to load components without having the entire  object graph availabe. We might be able to create dynamic proxies that only load up their suggested component once they are needed?</Text>
        <Location left="2526" top="313" />
        <Size width="423" height="363" />
      </Entity>
      <Entity type="Comment">
        <Text>Should be available to the UI / project system.</Text>
        <Location left="2832" top="839" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>Project</Name>
        <Access>Internal</Access>
        <Location left="2220" top="1226" />
        <Size width="400" height="128" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ProjectService</Name>
        <Access>Internal</Access>
        <Location left="963" top="1252" />
        <Size width="350" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly DatasetLoader m_Loader</Member>
        <Member type="Field">private IProject m_Project</Member>
        <Member type="Method">public void CreateNewProject()</Member>
        <Member type="Method">public void LoadProject(IPersistenceInformation persistenceInfo)</Member>
        <Member type="Property">public IProject Current { get; }</Member>
        <Member type="Method">public void UnloadProject()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IProject</Name>
        <Access>Internal</Access>
        <Location left="1428" top="1226" />
        <Size width="606" height="265" />
        <Collapsed>False</Collapsed>
        <Member type="Property">bool IsClosed { get; }</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnClosed</Member>
        <Member type="Property">string Name { get; set; }</Member>
        <Member type="Event">event EventHandler&lt;ValueChangedEventArgs&lt;string&gt;&gt; OnNameChanged</Member>
        <Member type="Property">string Summary { get; set; }</Member>
        <Member type="Event">event EventHandler&lt;ValueChangedEventArgs&lt;string&gt;&gt; OnSummaryChanged</Member>
        <Member type="Property">int NumberOfDatasets { get; }</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnDatasetCreated</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnDatasetDeleted</Member>
        <Member type="Method">IProxyDataset BaseDataset()</Member>
        <Member type="Method">void Save(IPersistenceInformation persistenceInfo)</Member>
        <Member type="Method">void Export(DatasetId datasetToExport, bool shouldIncludeChildren, IPersistenceInformation persistenceInfo)</Member>
      </Entity>
      <Entity type="Class">
        <Name>ProjectBuilder</Name>
        <Access>Internal</Access>
        <Location left="440" top="1497" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DatasetRequest</Name>
        <Access>Public</Access>
        <Location left="1627" top="735" />
        <Size width="360" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DatasetOfflineInformation DatasetToLoad { get; }</Member>
        <Member type="Property">public DatasetId Parent { get; }</Member>
        <Member type="Property">public bool ProvideParentWithHubConnection { get; }</Member>
        <Member type="Property">public bool IsIntraDatasetCommunicationRequired { get; }</Member>
        <Member type="Property">public int MaximumNumberOfParallelBlocks { get; }</Member>
        <Member type="Property">public ExpectedDatasetLoad ExpectedLoadPerMachine { get; }</Member>
        <Member type="Property">public LoadingLocation PreferredLoadingLocation { get; }</Member>
        <Member type="Property">public MachineDistributionRange DesiredDistributionRange { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DistributionPlan</Name>
        <Access>Public</Access>
        <Location left="493" top="521" />
        <Size width="319" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DatasetId DistributionFor { get; }</Member>
        <Member type="Method">public IEnumerable&lt;Machine&gt; MachinesToDistributeTo()</Member>
        <Member type="Property">public TimeSpan EstimatedTransferTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedLoadingTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedRunningTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedUnloadingTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedReturnTransferTime { get; }</Member>
        <Member type="Property">public DateTimeOffset EarliestStartTime { get; }</Member>
        <Member type="Property">public DateTimeOffset EarliestEstimatedFinnishTime { get; }</Member>
        <Member type="Method">public IEnumerable&lt;DatasetOnlineInformation&gt; Accept()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DatasetOnlineInformation</Name>
        <Access>Public</Access>
        <Location left="3146" top="1101" />
        <Size width="346" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DatasetId Id { get; }</Member>
        <Member type="Property">public MessageHub Channel { get; }</Member>
        <Member type="Method">public IEnumerable&lt;DatasetCommand&gt; AdditionalCommands()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DatasetOfflineInformation</Name>
        <Access>Public</Access>
        <Location left="3146" top="1362" />
        <Size width="311" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DatasetId Id { get; }</Member>
        <Member type="Property">public DatasetCreator CreatedBy { get; }</Member>
        <Member type="Property">public bool CanBecomeParent { get; }</Member>
        <Member type="Property">public bool CanBeDeleted { get; }</Member>
        <Member type="Property">public bool CanBeAdopted { get; }</Member>
        <Member type="Property">public bool CanBeCopied { get; }</Member>
        <Member type="Property">public IPersistenceInformation StoredAt { get; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public string Summary { get; set; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IProxyDataset</Name>
        <Access>Internal</Access>
        <Location left="1441" top="1687" />
        <Size width="532" height="469" />
        <Collapsed>False</Collapsed>
        <Member type="Property">DatasetId Id { get; }</Member>
        <Member type="Property">bool IsValid { get; }</Member>
        <Member type="Property">bool CanBeDeleted { get; }</Member>
        <Member type="Method">void Delete()</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnDeleted</Member>
        <Member type="Property">bool CanBeAdopted { get; }</Member>
        <Member type="Property">bool CanBeCopied { get; }</Member>
        <Member type="Property">DatasetCreator CreatedBy { get; }</Member>
        <Member type="Property">IPersistenceInformation StoredAt { get; }</Member>
        <Member type="Property">string Name { get; set; }</Member>
        <Member type="Event">event EventHandler&lt;ValueChangedEventArgs&lt;string&gt;&gt; OnNameChanged</Member>
        <Member type="Property">string Summary { get; set; }</Member>
        <Member type="Event">event EventHandler&lt;ValueChangedEventArgs&lt;string&gt;&gt; OnSummaryChanged</Member>
        <Member type="Property">bool IsLoaded { get; }</Member>
        <Member type="Method">IEnumerable&lt;Machine&gt; RunsOn()</Member>
        <Member type="Method">void LoadOntoMachine(LoadingLocation preferredLocation, MachineDistributionRange range)</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnLoaded</Member>
        <Member type="Method">void UnloadFromMachine()</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnUnloaded</Member>
        <Member type="Method">IEnumerable&lt;IProxyDataset&gt; Children()</Member>
        <Member type="Property">bool CanBecomeParent { get; }</Member>
        <Member type="Method">IProxyDataset CreateNewChild(IDatasetCreationInformation newChild)</Member>
        <Member type="Method">IEnumerable&lt;IProxyDataset&gt; CreateNewChildren(IDatasetCreationInformation[] newChildren)</Member>
        <Member type="Property">ProxyCommandSet Commands { get; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>ReadonlyDataset</Name>
        <Access>Internal</Access>
        <Location left="2078" top="1828" />
        <Size width="298" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Field">DatasetId m_Id</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>what about:
- Commands?</Text>
        <Location left="2078" top="1572" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Note that the dataset does not chose it's own components. That's what the resolver is for.</Text>
        <Location left="2818" top="943" />
        <Size width="181" height="99" />
      </Entity>
      <Entity type="Structure">
        <Name>ExpectedDatasetLoad</Name>
        <Access>Public</Access>
        <Location left="1783" top="415" />
        <Size width="304" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public long OnDiskSize { get; }</Member>
        <Member type="Property">public long InMemorySize { get; }</Member>
        <Member type="Property">public BaseLineId BaseLine { get; }</Member>
        <Member type="Property">public double RelativeMemoryRunningExpansion { get; }</Member>
        <Member type="Property">public double RelativeOnDiskExpansion { get; }</Member>
        <Member type="Property">public double RelativeRunningLoad { get; }</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Defines how 'complex' a dataset is with respect to machine load (memory, CPU, HDD etc.)</Text>
        <Location left="2179" top="447" />
        <Size width="183" height="95" />
      </Entity>
      <Entity type="Class">
        <Name>DatasetLoader</Name>
        <Access>Internal</Access>
        <Location left="897" top="1051" />
        <Size width="537" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public DistributionPlan ProposeDistributionFor(DatasetRequest request)</Member>
        <Member type="Method">internal IEnumerable&lt;DatasetOnlineInformation&gt; ImplementPlan(DistributionPlan planToImplement)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Connects to a machine (could be local or remote) and loads the dataset there.
Loading on remote machines requires that there is a service or application running which can handle the starting of the dataset application in the right context.</Text>
        <Location left="1343" top="891" />
        <Size width="235" height="144" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we need to define how to contact the machine? We may need a specific username or port?</Text>
        <Location left="172" top="843" />
        <Size width="203" height="102" />
      </Entity>
      <Entity type="Class">
        <Name>DatasetId</Name>
        <Access>Public</Access>
        <Location left="3525" top="1286" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>PreferredLoadingLocation</Name>
        <Access>Public</Access>
        <Location left="1561" top="477" />
        <Size width="172" height="146" />
        <Collapsed>False</Collapsed>
        <Value>None</Value>
        <Value>Local</Value>
        <Value>Distributed</Value>
        <Value>DistributedOnPeerToPeer</Value>
        <Value>DistributedOnCluster</Value>
      </Entity>
      <Entity type="Delegate">
        <Name>ProposeDistributionDelegate</Name>
        <Access>Public</Access>
        <Location left="1746" top="1069" />
        <Size width="222" height="78" />
        <Collapsed>False</Collapsed>
        <ReturnType>IEnumerable&lt;DistributionPlan&gt;</ReturnType>
        <Param>DatasetRequest request</Param>
      </Entity>
      <Entity type="Comment">
        <Text>Other methods that should be implemented:
- Save
- Execute generator commands
- Execute visualizer commands
- Add / Remove / Link components
</Text>
        <Location left="2468" top="2212" />
        <Size width="295" height="116" />
      </Entity>
      <Entity type="Class">
        <Name>ProxyCommandSet</Name>
        <Access>Internal</Access>
        <Location left="2113" top="2212" />
        <Size width="270" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">TCommand CommandsFor&lt;TCommand&gt;()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>The commands in this list are created by a automatically implemented proxy class (DynamicProxy2?). The methods mirror the original command sets that we need.

The only catch is how are we going to make this work. We'd need an interface.</Text>
        <Location left="2140" top="2423" />
        <Size width="243" height="151" />
      </Entity>
      <Entity type="Class">
        <Name>MessageHub</Name>
        <Access>Public</Access>
        <Location left="3011" top="11" />
        <Size width="366" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public TProxy CommandsFor&lt;TProxy&gt;(EndPointId endpoint)</Member>
        <Member type="Method">public TProxy RequestsFor&lt;TProxy&gt;(EndPointId endpoint)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Distributed processing fallacy 8:
The network is homegeous
- It's not, there's all kinds of stuff on it
==&gt; Machines may be more or less powerful than the 'current' machine etc. Not much we can do about it other than keep it in mind.</Text>
        <Location left="1102" top="580" />
        <Size width="339" height="123" />
      </Entity>
      <Entity type="Comment">
        <Text>Distributed processing fallacy 5:
Topology doesn't change:
- It does, all the time. More so for clients than for servers but still.
==&gt; Do not rely on a specific machine. Get machines to broadcast their presence if they are on the network and ready to work. Ditto for going offline. WCF-discovery should work for this.</Text>
        <Location left="1239" top="721" />
        <Size width="339" height="160" />
      </Entity>
      <Entity type="Interface">
        <Name>IPersistenceInformation</Name>
        <Access>Public</Access>
        <Location left="3561" top="1651" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Class">
        <Name>DatasetCreationInformation</Name>
        <Access>Public</Access>
        <Location left="1016" top="1816" />
        <Size width="297" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IPersistenceInformation LoadFrom { get; set; }</Member>
        <Member type="Property">public DatasetCreator CreatedOnRequestOf { get; set; }</Member>
        <Member type="Property">public bool CanBecomeParent { get; set; }</Member>
        <Member type="Property">public bool CanBeDeleted { get; set; }</Member>
        <Member type="Property">public bool CanBeAdopted { get; set; }</Member>
        <Member type="Property">public bool CanBeCopied { get; set; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Note that by the time we get all the plans back some of them may well be invalid.
How are we going to deal with that?</Text>
        <Location left="172" top="581" />
        <Size width="197" height="114" />
      </Entity>
      <Entity type="Comment">
        <Text>The client sends the distribution out to all the available hosts it knows about (the config file indicates how far it can go?). These hosts then create a proposal of how they would approach the problem and send that back. Then the client can decide on which host to use.</Text>
        <Location left="527" top="1051" />
        <Size width="262" height="139" />
      </Entity>
      <Entity type="Class">
        <Name>Machine</Name>
        <Access>Public</Access>
        <Location left="551" top="843" />
        <Size width="195" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public MachineId Id { get; }</Member>
        <Member type="Property">public string DomainName { get; }</Member>
        <Member type="Property">public bool IsLocalMachine { get; }</Member>
        <Member type="Property">public bool IsPartOfGroup { get; }</Member>
        <Member type="Property">public string GroupIdentifier { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>The catch is that the child dataset(s) may or may not exist at this point. If the children are independent then we could potentially make them before the loading request. If the children are part of a domain decomposition then we can't because it depends on the available resources.</Text>
        <Location left="2109" top="751" />
        <Size width="211" height="171" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we want to have a staged approach to the distribution? So first we go out to all the stand-alone machines, then to the local cluster, then to the WAN cluster etc. etc.. The choice of where to go first could be dictated by the user preferences (for the project) and the desired distribution locality</Text>
        <Location left="172" top="1051" />
        <Size width="270" height="139" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="2" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2474</X>
          <Y>1011</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2474</X>
          <Y>980</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="6" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2687</X>
          <Y>702</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2687</X>
          <Y>760</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="9" second="3">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>916</X>
          <Y>1338</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>849</X>
          <Y>1338</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="9" second="4">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1247</X>
          <Y>1456</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1247</X>
          <Y>1508</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="8" second="5">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2382</X>
          <Y>1170</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2563</X>
          <Y>818</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="8" second="2">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2478</X>
          <Y>1188</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2478</X>
          <Y>1128</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="8" second="10">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2183</X>
          <Y>1308</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2059</X>
          <Y>1308</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="11" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>519</X>
          <Y>1456</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>519</X>
          <Y>1433</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="9" second="10">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="17" second="16">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="10" second="16">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="7" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2721</X>
          <Y>763</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="19" second="5">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2695</X>
          <Y>874</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="12" second="20">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="21" second="20">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="8" second="17">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="23" second="22">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1292</X>
          <Y>1005</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="13" second="22">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1005</X>
          <Y>1010</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="15" second="25">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3482</X>
          <Y>1411</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3592</X>
          <Y>1388</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="25">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3520</X>
          <Y>1210</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3592</X>
          <Y>1251</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="8" second="27">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2265</X>
          <Y>1200</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2016</X>
          <Y>1106</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="9" second="22">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="27" second="22">
        <Label>Links to</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="18" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2059</X>
          <Y>1405</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="17" second="29">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2260</X>
          <Y>2018</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2260</X>
          <Y>2187</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="30" second="29">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="28" second="29">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="14" second="31">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3517</X>
          <Y>1176</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3402</X>
          <Y>54</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="22" second="31">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1053</X>
          <Y>1025</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2943</X>
          <Y>66</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="12" second="26">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="32" second="22">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1190</X>
          <Y>1026</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="33" second="22">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1262</X>
          <Y>910</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="15" second="34">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3482</X>
          <Y>1447</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="8" second="14">
        <Label>store by ID</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="8" second="15">
        <Label>store by ID</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2645</X>
          <Y>1317</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3121</X>
          <Y>1453</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="17" second="8">
        <Label>links</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2337</X>
          <Y>1381</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="36" second="13">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="37" second="22">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="13" second="38">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="24" second="38">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="39" second="12">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="40" second="37">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="16" second="35">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.3.1512.0, Culture=neutral, PublicKeyToken=null">
    <Name>Project - dataset application</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>EntryPoint</Name>
        <Access>Internal</Access>
        <Location left="498" top="477" />
        <Size width="196" height="113" />
        <Collapsed>False</Collapsed>
        <Member type="Method">static int Main(string[] args)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DatasetBuilder</Name>
        <Access>Internal</Access>
        <Location left="612" top="716" />
        <Size width="296" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static implicit operator Dataset(DatasetBuilder builder)</Member>
        <Member type="Method">public DatasetBuilder AsSimulation()</Member>
        <Member type="Method">public DatasetBuilder AsExperiment()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>The start-up arguments are:
- A description of the communication channel.
- ??</Text>
        <Location left="527" top="163" />
        <Size width="297" height="136" />
      </Entity>
      <Entity type="Comment">
        <Text>How do we deal with components? The core part of the application is in charge of picking the right ones, but we'll still need to be able to load them. For that we'll need loading information from somewhere.
The application can provide the exact assembly details (name, version number, public key etc.) but we'll need to know where to find the files.</Text>
        <Location left="209" top="163" />
        <Size width="296" height="159" />
      </Entity>
      <Entity type="Comment">
        <Text>The dataset does not determine which components to load. The selection of the correct component type is done by the IComponentResolver in the project. Note that this requires that the dataset can always call back to the project.</Text>
        <Location left="2349" top="1553" />
        <Size width="227" height="153" />
      </Entity>
      <Entity type="Comment">
        <Text>The component service is responsible for component loading and also tracking which components exist in a data set.</Text>
        <Location left="933" top="1624" />
        <Size width="203" height="92" />
      </Entity>
      <Entity type="Comment">
        <Text>Load types asynchronuously. The idea is to load the assemblies in an async way so that we're not waiting for them for too long.</Text>
        <Location left="2164" top="1375" />
        <Size width="211" height="102" />
      </Entity>
      <Entity type="Interface">
        <Name>IComponentBuilder</Name>
        <Access>Internal</Access>
        <Location left="1833" top="1827" />
        <Size width="459" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IEnumerable&lt;IComponent&gt; Load(params ComponentDescription[] descriptions)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IComponentService</Name>
        <Access>Internal</Access>
        <Location left="1173" top="1375" />
        <Size width="556" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">ComponentId AddComponent(ComponentDescription description)</Member>
        <Member type="Method">ComponentId AddComponent(ComponentDescription description, params IComponentLink[] links)</Member>
        <Member type="Method">IComponentGroup AddComponents(IComponentTemplate template)</Member>
        <Member type="Method">void RemoveComponent(ComponentId componentToRemove)</Member>
        <Member type="Method">void RemoveComponentGroup(IComponentGroup groupToRemove)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IExecutor</Name>
        <Access>Internal</Access>
        <Location left="435" top="1798" />
        <Size width="363" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">ExecutionToken Execute(IProcessSchedule scheduleToExecute)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IHistory</Name>
        <Access>Internal</Access>
        <Location left="333" top="1530" />
        <Size width="162" height="99" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Class">
        <Name>ComponentService</Name>
        <Access>Internal</Access>
        <Location left="1403" top="1757" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ComponentBuilder</Name>
        <Access>Internal</Access>
        <Location left="1947" top="1539" />
        <Size width="198" height="153" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IComponent</Name>
        <Access>Internal</Access>
        <Location left="1397" top="2092" />
        <Size width="174" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Property">ComponentId Id { get; }</Member>
        <Member type="Property">object Component { get; }</Member>
      </Entity>
      <Entity type="Structure">
        <Name>ObjectDescription</Name>
        <Access>Public</Access>
        <Location left="1833" top="2252" />
        <Size width="438" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public TypeDescription TypeToLoad { get; }</Member>
        <Member type="Method">public IComponent PermanentCoworkersByIndex(int constructorParameterIndex)</Member>
        <Member type="Method">public IComponent PermanentCoworkersByName(string coworkerName)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>How do object links come into this?
- coworkers
- usage / encapsulate
- construction links, e.g. one object relies on another for construction (either directly or indirectly, e.g. mesh - geometry)

Note that objects may only be linked when they're executing. This is especially useful for actions.</Text>
        <Location left="848" top="1731" />
        <Size width="294" height="167" />
      </Entity>
      <Entity type="Comment">
        <Text>Allow objects / components to indicate which of their coworkers are read, write or read/write connections. That way we can trace which components get changed by whom.

For data components this should lead to a hierarchy of components. e.g. geometry - mesh</Text>
        <Location left="848" top="1917" />
        <Size width="294" height="165" />
      </Entity>
      <Entity type="Comment">
        <Text>Dispatches incomming messages to the correct recipient.</Text>
        <Location left="1440" top="307" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>To create sub-datasets we create a DatasetRequest and send that over the wire to the application.</Text>
        <Location left="1011" top="786" />
        <Size width="180" height="97" />
      </Entity>
      <Entity type="Class">
        <Name>DatasetRequest</Name>
        <Access>Public</Access>
        <Location left="915" top="971" />
        <Size width="334" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DatasetOfflineInformation DatasetToLoad { get; }</Member>
        <Member type="Property">public DatasetId Parent { get; }</Member>
        <Member type="Property">public bool ProvideParentWithHubConnection { get; }</Member>
        <Member type="Property">public ExpectedDatasetLoad ExpectedLoadPerMachine { get; }</Member>
        <Member type="Property">public LoadingLocation PreferredLoadingLocation { get; }</Member>
        <Member type="Property">public Range&lt;int&gt; DesiredDistributionRange { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Dataset</Name>
        <Access>Internal</Access>
        <Location left="597" top="1277" />
        <Size width="288" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void RegisterCommandSet(ICommandSet set)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Structure">
        <Name>TypeDescription</Name>
        <Access>Public</Access>
        <Location left="2467" top="2070" />
        <Size width="273" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public AssemblyDescription Assembly { get; }</Member>
        <Member type="Property">public string Name { get; }</Member>
        <Member type="Property">public string Namespace { get; }</Member>
        <Member type="Property">public string FullName { get; }</Member>
        <Member type="Property">public TypeDescription BaseType { get; }</Member>
        <Member type="Property">public bool IsAbstract { get; }</Member>
        <Member type="Property">public bool IsClass { get; }</Member>
        <Member type="Property">public bool IsInterface { get; }</Member>
        <Member type="Property">public bool IsSystem { get; }</Member>
        <Member type="Method">public IEnumerable&lt;TypeDescription&gt; Interfaces()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Do we make a component by creating a proxy interface for a series of objects?</Text>
        <Location left="1397" top="2252" />
        <Size width="174" height="85" />
      </Entity>
      <Entity type="Structure">
        <Name>ComponentDescription</Name>
        <Access>Public</Access>
        <Location left="1881" top="2015" />
        <Size width="316" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public TypeDescription ComponentInterface { get; }</Member>
        <Member type="Method">public IEnumerable&lt;ObjectDescription&gt; BackEndObjects()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Do we want member info too?</Text>
        <Location left="2527" top="1917" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Structure">
        <Name>AssemblyDescription</Name>
        <Access>Public</Access>
        <Location left="2451" top="2401" />
        <Size width="304" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string FullName { get; }</Member>
        <Member type="Property">public bool IsInGlobalAssemblyCache { get; }</Member>
        <Member type="Property">public bool IsSystem { get; }</Member>
        <Member type="Property">public string Location { get; }</Member>
        <Member type="Method">public IEnumerable&lt;AssemblyDescription&gt; References()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Remember that modules and assemblies are actually separate. We need to allow having one assembly with multiple modules and visa versa</Text>
        <Location left="2507" top="2622" />
        <Size width="193" height="106" />
      </Entity>
      <Entity type="Interface">
        <Name>IDataSet</Name>
        <Access>Internal</Access>
        <Location left="23" top="1248" />
        <Size width="310" height="180" />
        <Collapsed>False</Collapsed>
        <Member type="Property">DatasetId Id { get; }</Member>
        <Member type="Property">string Name { get; set; }</Member>
        <Member type="Property">string Description { get; set; }</Member>
        <Member type="Method">void Save(Stream persistenceStream)</Member>
        <Member type="Method">TCommand CommandsFor&lt;TCommand&gt;()</Member>
        <Member type="Method">CommandSet CommandsFor(Type commandType)</Member>
        <Member type="Method">IEnumerable&lt;Type&gt; AvailableCommands()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Should be able to request an assembly to be streamed to the local machine. This is needed when we don't have the right plug-in assembly.</Text>
        <Location left="1774" top="1355" />
        <Size width="208" height="122" />
      </Entity>
      <Entity type="Class">
        <Name>MessageHub</Name>
        <Access>Public</Access>
        <Location left="1330" top="482" />
        <Size width="366" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public TProxy CommandsFor&lt;TProxy&gt;(EndPointId endpoint)</Member>
        <Member type="Method">public void RegisterRequestHandler(RequestId id, Action handler)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Remember versions and cultures. They're a pain in the behind but we'll need to store them.</Text>
        <Location left="2136" top="2495" />
        <Size width="180" height="95" />
      </Entity>
      <Entity type="Comment">
        <Text>A dataset needs to be able to split itself into parts.</Text>
        <Location left="317" top="985" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Distribution of dataset or its children.</Text>
        <Location left="462" top="1113" />
        <Size width="159" height="57" />
      </Entity>
      <Entity type="Comment">
        <Text>Child datasets are probably created on disk first. They may be loaded onto the same machine but won't be loaded into the same process anyway.</Text>
        <Location left="526" top="930" />
        <Size width="193" height="106" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Comment" first="2" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>610</X>
          <Y>417</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="0" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>559</X>
          <Y>615</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>568</X>
          <Y>789</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="3" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>291</X>
          <Y>348</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>473</X>
          <Y>541</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="11" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="11" second="7">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="12" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="15" second="11">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="16" second="11">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1378</X>
          <Y>1931</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="5" second="11">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1164</X>
          <Y>1668</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1449</X>
          <Y>1722</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="6" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2257</X>
          <Y>1502</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2170</X>
          <Y>1606</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="4" second="12">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="18" second="19">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="20" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>668</X>
          <Y>1397</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="20" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>742</X>
          <Y>1401</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="20" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>930</X>
          <Y>1325</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="20" second="19">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>836</X>
          <Y>1245</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="1" second="20">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="11" second="13">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Comment" first="22" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="7" second="23">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="23" second="14">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="23" second="21">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="21">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2442</X>
          <Y>2265</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="24" second="21">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="21" second="25">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Comment" first="26" second="25">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="22" second="23">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1608</X>
          <Y>2289</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1821</X>
          <Y>2059</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="20" second="27">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="28" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1988</X>
          <Y>1514</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="17" second="29">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="0" second="29">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>734</X>
          <Y>533</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="12" second="29">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1757</X>
          <Y>530</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="20" second="29">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>932</X>
          <Y>1308</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="30" second="25">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="32" second="20">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>650</X>
          <Y>1248</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="31" second="32">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="33" second="32">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.3.1512.0, Culture=neutral, PublicKeyToken=null">
    <Name>Project - Communication</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>ICommunicationLayer</Name>
        <Access>Public</Access>
        <Location left="1290" top="417" />
        <Size width="496" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool IsEndpointAvailable(EndpointId endpoint)</Member>
        <Member type="Event">event EventHandler&lt;EndpointAvailabilityEventArgs&gt; OnAvailabilityChange</Member>
        <Member type="Event">event EventHandler&lt;EndpointEventArgs&gt; OnTerminate</Member>
        <Member type="Method">void SendMessageTo(EndPointId endpoint, IMessage message)</Member>
        <Member type="Method">void RegisterListener(Action&lt;IMessage&gt; listener)</Member>
        <Member type="Method">void RegisterListener(Action&lt;IMessage&gt; listener, params Type[] allowedMessageTypes)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ICommunicationChannel</Name>
        <Access>Internal</Access>
        <Location left="2057" top="1490" />
        <Size width="339" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Property">ChannelId Id { get; }</Member>
        <Member type="Method">IConnectionInfo OpenChannel()</Member>
        <Member type="Method">void Close()</Member>
        <Member type="Method">void ConnectTo(IConnectionInfo connection)</Member>
        <Member type="Method">Task TransferData(long sizeInBytes, Stream dataStream)</Member>
        <Member type="Method">Task TransferData(string filePath)</Member>
        <Member type="Method">Task TransferData(params string[] filePaths)</Member>
        <Member type="Method">void Send(IMessage messageToSend)</Member>
        <Member type="Event">event EventHandler&lt;MessageEventArgs&gt; OnReceive</Member>
        <Member type="Event">event EventHandler&lt;ChannelClosedEventArgs&gt; OnClosed</Member>
      </Entity>
      <Entity type="Class">
        <Name>NamedPipeChannel</Name>
        <Access>Internal</Access>
        <Location left="1634" top="2585" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PeerToPeerChannel</Name>
        <Access>Internal</Access>
        <Location left="2141" top="2585" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TcpChannel</Name>
        <Access>Internal</Access>
        <Location left="2746" top="2585" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IMessage</Name>
        <Access>Internal</Access>
        <Location left="1167" top="1782" />
        <Size width="207" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Property">MessageId Id { get; }</Member>
        <Member type="Property">MessageId InResponseTo { get; }</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Need a good abstraction for datastreaming. For named pipes we can share a memory block, but for P2P and TCP we need some streaming download. Probably chunked, restartable and compressed.</Text>
        <Location left="2555" top="1490" />
        <Size width="215" height="142" />
      </Entity>
      <Entity type="Comment">
        <Text>We only want to make one hole in the firewall for each of these communication methods. so there should really only be one port opened. The obvious catch is that we need to support the ability to run multiple instances of the same application ....</Text>
        <Location left="2380" top="2891" />
        <Size width="254" height="138" />
      </Entity>
      <Entity type="Class">
        <Name>MessageId</Name>
        <Access>Internal</Access>
        <Location left="1189" top="1574" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Defines a globally unique ID number for messages send between different instances of the Apollo application.

Can do either:
- GUID
- combination of:
  - machine name
  - Process ID
  - process specific message ID</Text>
        <Location left="1167" top="1223" />
        <Size width="207" height="211" />
      </Entity>
      <Entity type="Comment">
        <Text>Should be allowed to start a channel with given connection parameters. This is necessary for:
- Initial start of the dataset application
- Reconnecting to a lost dataset application / service.</Text>
        <Location left="1301" top="660" />
        <Size width="265" height="123" />
      </Entity>
      <Entity type="Class">
        <Name>MessageHub</Name>
        <Access>Public</Access>
        <Location left="659" top="417" />
        <Size width="411" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public TCommands CommandsFor&lt;TCommands&gt;(EndPointId endpoint)</Member>
        <Member type="Method">public void RegisterRequestHandler(RequestId id, Action handler)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Can have a method that returns a facade object. This facade object can then contain all the required methods for sending messages. e.g. there could be a DatasetFacade object which contains all the methods necessary for communicating with the dataset.

This should help fix the problem of messages and needing to have one method per message etc..</Text>
        <Location left="703" top="155" />
        <Size width="293" height="172" />
      </Entity>
      <Entity type="Class">
        <Name>CommandSet</Name>
        <Access>Public</Access>
        <Location left="627" top="729" />
        <Size width="459" height="223" />
        <Collapsed>False</Collapsed>
        <Member type="Event">public event EventHandler&lt;CommandSetAvailabilityEventArgs&gt; OnAvailabilityChange</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnInvalidate</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommunicationLayer</Name>
        <Access>Public</Access>
        <Location left="2150" top="519" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommunicationChannelCommands</Name>
        <Access>Public</Access>
        <Location left="669" top="1108" />
        <Size width="400" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public Task&lt;EndPointId&gt; ReEstablishConnection(EndPointId oldEndPoint)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>We can use the protocol buffers to smash the message into a transferable format</Text>
        <Location left="2418" top="2330" />
        <Size width="170" height="96" />
      </Entity>
      <Entity type="Comment">
        <Text>It may well make sense to compress the messages by using a GZIP compression</Text>
        <Location left="2432" top="2633" />
        <Size width="160" height="93" />
      </Entity>
      <Entity type="Comment">
        <Text>We want to be able to stream a dataset to a machine, on to the disk and then load it from there. This will be necessary because it's faster and more reliable (we can do a MD5 or equivalent check after we get the data through).</Text>
        <Location left="1609" top="660" />
        <Size width="240" height="123" />
      </Entity>
      <Entity type="Comment">
        <Text>We'd like the stream to be resumable so:
- Use a chunking approach
- Check that every chunk arrived correctly and put it on the disk, move on to the next chunk and remember where we were at.
- Possibly can be done in parallel because we don't really care in what order stuff comes in, just that it all arrives in the end.

See: 
- http://msdn.microsoft.com/en-us/library/aa717050.aspx
- http://stackoverflow.com/questions/2819081/memorystream-and-large-object-heap
-http://stackoverflow.com/questions/451376/file-download-through-wcf-slower-than-through-iis</Text>
        <Location left="2880" top="1435" />
        <Size width="514" height="240" />
      </Entity>
      <Entity type="Comment">
        <Text>Distributed processing fallacy 1:
The network is reliable:
- Connections get interupted
- Messages can get lost
- Downloads get interupted
==&gt; Handle this, but we don't care about message arrival if the other side disappears. Then we just restart the process.
</Text>
        <Location left="1560" top="1490" />
        <Size width="339" height="133" />
      </Entity>
      <Entity type="Comment">
        <Text>Distributed processing fallacy 2:
Latency is zero:
- It takes a finite amount of time to do anything on a network
==&gt; Async processing seems the logical choice, that way you force consumers to acknowledge that things may take time.
==&gt; Don't do a chatty system. Do terse systems with fat messages.
==&gt; Take into account that data access may take time, provide progress measurements and indications everywhere.</Text>
        <Location left="188" top="188" />
        <Size width="339" height="215" />
      </Entity>
      <Entity type="Comment">
        <Text>Distributed processing fallacy 3:
Bandwidth is infinite:
- We're getting connections with more bandwidth every day BUT packet loss is real and the further the data has to travel the more likely it is to get lost.
- The sender can't control the packet loss, so be prepared to resend the data (TCP does this for us).
==&gt; Packet size may not be under our control but still the goal is to send fat messages.</Text>
        <Location left="1173" top="155" />
        <Size width="339" height="171" />
      </Entity>
      <Entity type="Comment">
        <Text>Distributed processing fallacy 4:
The network is secure:
==&gt; Make sure that security is a part of the orginal design.</Text>
        <Location left="10" top="10" />
        <Size width="339" height="76" />
      </Entity>
      <Entity type="Comment">
        <Text>Distributed processing fallacy 5:
Topology doesn't change:
- It does, all the time. More so for clients than for servers but still.
==&gt; Do not rely on a specific machine. Get machines to broadcast their presence if they are on the network and ready to work. Ditto for going offline. WCF-discovery should work for this.</Text>
        <Location left="1560" top="155" />
        <Size width="339" height="152" />
      </Entity>
      <Entity type="Comment">
        <Text>Distributed processing fallacy 6:
There is one administrator:
- There are probably more administrators and they all control their own little section
==&gt; Upgrades, how do we control them. Do we need forward or backward compatibility.
==&gt; Diagnosing problems is done by the admins, not the dev team so we'll need to provide them with the tools to do so.</Text>
        <Location left="1560" top="1284" />
        <Size width="339" height="172" />
      </Entity>
      <Entity type="Class">
        <Name>EndpointId</Name>
        <Access>Public</Access>
        <Location left="2046" top="332" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MachineCommands</Name>
        <Access>Public</Access>
        <Location left="1236" top="804" />
        <Size width="402" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public Task TransferAssembly(string assemblyPath)</Member>
        <Member type="Method">public Task&lt;EndPointId&gt; LoadNewDataset(MachineId machineToLoadOn)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>A request is effectively a command that was invoked on the other side of the channel. i.e. somebody trying to invoke a command on this side of the channel.</Text>
        <Location left="471" top="581" />
        <Size width="179" height="125" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we need a http channel too?</Text>
        <Location left="3112" top="2663" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>CommunicationChannel</Name>
        <Access>Internal</Access>
        <Location left="2038" top="2148" />
        <Size width="351" height="162" />
        <Collapsed>False</Collapsed>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ISendingEndPoint</Name>
        <Access>Public</Access>
        <Location left="2729" top="1860" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IResurrectingWcfChannel</Name>
        <Access>Public</Access>
        <Location left="1522" top="2206" />
        <Size width="266" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Send(IMessage message)</Member>
        <Member type="Event">event EventHandler&lt;MessageEventArgs&gt; Receive</Member>
      </Entity>
      <Entity type="Class">
        <Name>ResurrectingWcfChannelProxy&lt;T&gt;</Name>
        <Access>Public</Access>
        <Location left="1349" top="2381" />
        <Size width="213" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>IDisposable</Text>
        <Location left="1986" top="1758" />
        <Size width="94" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>http://kentb.blogspot.com/2010/01/wcf-channels-faulting-and-dependency.html</Text>
        <Location left="1438" top="2103" />
        <Size width="455" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we need to keep a list of all services that are available? Not everybody will need it but some will (e.g. apollo.core and apollo.core.loaderservice).</Text>
        <Location left="2299" top="150" />
        <Size width="181" height="114" />
      </Entity>
      <Entity type="Comment">
        <Text>Need to be able to broadcast that we're on the network and that we're getting off the network.</Text>
        <Location left="2299" top="341" />
        <Size width="181" height="90" />
      </Entity>
      <Entity type="Comment">
        <Text>We need some kind of "ping" message to determine if the service is up and running. 
When we are communicating we'll know because WCF can handle the keep-alive messages but when we're not communicating (and have no channel) we need some method of finding out if the service exists.</Text>
        <Location left="2782" top="930" />
        <Size width="265" height="142" />
      </Entity>
      <Entity type="Interface">
        <Name>IHandleMessages</Name>
        <Access>Public</Access>
        <Location left="2388" top="1029" />
        <Size width="163" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Class">
        <Name>MessageHandler</Name>
        <Access>Public</Access>
        <Location left="2385" top="1220" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IMessageFilter</Name>
        <Access>Public</Access>
        <Location left="2836" top="1302" />
        <Size width="163" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IFilterAction</Name>
        <Access>Public</Access>
        <Location left="2836" top="1140" />
        <Size width="163" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Comment">
        <Text>The IFilterAction implementations handle response messages and all the types of messages that we are expecting.</Text>
        <Location left="3111" top="1122" />
        <Size width="208" height="90" />
      </Entity>
      <Entity type="Comment">
        <Text>Remember that datasets may become very large so the streaming capabilities should be able to handle large blocks of data without issue.</Text>
        <Location left="2555" top="1720" />
        <Size width="215" height="107" />
      </Entity>
      <Entity type="Comment">
        <Text>Expecting:
- Disconnect (Comm. system)
- StreamUpload (Comm. system)
- StreamDownload (Comm. system)
- Failure (Comm. system)
- Ping (Comm. system)
- Command (defines command type + parameters)</Text>
        <Location left="3453" top="1072" />
        <Size width="323" height="188" />
      </Entity>
      <Entity type="Comment">
        <Text>Note that some messages  are only meant for the communication layer, while others need to be passed through.</Text>
        <Location left="3111" top="1283" />
        <Size width="185" height="105" />
      </Entity>
      <Entity type="Class">
        <Name>DiscoveryChannel</Name>
        <Access>Internal</Access>
        <Location left="2880" top="516" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IDiscoverOtherServices</Name>
        <Access>Public</Access>
        <Location left="2537" top="516" />
        <Size width="163" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Comment">
        <Text>This channel is used only for discovery of other services.</Text>
        <Location left="2537" top="356" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>ChannelBuilder</Name>
        <Access>Public</Access>
        <Location left="2363" top="771" />
        <Size width="211" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public ICommunicationChannel Build()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Needs a collection of open channels which are mapped to an ID or owner or something?</Text>
        <Location left="1917" top="581" />
        <Size width="160" height="106" />
      </Entity>
      <Entity type="Comment">
        <Text>Used to map an endpoint to the command set. The channel may change (if it dies or the dataset is moved) but the EndpointId should stay the same.</Text>
        <Location left="2035" top="123" />
        <Size width="183" height="117" />
      </Entity>
      <Entity type="Interface">
        <Name>IReceivingEndpoint</Name>
        <Access>Public</Access>
        <Location left="2729" top="2148" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Comment" first="7" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2574</X>
          <Y>2866</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="7" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2472</X>
          <Y>2866</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="9" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1266</X>
          <Y>1459</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1266</X>
          <Y>1541</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="5" second="8">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1264</X>
          <Y>1746</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1264</X>
          <Y>1676</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="10" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="11" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="12" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="11" second="13">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="14" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2107</X>
          <Y>556</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="14" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="15" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="17" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="17" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="18" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1630</X>
          <Y>607</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="27" second="13">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="28" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>558</X>
          <Y>556</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>633</X>
          <Y>482</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="24" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="20" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1931</X>
          <Y>1551</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2029</X>
          <Y>1551</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="21" second="11">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>634</X>
          <Y>442</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="22" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="25" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1925</X>
          <Y>1362</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2017</X>
          <Y>1532</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="6" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="6" second="19">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="29" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="2" second="30">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2116</X>
          <Y>2335</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="3" second="30">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="4" second="30">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2326</X>
          <Y>2335</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="30" second="31">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2414</X>
          <Y>2187</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2691</X>
          <Y>1956</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="30" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="30" second="32">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="33" second="32">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1453</X>
          <Y>2342</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="34" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2106</X>
          <Y>1791</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2139</X>
          <Y>1746</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="35" second="32">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="37" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2272</X>
          <Y>494</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="37" second="36">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="16" second="30">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2414</X>
          <Y>2270</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="40" second="39">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="40" second="41">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2573</X>
          <Y>1272</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="43" second="42">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3086</X>
          <Y>1161</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3024</X>
          <Y>1161</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="44" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2682</X>
          <Y>1687</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="45" second="43">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3426</X>
          <Y>1163</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3345</X>
          <Y>1163</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="46" second="41">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="40" second="42">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="40" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2360</X>
          <Y>1250</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2296</X>
          <Y>1463</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="48">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="38" second="42">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="49" second="48">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="47" second="48">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="14" second="50">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2340</X>
          <Y>656</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="50" second="39">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="51" second="14">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="14" second="26">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="52" second="26">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="30" second="53">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.3.1512.0, Culture=neutral, PublicKeyToken=null">
    <Name>Project - Loader</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>LoaderService</Name>
        <Access>Public</Access>
        <Location left="1011" top="832" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LoaderApplication</Name>
        <Access>Public</Access>
        <Location left="2464" top="824" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Defines the service that handles loading onto the local machine or onto a cluster.</Text>
        <Location left="783" top="896" />
        <Size width="160" height="96" />
      </Entity>
      <Entity type="Comment">
        <Text>Defines the P2P app for loading onto a local machine.</Text>
        <Location left="2701" top="896" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Assume that the whole system is unreliable. The following problems can occur:
- The client machine (apollo.core owner) can go down. Then the slaves are without an originator.
- The server (apollo.core.loaderXXX) can go down. Then the client and the slaves are without link
- The slave (apollo.core.dataset) can go down. Then the data is gone
- The network connection can drop. None of the machines disappear but if the connection is gone long enough / in the critical moment then we either lose data or identity.</Text>
        <Location left="10" top="10" />
        <Size width="391" height="216" />
      </Entity>
      <Entity type="Comment">
        <Text>Which commands do we need?
- Ping
- Propose distribution
- Load dataset
- Unload dataset</Text>
        <Location left="10" top="229" />
        <Size width="391" height="133" />
      </Entity>
      <Entity type="Class">
        <Name>MessageHub</Name>
        <Access>Public</Access>
        <Location left="1657" top="585" />
        <Size width="366" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public TProxy CommandsFor&lt;TProxy&gt;(EndPointId endpoint)</Member>
        <Member type="Method">public void RegisterRequestHandler(RequestId id, Action handler)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Dispatches incomming messages to the correct recipient.</Text>
        <Location left="1777" top="431" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Need to be able to broadcast that we're on the network and that we're getting off the network.</Text>
        <Location left="1747" top="791" />
        <Size width="181" height="90" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we allow slaves to report to the service that they're ready to work?</Text>
        <Location left="818" top="681" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Need a list of all available machines with their specs etc.</Text>
        <Location left="783" top="1064" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>All loaders should be able to process loading requests and respond with a plan that indicates how the dataset will be distributed etc.. The plan should have loading times, processing times etc.. This would allow the client to determine which solution is best for them, while still allowing the loaders to have control over their own domain.</Text>
        <Location left="1698" top="938" />
        <Size width="270" height="168" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we need to define how to contact the machine? We may need a specific username or port?</Text>
        <Location left="444" top="1933" />
        <Size width="203" height="102" />
      </Entity>
      <Entity type="Class">
        <Name>HardwareSpecification</Name>
        <Access>Public</Access>
        <Location left="818" top="2171" />
        <Size width="341" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public long MemoryInKb { get; }</Member>
        <Member type="Property">public IEnumerable&lt;DiskSpecification&gt; AvailableDisks { get; }</Member>
        <Member type="Property">public IEnumerable&lt;ProcessorSpecification&gt; Processors { get; }</Member>
        <Member type="Property">public IEnumerable&lt;NetworkSpecification&gt; Network { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BaseLine</Name>
        <Access>Public</Access>
        <Location left="804" top="1250" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public BaseLineId Id { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>A baseline is a known dataset with known behavior that is used to get a performance baseline for a given machine.</Text>
        <Location left="466" top="1305" />
        <Size width="205" height="90" />
      </Entity>
      <Entity type="Class">
        <Name>MachineFarm</Name>
        <Access>Public</Access>
        <Location left="828" top="1654" />
        <Size width="322" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public Machine Machine(MachineId id)</Member>
        <Member type="Method">public IEnumerable&lt;Machine&gt; Machines()</Member>
        <Member type="Method">public IEnumerable&lt;BaseLine&gt; BaseLinesFor(MachineId id)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Somehow we need to define which machines we can look at. Most machines will not handle their own proposals etc.</Text>
        <Location left="444" top="1671" />
        <Size width="160" height="111" />
      </Entity>
      <Entity type="Comment">
        <Text>The goal for the loaders is to provide a set of distribution proposals based on a given distribution requirement. The loaders will create one distribution plan for each dataset that must be distributed. This allows smaller machines to be used even if they're not able to handle all of the datasets in the distribution request.</Text>
        <Location left="10" top="367" />
        <Size width="387" height="110" />
      </Entity>
      <Entity type="Comment">
        <Text>Note that the final distribution of the jobs sounds like a tricky piece of work. We have to decide which jobs to give to what machines so that the overall run-time is lowest. However this depends on many things. For instance:
- Machines may be physically further away and thus require more time for transfer (which would suit smaller jobs instead of one bigger job).
- A cluster may be better suited to handle the whole set of calculations if we need intra-dataset communication.</Text>
        <Location left="10" top="480" />
        <Size width="387" height="179" />
      </Entity>
      <Entity type="Class">
        <Name>Machine</Name>
        <Access>Public</Access>
        <Location left="894" top="1893" />
        <Size width="195" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public MachineId Id { get; }</Member>
        <Member type="Property">public string DomainName { get; }</Member>
        <Member type="Property">public bool IsLocalMachine { get; }</Member>
        <Member type="Property">public bool IsPartOfGroup { get; }</Member>
        <Member type="Property">public string GroupIdentifier { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>If we want to allow clusters to work efficiently then we should be able to pass the job off to the cluster. That means that the service should handle the exact distribution.</Text>
        <Location left="922" top="429" />
        <Size width="209" height="114" />
      </Entity>
      <Entity type="Comment">
        <Text>This is possible if we make sure that the hosts just return a proposal. The service can then keep track of the work the hosts are doing etc.</Text>
        <Location left="1207" top="429" />
        <Size width="192" height="114" />
      </Entity>
      <Entity type="Class">
        <Name>Distributor</Name>
        <Access>Public</Access>
        <Location left="1784" top="1212" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Note that by the time we get all the plans back some of them may well be invalid.
How are we going to deal with that?</Text>
        <Location left="1262" top="1678" />
        <Size width="197" height="114" />
      </Entity>
      <Entity type="Class">
        <Name>MachineRef</Name>
        <Access>Public</Access>
        <Location left="1641" top="1940" />
        <Size width="195" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public MachineId Id { get; }</Member>
        <Member type="Property">public string DomainName { get; }</Member>
        <Member type="Property">public bool IsLocalMachine { get; }</Member>
        <Member type="Property">public bool IsPartOfGroup { get; }</Member>
        <Member type="Property">public string GroupIdentifier { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DistributionPlan</Name>
        <Access>Public</Access>
        <Location left="1583" top="1618" />
        <Size width="319" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DatasetId DistributionFor { get; }</Member>
        <Member type="Method">public IEnumerable&lt;Machine&gt; MachinesToDistributeTo()</Member>
        <Member type="Property">public TimeSpan EstimatedTransferTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedLoadingTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedRunningTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedUnloadingTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedReturnTransferTime { get; }</Member>
        <Member type="Property">public DateTimeOffset EarliestStartTime { get; }</Member>
        <Member type="Property">public DateTimeOffset EarliestEstimatedFinnishTime { get; }</Member>
        <Member type="Method">public IEnumerable&lt;DatasetOnlineInformation&gt; Accept()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>The catch is that the child dataset(s) may or may not exist at this point. If the children are independent then we could potentially make them before the loading request. If the children are part of a domain decomposition then we can't because it depends on the available resources.</Text>
        <Location left="3013" top="1712" />
        <Size width="211" height="171" />
      </Entity>
      <Entity type="Enum">
        <Name>PreferredLoadingLocation</Name>
        <Access>Public</Access>
        <Location left="2463" top="2104" />
        <Size width="172" height="146" />
        <Collapsed>False</Collapsed>
        <Value>None</Value>
        <Value>Local</Value>
        <Value>Distributed</Value>
        <Value>DistributedOnPeerToPeer</Value>
        <Value>DistributedOnCluster</Value>
      </Entity>
      <Entity type="Comment">
        <Text>Defines how 'complex' a dataset is with respect to machine load (memory, CPU, HDD etc.)</Text>
        <Location left="3081" top="2074" />
        <Size width="183" height="95" />
      </Entity>
      <Entity type="Structure">
        <Name>ExpectedDatasetLoad</Name>
        <Access>Public</Access>
        <Location left="2685" top="2042" />
        <Size width="304" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public long OnDiskSize { get; }</Member>
        <Member type="Property">public long InMemorySize { get; }</Member>
        <Member type="Property">public BaseLineId BaseLine { get; }</Member>
        <Member type="Property">public double RelativeMemoryRunningExpansion { get; }</Member>
        <Member type="Property">public double RelativeOnDiskExpansion { get; }</Member>
        <Member type="Property">public double RelativeRunningLoad { get; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>DatasetRequest</Name>
        <Access>Public</Access>
        <Location left="2531" top="1696" />
        <Size width="360" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DatasetOfflineInformation DatasetToLoad { get; }</Member>
        <Member type="Property">public DatasetId Parent { get; }</Member>
        <Member type="Property">public bool ProvideParentWithHubConnection { get; }</Member>
        <Member type="Property">public bool IsIntraDatasetCommunicationRequired { get; }</Member>
        <Member type="Property">public int MaximumNumberOfParallelBlocks { get; }</Member>
        <Member type="Property">public ExpectedDatasetLoad ExpectedLoadPerMachine { get; }</Member>
        <Member type="Property">public LoadingLocation PreferredLoadingLocation { get; }</Member>
        <Member type="Property">public MachineDistributionRange DesiredDistributionRange { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Comment" first="2" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="3" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="7" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="0" second="6">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1632</X>
          <Y>641</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="1" second="6">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2088</X>
          <Y>636</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Comment" first="8" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="9" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1051</X>
          <Y>807</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="10" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>986</X>
          <Y>993</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="11" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="11" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="15" second="14">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>710</X>
          <Y>1370</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>774</X>
          <Y>1370</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="17" second="16">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="16" second="20">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="20" second="13">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="12" second="20">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="21" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="22" second="21">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="24" second="26">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="26" second="25">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="27" second="31">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="31" second="28">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="29" second="30">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="31" second="30">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="25" second="20">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>