<Project>
  <Name>Scheduling system</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Scheduling - overview</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IProcessSchedule</Name>
        <Access>Internal</Access>
        <Location left="1611" top="719" />
        <Size width="221" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Property">ScheduleId Id { get; }</Member>
        <Member type="Property">bool IsBeingExecuted { get; }</Member>
        <Member type="Property">bool IsLocked { get; }</Member>
        <Member type="Method">LockToken Lock()</Member>
        <Member type="Method">void Unlock(LockToken key)</Member>
        <Member type="Property">IScheduleGraphVertex Start { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IScheduleGraphVertex</Name>
        <Access>Internal</Access>
        <Location left="1013" top="1373" />
        <Size width="346" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Property">IEnumerable&lt;ScheduleGraphEdge&gt; IncomingEdges { get; }</Member>
        <Member type="Property">IEnumerable&lt;ScheduleGraphEdge&gt; OutgoingEdges { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IExecutor</Name>
        <Access>Public</Access>
        <Location left="1119" top="469" />
        <Size width="363" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">ExecutionToken Execute(IProcessSchedule scheduleToExecute)</Member>
      </Entity>
      <Entity type="Class">
        <Name>ProcessSchedule</Name>
        <Access>Internal</Access>
        <Location left="1611" top="995" />
        <Size width="226" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly ScheduleGraphStartNode m_Start</Member>
        <Member type="Field">private readonly ScheduleGraphEndNode m_End</Member>
        <Member type="Property">public ScheduleId Id { get; }</Member>
        <Member type="Property">public bool IsBeingExecuted { get; }</Member>
        <Member type="Property">public bool IsLocked { get; }</Member>
        <Member type="Method">public LockToken Lock()</Member>
        <Member type="Method">public void Unlock(LockToken key)</Member>
        <Member type="Property">public IScheduleGraphVertex Start { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>The graph always starts at a start node and always ends at an end node. 
Start and end nodes cannot have an action.
Also a start node does not have any parents and an end node does not have any children.</Text>
        <Location left="1049" top="994" />
        <Size width="228" height="134" />
      </Entity>
      <Entity type="Class">
        <Name>ScheduleGraphEdge</Name>
        <Access>Internal</Access>
        <Location left="1683" top="1373" />
        <Size width="226" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IScheduleGraphVertex Start { get; }</Member>
        <Member type="Property">public IScheduleGraphVertex End { get; }</Member>
        <Member type="Method">public bool CanTraverse()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleGraphActionNode</Name>
        <Access>Internal</Access>
        <Location left="365" top="1628" />
        <Size width="355" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IEnumerable&lt;ScheduleGraphEdge&gt; IncomingEdges { get; }</Member>
        <Member type="Property">public IEnumerable&lt;ScheduleGraphEdge&gt; OutgoingEdges { get; }</Member>
        <Member type="Property">public Action Action { get; }</Member>
        <Member type="Property">public bool IsValid { get; }</Member>
        <Member type="Method">public void Invalidate()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleGraphStartNode</Name>
        <Access>Internal</Access>
        <Location left="1184" top="1165" />
        <Size width="355" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IEnumerable&lt;ScheduleGraphEdge&gt; IncomingEdges { get; }</Member>
        <Member type="Property">public IEnumerable&lt;ScheduleGraphEdge&gt; OutgoingEdges { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleGraphEndNode</Name>
        <Access>Internal</Access>
        <Location left="796" top="1165" />
        <Size width="355" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IEnumerable&lt;ScheduleGraphEdge&gt; IncomingEdges { get; }</Member>
        <Member type="Property">public IEnumerable&lt;ScheduleGraphEdge&gt; OutgoingEdges { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleGraphGroupNode</Name>
        <Access>Internal</Access>
        <Location left="986" top="1783" />
        <Size width="355" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IEnumerable&lt;ScheduleGraphEdge&gt; IncomingEdges { get; }</Member>
        <Member type="Property">public IEnumerable&lt;ScheduleGraphEdge&gt; OutgoingEdges { get; }</Member>
        <Member type="Property">public IProcessSchedule SubSchedule { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IHaveActions</Name>
        <Access>Internal</Access>
        <Location left="448" top="1873" />
        <Size width="163" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">Action Action { get; }</Member>
        <Member type="Property">bool IsValid { get; }</Member>
        <Member type="Method">void Invalidate()</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IHaveSubSchedules</Name>
        <Access>Internal</Access>
        <Location left="1040" top="1999" />
        <Size width="235" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Property">IProcessSchedule SubSchedule { get; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>ExecutorPool</Name>
        <Access>Internal</Access>
        <Location left="1103" top="719" />
        <Size width="375" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public ExecutionToken Execute(IProcessSchedule scheduleToExecute)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ExecutionToken</Name>
        <Access>Public</Access>
        <Location left="94" top="656" />
        <Size width="175" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public bool IsTokenValid { get; }</Member>
        <Member type="Method">public void Start()</Member>
        <Member type="Method">public void Pause()</Member>
        <Member type="Method">public void Stop()</Member>
        <Member type="Method">public void Terminate()</Member>
        <Member type="Property">public bool IsRunning { get; }</Member>
        <Member type="Property">public bool IsPaused { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleExecutor</Name>
        <Access>Internal</Access>
        <Location left="452" top="685" />
        <Size width="336" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public ScheduleExecutor(IProcessSchedule scheduleToExecute)</Member>
        <Member type="Property">public ExecutionToken Token { get; }</Member>
        <Member type="Method">public void Start()</Member>
        <Member type="Method">public void Pause()</Member>
        <Member type="Method">public void Stop(bool terminateImmediately)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Serializable</Text>
        <Location left="133" top="536" />
        <Size width="82" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>Lock should lock everything. Schedule and components.</Text>
        <Location left="1981" top="763" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Using actions also allows us to exchange components etc.. However we'll have to remember to invoke actions on in a way that allows components to be replaced.</Text>
        <Location left="144" top="1877" />
        <Size width="188" height="119" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we need an insert node too? This allows insertion of schedules for specific conditions. The inserted schedule becomes 'part' of the current schedule graph.</Text>
        <Location left="1259" top="1587" />
        <Size width="233" height="110" />
      </Entity>
      <Entity type="Comment">
        <Text>Can handle the different blocks the same way we're handling the messages in the communication system. Each block has its own execution object. Then we only have to search for the correct execution object.</Text>
        <Location left="369" top="469" />
        <Size width="280" height="115" />
      </Entity>
      <Entity type="Comment">
        <Text>Need to indicate if we can move this to another (child) dataset.</Text>
        <Location left="1388" top="1999" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Action nodes need to indicate what variables they get the values for?</Text>
        <Location left="701" top="1845" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Need:
- Verification of the graph
- Node processors
- Schedule ordering / reordering</Text>
        <Location left="716" top="469" />
        <Size width="243" height="115" />
      </Entity>
      <Entity type="Comment">
        <Text>Need some way of storing schedule building blocks.</Text>
        <Location left="1641" top="488" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Nodes may need:
- Dependencies
- Data produced
- Allow running on child dataset
- Allow running in parallel
- Creation conditions (e.g. parameters?)</Text>
        <Location left="416" top="1260" />
        <Size width="271" height="123" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we allow farming calcs out to other datasets if we're running in interactive mode?</Text>
        <Location left="281" top="1015" />
        <Size width="190" height="77" />
      </Entity>
      <Entity type="Comment">
        <Text>Instead of having different types of nodes should we just have one node type with an ID that points to the action we want to execute? That would make the graph simpler and we could easily exchange the type of action we want.
Note: we shouldn't point straight to the library but to a schedule specific collection!</Text>
        <Location left="825" top="1542" />
        <Size width="281" height="147" />
      </Entity>
      <Entity type="Comment">
        <Text>Where is all this going to live?
- Interfaces in Apollo.Core
- Implementations mainly in Apollo.Dataset except for the actual graph itself? Or are we going to mirror that?</Text>
        <Location left="10" top="10" />
        <Size width="265" height="100" />
      </Entity>
      <Entity type="Comment">
        <Text>How do we deal with dependencies?</Text>
        <Location left="553" top="107" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Interface">
        <Name>IScheduleDependency</Name>
        <Access>Public</Access>
        <Location left="879" top="107" />
        <Size width="162" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IVariableScheduleDependency</Name>
        <Access>Public</Access>
        <Location left="1201" top="42" />
        <Size width="187" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IActionScheduleDependency</Name>
        <Access>Public</Access>
        <Location left="1201" top="168" />
        <Size width="178" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Class">
        <Name>DependencyResolver</Name>
        <Access>Public</Access>
        <Location left="879" top="286" />
        <Size width="162" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Realization" first="3" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="3" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1639</X>
          <Y>1235</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1408</X>
          <Y>1396</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="3" second="5">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1788</X>
          <Y>1233</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="5" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="7" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1301</X>
          <Y>1302</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1301</X>
          <Y>1346</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="8" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1050</X>
          <Y>1343</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="6" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>531</X>
          <Y>1603</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>988</X>
          <Y>1445</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="9" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="4" second="7">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1302</X>
          <Y>1060</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1366</X>
          <Y>1140</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="4" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1018</X>
          <Y>1067</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>950</X>
          <Y>1140</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="6" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="9" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="12" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="12" second="14">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="13" second="14">
        <Label>via ID</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="15" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="16" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="17" second="10">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="18" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1308</X>
          <Y>1493</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="19" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="20" second="11">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="21" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>780</X>
          <Y>1816</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>748</X>
          <Y>1775</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="21" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>921</X>
          <Y>1893</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="22" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="23" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="24" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="26" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1108</X>
          <Y>1493</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="14" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>598</X>
          <Y>872</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1661</X>
          <Y>912</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="28" second="29">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="30" second="29">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1066</X>
          <Y>121</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="31" second="29">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1066</X>
          <Y>153</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="19" second="32">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>841</X>
          <Y>320</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="32" second="29">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>