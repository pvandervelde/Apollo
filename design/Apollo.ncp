<Project>
  <Name>Apollo</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Kernel - Licensing</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Structure">
        <Name>VerificationSequence</Name>
        <Access>Internal</Access>
        <Location left="796" top="1358" />
        <Size width="220" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public TimePeriod Period { get; }</Member>
        <Member type="Property">public DateTimeOffset StartedOn { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ICacheProxyHolder</Name>
        <Access>Internal</Access>
        <Location left="1898" top="1368" />
        <Size width="297" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Store(ILicenseVerificationCacheProxy proxy)</Member>
      </Entity>
      <Entity type="Structure">
        <Name>Checksum</Name>
        <Access>Internal</Access>
        <Location left="1549" top="69" />
        <Size width="570" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string m_Base64Hash</Member>
        <Member type="Constructor">public Checksum(string validationResult, DateTimeOffset generationTime, DateTimeOffset expirationTime)</Member>
        <Member type="Property">public string ValidationHash { get; }</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
      </Entity>
      <Entity type="Class">
        <Name>LicenseValidationCache</Name>
        <Access>Internal</Access>
        <Location left="1464" top="1301" />
        <Size width="303" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void Store(ILicenseVerificationCacheProxy proxy)</Member>
        <Member type="Property">public LicenseCheckResult LatestResult { get; }</Member>
        <Member type="Property">public DateTimeOffset LastVerificationTime { get; }</Member>
        <Member type="Method">public void Invalidate(TimePeriod nextExpiration)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>The verification that the thread is alive can be done by using a watch-dog that looks at a specific variable. The best solution is probably to set a DateTimeOffset object to the last time the thread updated the variable.</Text>
        <Location left="248" top="1524" />
        <Size width="190" height="150" />
      </Entity>
      <Entity type="Comment">
        <Text>Start this with use of the DI container. However we'll need some way of verifying that it is actually active. If it's not active then we need to bail.</Text>
        <Location left="248" top="1323" />
        <Size width="190" height="106" />
      </Entity>
      <Entity type="Comment">
        <Text>Does this store validation result structs? Or does it point to a central collection?

Store structs everywhere is probably better because that spreads the knowledge and makes it harder to track back.
                </Text>
        <Location left="1659" top="796" />
        <Size width="181" height="159" />
      </Entity>
      <Entity type="Enum">
        <Name>RepeatPeriod</Name>
        <Access>Internal</Access>
        <Location left="817" top="1846" />
        <Size width="163" height="163" />
        <Collapsed>False</Collapsed>
        <Value>Hourly</Value>
        <Value>Daily</Value>
        <Value>Weekly</Value>
        <Value>Fortnightly</Value>
        <Value>Monthly</Value>
        <Value>Yearly</Value>
      </Entity>
      <Entity type="Comment">
        <Text>Time periods can span anything from a few minutes to months / years. They may start from:
- Application start
- A specific date / time
                </Text>
        <Location left="1115" top="1614" />
        <Size width="235" height="104" />
      </Entity>
      <Entity type="Structure">
        <Name>TimePeriod</Name>
        <Access>Internal</Access>
        <Location left="796" top="1637" />
        <Size width="220" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public RepeatPeriod RepeatEvery { get; }</Member>
        <Member type="Property">public sbyte RepeatModifier { get; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>LicenseValidator</Name>
        <Access>Internal</Access>
        <Location left="1077" top="1031" />
        <Size width="248" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void Verify()</Member>
        <Member type="Method">public void Verify(TimePeriod nextExpiration)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ValidationService</Name>
        <Access>Internal</Access>
        <Location left="563" top="1126" />
        <Size width="163" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void StartValidation()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>The worry is that we'll have so many calls to the validation routine that we'll swamp the system and we'll only be doing those checks. Solutions are:
- Make sure the validation call returns quickly.
- Don't make tons of calls to the actual validation routine, however we must also make sure that we have some calls to the routine.
                </Text>
        <Location left="1850" top="1149" />
        <Size width="291" height="175" />
      </Entity>
      <Entity type="Comment">
        <Text>Stores the last verification time and the last verification result. Also stores the verification check that was executed (time based, key based etc.)</Text>
        <Location left="1898" top="829" />
        <Size width="188" height="112" />
      </Entity>
      <Entity type="Interface">
        <Name>ILicenseValidationCache</Name>
        <Access>Internal</Access>
        <Location left="1464" top="1031" />
        <Size width="269" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">LicenseCheckResult LatestResult { get; }</Member>
        <Member type="Property">DateTimeOffset LastVerificationTime { get; }</Member>
        <Member type="Method">void Invalidate(TimePeriod nextExpiration)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IValidationService</Name>
        <Access>Internal</Access>
        <Location left="563" top="935" />
        <Size width="163" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void StartValidation()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Has a collection of delegates. Run a small pool of threads that execute these delegates when they are ready. Run a single thread that checks when the delegates should be scheduled.</Text>
        <Location left="248" top="1110" />
        <Size width="204" height="124" />
      </Entity>
      <Entity type="Comment">
        <Text>The expiration time should be random but within a range. The range is determined by the validation reason (e.g. requested by a component or requested by a time based validator)</Text>
        <Location left="1597" top="309" />
        <Size width="212" height="116" />
      </Entity>
      <Entity type="Comment">
        <Text>The verifier then checks if the license was checked recently (say in the last minute or some other random time). If this is the case then nothing happens. If this is not the case then we verify. Verification always is done on a separate thread and we check the return of the thread (must be within X time, otherwise we assume it failed)</Text>
        <Location left="1216" top="763" />
        <Size width="254" height="151" />
      </Entity>
      <Entity type="Comment">
        <Text>How do we make sure that the Expiration time isn't set to something stupid?  Use the checksum?</Text>
        <Location left="580" top="166" />
        <Size width="200" height="92" />
      </Entity>
      <Entity type="Comment">
        <Text>Owned by service</Text>
        <Location left="951" top="125" />
        <Size width="160" height="50" />
      </Entity>
      <Entity type="Delegate">
        <Name>LicenseResultUpdated</Name>
        <Access>Internal</Access>
        <Location left="1269" top="309" />
        <Size width="202" height="95" />
        <Collapsed>False</Collapsed>
        <ReturnType>void</ReturnType>
        <Param>Checksum checksum</Param>
        <Param>DateTimeOffset expirationTime</Param>
      </Entity>
      <Entity type="Comment">
        <Text>There will be multiple verification delegates and interfaces. However not every 'service' will link to all of them.</Text>
        <Location left="1093" top="480" />
        <Size width="213" height="85" />
      </Entity>
      <Entity type="Comment">
        <Text>Everytime we do something important we check if the license is about to expire (say within 5 seconds). If it is then we mark it and request a verification.</Text>
        <Location left="580" top="281" />
        <Size width="200" height="110" />
      </Entity>
      <Entity type="Structure">
        <Name>LicenseCheckResult</Name>
        <Access>Internal</Access>
        <Location left="905" top="281" />
        <Size width="247" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DateTimeOffset Generated { get; }</Member>
        <Member type="Property">public DateTimeOffset Expires { get; }</Member>
        <Member type="Property">public Checksum Checksum { get; }</Member>
      </Entity>
      <Entity type="Comment">
        <Text>The licensing system could work like this:
- If a verifier finds that a license code is not valid then it will send out a message to the service to notify it of a failed license check.
- Verification happens on request but also when one or more timers go to signaled mode.
- We also need to check that the verification code actually runs once every so much time, otherwise people could just comment out the calls.
                </Text>
        <Location left="666" top="607" />
        <Size width="270" height="184" />
      </Entity>
      <Entity type="Comment">
        <Text>Generate theses through T4</Text>
        <Location left="1077" top="1313" />
        <Size width="190" height="50" />
      </Entity>
      <Entity type="Interface">
        <Name>ILicenseValidator</Name>
        <Access>Internal</Access>
        <Location left="1077" top="636" />
        <Size width="244" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Verify()</Member>
        <Member type="Method">void Verify(TimePeriod nextExpiration)</Member>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="15" second="27">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1135</X>
          <Y>756</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="25" second="27">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="0" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="11" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>751</X>
          <Y>1191</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>914</X>
          <Y>1333</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="3" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="26" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="3" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="26" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1168</X>
          <Y>1167</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="5" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="5" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="6" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1758</X>
          <Y>1067</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="8" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="9" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="18" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1351</X>
          <Y>939</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1236</X>
          <Y>1006</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="10" second="14">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="10" second="27">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="16" second="11">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="11" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="12" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2015</X>
          <Y>1124</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1774</X>
          <Y>1107</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="13" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1989</X>
          <Y>966</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1758</X>
          <Y>1079</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="17" second="21">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1572</X>
          <Y>349</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1496</X>
          <Y>349</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="19" second="24">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>876</X>
          <Y>306</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="20" second="24">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="27" second="21">
        <Label>If check passes</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1346</X>
          <Y>676</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1352</X>
          <Y>429</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="21" second="24">
        <Label>sets</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="22" second="27">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="23" second="24">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Metadata</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Comment">
        <Text>Some meta-data is fixed at compile time, some is only determined at run-time</Text>
        <Location left="10" top="10" />
        <Size width="182" height="82" />
      </Entity>
      <Entity type="Comment">
        <Text>Allow proxy-ing of meta-data. This allows users to forward meta-data of sub-elements and add their own.</Text>
        <Location left="10" top="105" />
        <Size width="160" height="100" />
      </Entity>
      <Entity type="Comment">
        <Text>Allow dynamic updates of all meta-data including the compile time ones</Text>
        <Location left="10" top="213" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>- Attribute – Adds meta-data element to a component
- Constraint – Constrains and element to …
- Condition – Element can only be used if the condition is true
- Info / Description – Stores name, helptip, helpURL etc.
- Tag – For random use
                </Text>
        <Location left="221" top="10" />
        <Size width="353" height="100" />
      </Entity>
    </Entities>
    <Relationships />
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Numerics - Materials</Name>
    <Language>CSharp</Language>
    <Entities />
    <Relationships />
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Numerics - Models</Name>
    <Language>CSharp</Language>
    <Entities />
    <Relationships />
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Numerics - Regions</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IRegion</Name>
        <Access>Public</Access>
        <Location left="427" top="149" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IBoundary</Name>
        <Access>Public</Access>
        <Location left="782" top="146" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Numerics - Variables</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Comment">
        <Text>
                    Mark variables as stored / calculated to indicate how the value is determined.
                </Text>
        <Location left="1349" top="624" />
        <Size width="199" height="75" />
      </Entity>
      <Entity type="Interface">
        <Name>IProcessSchedule</Name>
        <Access>Internal</Access>
        <Location left="1845" top="1456" />
        <Size width="221" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Property">ScheduleId Id { get; }</Member>
        <Member type="Property">bool IsBeingExecuted { get; }</Member>
        <Member type="Property">bool IsLocked { get; }</Member>
        <Member type="Method">LockToken Lock()</Member>
        <Member type="Method">void Unlock(LockToken key)</Member>
        <Member type="Property">IScheduleGraphVertex Start { get; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>Variable</Name>
        <Access>Public</Access>
        <Location left="886" top="648" />
        <Size width="245" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public VariableId Id { get; }</Member>
        <Member type="Property">public Range Range { get; }</Member>
        <Member type="Property">public Accessor Value { get; }</Member>
        <Member type="Property">public Quantity Quantity { get; }</Member>
        <Member type="Property">public TensorType Type { get; }</Member>
        <Member type="Method">public IEnumerable&lt;VariableAlias&gt; Aliasses()</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Accessor</Name>
        <Access>Public</Access>
        <Location left="1294" top="1039" />
        <Size width="270" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static implicit operator double(Accessor accessor)</Member>
        <Member type="Method">public static implicit operator Vector(Accessor accessor)</Member>
        <Member type="Method">public static implicit operator Matrix(Accessor accessor)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ProcessScheduleCalculator</Name>
        <Access>Internal</Access>
        <Location left="1904" top="1244" />
        <Size width="167" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ExpressionCalculator</Name>
        <Access>Internal</Access>
        <Location left="2088" top="1244" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IVariable</Name>
        <Access>Public</Access>
        <Location left="886" top="232" />
        <Size width="244" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Property">VariableId Id { get; }</Member>
        <Member type="Property">Range Range { get; }</Member>
        <Member type="Property">Accessor Value { get; }</Member>
        <Member type="Property">Quantity Quantity { get; }</Member>
        <Member type="Property">TensorType Type { get; }</Member>
        <Member type="Method">IEnumerable&lt;VariableAlias&gt; Aliasses()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>
                    Variables should have a level number which indicates e.g. solve order. e.g.:
                    - lvl 1: time
                    - lvl 2: x, y, z
                    This means the iteration will run over x,y,z in each time step.
                </Text>
        <Location left="509" top="232" />
        <Size width="253" height="120" />
      </Entity>
      <Entity type="Comment">
        <Text>Aliasing variables shuld also allow for linking of variables. This allows for instance the creation of periodic boundary conditions by linking both sides of the domain</Text>
        <Location left="30" top="1065" />
        <Size width="223" height="105" />
      </Entity>
      <Entity type="Comment">
        <Text>Free variable or not? A free variable is not controlled by an expression of some sorts. This allows the user to select a value for it.</Text>
        <Location left="836" top="30" />
        <Size width="169" height="108" />
      </Entity>
      <Entity type="Comment">
        <Text>Default value?</Text>
        <Location left="1480" top="1219" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Defines the type of the variable: scalar, vector, matrix. Also defines how to get access to it.</Text>
        <Location left="644" top="1246" />
        <Size width="177" height="90" />
      </Entity>
      <Entity type="Class">
        <Name>TensorType</Name>
        <Access>Public</Access>
        <Location left="927" top="1080" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Quantity</Name>
        <Access>Public</Access>
        <Location left="550" top="671" />
        <Size width="172" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; }</Member>
        <Member type="Property">public Symbol SISymbol { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>
                    How do we deal with error information. We should be able to set a tolerance on each variable.

                    Also we'll need some way of storing the error with the variable (e.g. +- 0.01)
                </Text>
        <Location left="1286" top="232" />
        <Size width="253" height="123" />
      </Entity>
      <Entity type="Comment">
        <Text>Define variables to be tensors. Define size (scalar, vector, tensor + size). Allow definition of sub-variables which define the individual tensor elements</Text>
        <Location left="624" top="1386" />
        <Size width="207" height="106" />
      </Entity>
      <Entity type="Comment">
        <Text>Provide directed variables as well --&gt; variables that are linked to a tensor system (e.g. a coordinate system). Provide information about which part of the tensor the variables is linked to</Text>
        <Location left="1023" top="30" />
        <Size width="253" height="106" />
      </Entity>
      <Entity type="Comment">
        <Text>
                    Location indicates if a variable is stored or calculated.

                    Calculated variables can provide a use-caching equation which will be used to determine if caching the value is useful.
                </Text>
        <Location left="1680" top="624" />
        <Size width="325" height="113" />
      </Entity>
      <Entity type="Class">
        <Name>Location</Name>
        <Access>Public</Access>
        <Location left="1349" top="781" />
        <Size width="162" height="85" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>
                    Defines the range of the variable. Can be:
                    - x &lt; range &lt; y
                    - always positive
                    - Always smaller than x
                    - Set of values (e.g. all odd numbers between 4 and 21)
                    - Expression
                </Text>
        <Location left="190" top="423" />
        <Size width="325" height="118" />
      </Entity>
      <Entity type="Class">
        <Name>Range</Name>
        <Access>Public</Access>
        <Location left="625" top="423" />
        <Size width="162" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public bool IsInRange { get; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Symbol</Name>
        <Access>Public</Access>
        <Location left="259" top="671" />
        <Size width="162" height="85" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Defines the way the variable value is obtained. this could be a calculation, a schedule or a sub-dataset</Text>
        <Location left="1246" top="1219" />
        <Size width="208" height="85" />
      </Entity>
      <Entity type="Comment">
        <Text>
                    Indicates which other variables are equivalent to this variable.

                    Equivalent variables can share information?

                    Note that equivalent variables can be done through a transform x = y
                </Text>
        <Location left="30" top="863" />
        <Size width="325" height="136" />
      </Entity>
      <Entity type="Comment">
        <Text>Defines zero or more calculators that are used to provide values for the variable based on the presence of other variables</Text>
        <Location left="2139" top="874" />
        <Size width="194" height="85" />
      </Entity>
      <Entity type="Class">
        <Name>Calculator</Name>
        <Access>Public</Access>
        <Location left="1990" top="1039" />
        <Size width="162" height="85" />
        <Collapsed>False</Collapsed>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>VariableId</Name>
        <Access>Public</Access>
        <Location left="1125" top="437" />
        <Size width="162" height="85" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>VariableAlias</Name>
        <Access>Public</Access>
        <Location left="464" top="903" />
        <Size width="276" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public VariableId IdOfAliasesVariable { get; }</Member>
        <Member type="Property">public Expression TransformationExpression { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Comment" first="9" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>943</X>
          <Y>207</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="16" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1082</X>
          <Y>207</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="14" second="6">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="7" second="6">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="0" second="18">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="2" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="3" second="18">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="4" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="22" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="10" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1502</X>
          <Y>1194</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="2" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="2" second="27">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>814</X>
          <Y>809</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>588</X>
          <Y>870</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="2" second="13">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="2" second="26">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1156</X>
          <Y>712</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1214</X>
          <Y>547</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="2" second="20">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>918</X>
          <Y>601</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="2" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1002</X>
          <Y>609</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1002</X>
          <Y>420</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="3" second="25">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="5" second="25">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2104</X>
          <Y>1149</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="4" second="25">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2048</X>
          <Y>1149</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="23" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="11" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="11" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>739</X>
          <Y>1221</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="13" second="21">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>512</X>
          <Y>727</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>498</X>
          <Y>727</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="17" second="18">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1655</X>
          <Y>666</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1555</X>
          <Y>826</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="19" second="20">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>540</X>
          <Y>469</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>599</X>
          <Y>469</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="23" second="27">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>380</X>
          <Y>948</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>439</X>
          <Y>947</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="24" second="25">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2114</X>
          <Y>919</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2067</X>
          <Y>999</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Project - Batch runner</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Comment">
        <Text>Should be able to pick up a project and run information and then run the desired datasets.</Text>
        <Location left="10" top="484" />
        <Size width="176" height="91" />
      </Entity>
      <Entity type="Comment">
        <Text>This is possible if we make sure that the hosts just return a proposal. The service can then keep track of the work the hosts are doing etc.</Text>
        <Location left="883" top="330" />
        <Size width="192" height="114" />
      </Entity>
      <Entity type="Comment">
        <Text>If we want to allow clusters to work efficiently then we should be able to pass the job off to the cluster. That means that the service should handle the exact distribution.</Text>
        <Location left="598" top="330" />
        <Size width="209" height="114" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we allow slaves to report to the service that they're ready to work?</Text>
        <Location left="598" top="227" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Need to be able to broadcast that we're on the network and that we're getting off the network.</Text>
        <Location left="1185" top="330" />
        <Size width="181" height="90" />
      </Entity>
      <Entity type="Comment">
        <Text>Dispatches incomming messages to the correct recipient.</Text>
        <Location left="1452" top="344" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>MessageHub</Name>
        <Access>Public</Access>
        <Location left="1218" top="534" />
        <Size width="366" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public TProxy CommandsFor&lt;TProxy&gt;(EndPointId endpoint)</Member>
        <Member type="Method">public void RegisterRequestHandler(RequestId id, Action handler)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Defines the service that handles loading onto the local machine or onto a cluster.</Text>
        <Location left="214" top="248" />
        <Size width="160" height="96" />
      </Entity>
      <Entity type="Class">
        <Name>LoaderService</Name>
        <Access>Public</Access>
        <Location left="323" top="440" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Comment" first="0" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="1" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="2" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>579</X>
          <Y>512</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="3" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>555</X>
          <Y>256</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>440</X>
          <Y>413</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="4" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1285</X>
          <Y>509</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="8" second="6">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>608</X>
          <Y>583</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1190</X>
          <Y>583</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Comment" first="5" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1510</X>
          <Y>509</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="7" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>278</X>
          <Y>375</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>365</X>
          <Y>402</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Project - Communication</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>ICommunicationLayer</Name>
        <Access>Internal</Access>
        <Location left="2364" top="467" />
        <Size width="713" height="265" />
        <Collapsed>False</Collapsed>
        <Member type="Property">EndpointId Id { get; }</Member>
        <Member type="Property">bool IsSignedIn { get; }</Member>
        <Member type="Method">IEnumerable&lt;ChannelConnectionInformation&gt; LocalConnectionPoints()</Member>
        <Member type="Method">void SignIn()</Member>
        <Member type="Method">void SignOut()</Member>
        <Member type="Event">event EventHandler&lt;ConnectionInformationEventArgs&gt; OnEndpointSignedIn</Member>
        <Member type="Event">event EventHandler&lt;EndpointEventArgs&gt; OnEndpointSignedOut</Member>
        <Member type="Method">bool IsEndpointContactable(EndpointId endpoint)</Member>
        <Member type="Method">void ConnectToEndpoint(EndpointId endpoint)</Member>
        <Member type="Method">void SendMessageTo(EndpointId endpoint, ICommunicationMessage message)</Member>
        <Member type="Method">Task&lt;ICommunicationMessage&gt; SendMessageAndWaitForResponse(EndpointId endpoint, ICommunicationMessage message)</Member>
        <Member type="Method">void DisconnectFromEndpoint(EndpointId endpoint)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ICommunicationChannel</Name>
        <Access>Internal</Access>
        <Location left="3663" top="1484" />
        <Size width="1054" height="265" />
        <Collapsed>False</Collapsed>
        <Member type="Property">ChannelConnectionInformation LocalConnectionPoint { get; set; }</Member>
        <Member type="Method">IConnectionInfo OpenChannel()</Member>
        <Member type="Method">void CloseChannel()</Member>
        <Member type="Method">bool HasConnectionTo(EndpointId endpoint)</Member>
        <Member type="Method">void ConnectTo(ChannelConnectionInformation connection)</Member>
        <Member type="Method">void DisconnectFrom(EndpointId endpoint)</Member>
        <Member type="Method">Tuple&lt;StreamTransferInformation, Task&lt;FileInfo&gt;&gt; PrepareForDataReception(string localFile, Action&lt;IProgressMark, long&gt; progressReporter, CancellationToken token, TaskScheduler scheduler)</Member>
        <Member type="Method">Task TransferData(string filePath, StreamTransferInformation transferInformation, Action&lt;IProgressMark, long&gt; progressReporter, CancellationToken token, TaskScheduler scheduler)</Member>
        <Member type="Method">void Send(EndpointId endpoint, ICommunicationMessage messageToSend)</Member>
        <Member type="Event">event EventHandler&lt;ChannelOpenedEventArgs&gt; OnOpened</Member>
        <Member type="Event">event EventHandler&lt;MessageEventArgs&gt; OnReceive</Member>
        <Member type="Event">event EventHandler&lt;ChannelClosedEventArgs&gt; OnClosed</Member>
      </Entity>
      <Entity type="Class">
        <Name>NamedPipeChannel</Name>
        <Access>Internal</Access>
        <Location left="3437" top="2689" />
        <Size width="679" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public Uri GenerateNewChannelUri()</Member>
        <Member type="Method">public string GenerateNewAddress()</Member>
        <Member type="Method">public Binding GenerateBinding()</Member>
        <Member type="Method">public Tuple&lt;StreamTransferInformation, Task&lt;FileInfo&gt;&gt; PrepareForDataReception(string localFile, CancellationToken token)</Member>
        <Member type="Method">public Task TransferData(string filePath, StreamTransferInformation transferInformation, CancellationToken token)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TcpChannel</Name>
        <Access>Internal</Access>
        <Location left="4201" top="2689" />
        <Size width="679" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public Uri GenerateNewChannelUri()</Member>
        <Member type="Method">public string GenerateNewAddress()</Member>
        <Member type="Method">public Binding GenerateBinding()</Member>
        <Member type="Method">public Tuple&lt;StreamTransferInformation, Task&lt;FileInfo&gt;&gt; PrepareForDataReception(string localFile, CancellationToken token)</Member>
        <Member type="Method">public Task TransferData(string filePath, StreamTransferInformation transferInformation, CancellationToken token)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICommunicationMessage</Name>
        <Access>Internal</Access>
        <Location left="842" top="2471" />
        <Size width="244" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">MessageId Id { get; }</Member>
        <Member type="Property">MessageId InResponseTo { get; }</Member>
        <Member type="Property">EndpointId OriginatingEndpoint { get; }</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Need a good abstraction for datastreaming. For named pipes we can share a memory block, but for P2P and TCP we need some streaming download. Probably chunked, restartable and compressed.</Text>
        <Location left="5007" top="2415" />
        <Size width="215" height="142" />
      </Entity>
      <Entity type="Class">
        <Name>MessageId</Name>
        <Access>Internal</Access>
        <Location left="864" top="2304" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>
Should be allowed to start a channel with given connection parameters. This is necessary for:
- Initial start of the dataset application
- Reconnecting to a lost dataset application / service.
                </Text>
        <Location left="3257" top="788" />
        <Size width="265" height="123" />
      </Entity>
      <Entity type="Class">
        <Name>RemoteCommandHub</Name>
        <Access>Public</Access>
        <Location left="477" top="467" />
        <Size width="444" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public IEnumerable&lt;CommandInformationPerEndpoint&gt; AvailableCommands()</Member>
        <Member type="Method">public IEnumerable&lt;Type&gt; AvailableCommandsFor(EndpointId endpoint)</Member>
        <Member type="Event">public event EventHandler&lt;CommandSetAvailabilityEventArgs&gt; OnEndpointSignedIn</Member>
        <Member type="Event">public event EventHandler&lt;EndpointEventArgs&gt; OnEndpointSignedOff</Member>
        <Member type="Method">public bool HasCommandsFor(EndpointId endpoint)</Member>
        <Member type="Method">public bool HasCommandFor(EndpointId endpoint, Type commandInterfaceType)</Member>
        <Member type="Method">public TCommand CommandsFor&lt;TCommand&gt;(EndpointId endpoint)</Member>
        <Member type="Method">public ICommandSet CommandsFor(EndpointId endpoint, Type commandType)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>
Can have a method that returns a facade object. This facade object can then contain all the required methods for sending messages. e.g. there could be a DatasetFacade object which contains all the methods necessary for communicating with the dataset.

This should help fix the problem of messages and needing to have one method per message etc..
                </Text>
        <Location left="967" top="663" />
        <Size width="293" height="172" />
      </Entity>
      <Entity type="Class">
        <Name>CommandSet</Name>
        <Access>Public</Access>
        <Location left="599" top="1143" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommunicationLayer</Name>
        <Access>Internal</Access>
        <Location left="3694" top="533" />
        <Size width="422" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Field">IDictionary&lt;EndpointId, ICommunicationChannel&gt; m_OpenConnections</Member>
        <Member type="Field">IDictionary&lt;EndpointId, IConnectionInformation&gt; m_PotentialEndpoints</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommunicationChannelCommands</Name>
        <Access>Public</Access>
        <Location left="453" top="1378" />
        <Size width="215" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>We can use the protocol buffers to smash the message into a transferable format</Text>
        <Location left="4630" top="1925" />
        <Size width="170" height="96" />
      </Entity>
      <Entity type="Comment">
        <Text>It may well make sense to compress the messages by using a GZIP compression</Text>
        <Location left="4760" top="2930" />
        <Size width="160" height="93" />
      </Entity>
      <Entity type="Comment">
        <Text>We'd like the stream to be resumable so:
- Use a chunking approach
- Check that every chunk arrived correctly and put it on the disk, move on to the next chunk and remember where we were at.
- Possibly can be done in parallel because we don't really care in what order stuff comes in, just that it all arrives in the end.

See:
- http://msdn.microsoft.com/en-us/library/aa717050.aspx
- http://stackoverflow.com/questions/2819081/memorystream-and-large-object-heap
-http://stackoverflow.com/questions/451376/file-download-through-wcf-slower-than-through-iis                </Text>
        <Location left="5332" top="2360" />
        <Size width="514" height="240" />
      </Entity>
      <Entity type="Comment">
        <Text>
Distributed processing fallacy 1:
The network is reliable:
- Connections get interupted
- Messages can get lost
- Downloads get interupted
==&gt; Handle this, but we don't care about message arrival if the other side disappears. Then we just restart the process.
                </Text>
        <Location left="3193" top="1573" />
        <Size width="339" height="133" />
      </Entity>
      <Entity type="Comment">
        <Text>Distributed processing fallacy 2:
Latency is zero:
- It takes a finite amount of time to do anything on a network
==&gt; Async processing seems the logical choice, that way you force consumers to acknowledge that things may take time.
==&gt; Don't do a chatty system. Do terse systems with fat messages.
==&gt; Take into account that data access may take time, provide progress measurements and indications everywhere.
                </Text>
        <Location left="10" top="144" />
        <Size width="339" height="215" />
      </Entity>
      <Entity type="Comment">
        <Text>
Distributed processing fallacy 3:
Bandwidth is infinite:
- We're getting connections with more bandwidth every day BUT packet loss is real and the further the data has to travel the more likely it is to get lost.
- The sender can't control the packet loss, so be prepared to resend the data (TCP does this for us).
==&gt; Packet size may not be under our control but still the goal is to send fat messages.
                </Text>
        <Location left="2246" top="205" />
        <Size width="339" height="171" />
      </Entity>
      <Entity type="Comment">
        <Text>Distributed processing fallacy 4:
The network is secure:
==&gt; Make sure that security is a part of the orginal design.
                </Text>
        <Location left="10" top="10" />
        <Size width="339" height="76" />
      </Entity>
      <Entity type="Comment">
        <Text>
Distributed processing fallacy 5:
Topology doesn't change:
- It does, all the time. More so for clients than for servers but still.
==&gt; Do not rely on a specific machine. Get machines to broadcast their presence if they are on the network and ready to work. Ditto for going offline. WCF-discovery should work for this.
                </Text>
        <Location left="2633" top="205" />
        <Size width="339" height="152" />
      </Entity>
      <Entity type="Comment">
        <Text>
Distributed processing fallacy 6:
There is one administrator:
- There are probably more administrators and they all control their own little section
==&gt; Upgrades, how do we control them. Do we need forward or backward compatibility.
==&gt; Diagnosing problems is done by the admins, not the dev team so we'll need to provide them with the tools to do so.
                </Text>
        <Location left="3193" top="1394" />
        <Size width="339" height="172" />
      </Entity>
      <Entity type="Class">
        <Name>EndpointId</Name>
        <Access>Public</Access>
        <Location left="3724" top="327" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MachineCommands</Name>
        <Access>Public</Access>
        <Location left="687" top="1378" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommunicationChannel</Name>
        <Access>Internal</Access>
        <Location left="3800" top="2057" />
        <Size width="679" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Field">IMessagePipe m_Receiver</Member>
        <Member type="Field">ISendingEndpoint m_Sender</Member>
        <Member type="Property">public EndpointId Id { get; }</Member>
        <Member type="Method">public IConnectionInfo OpenChannel()</Member>
        <Member type="Method">public void Close()</Member>
        <Member type="Method">public void ConnectTo(ChannelConnectionInformation connection)</Member>
        <Member type="Method">public void DisconnectFrom(EndpointId endpoint)</Member>
        <Member type="Method">public Tuple&lt;StreamTransferInformation, Task&lt;FileInfo&gt;&gt; PrepareForDataReception(string localFile, CancellationToken token)</Member>
        <Member type="Method">public Task TransferData(string filePath, TransferInformation transferInformation, CancellationToken token)</Member>
        <Member type="Method">public void Send(EndpointId endpoint, ICommunicationMessage messageToSend)</Member>
        <Member type="Event">public event EventHandler&lt;MessageEventArgs&gt; OnReceive</Member>
        <Member type="Event">public event EventHandler&lt;ChannelClosedEventArgs&gt; OnClosed</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ISendingEndpoint</Name>
        <Access>Internal</Access>
        <Location left="3233" top="2258" />
        <Size width="358" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IEnumerable&lt;EndpointId&gt; KnownEndpoints()</Member>
        <Member type="Method">void Send(EndpointId id, ICommunicationMessage message)</Member>
        <Member type="Method">void CloseChannelTo(EndpointId endpoint)</Member>
      </Entity>
      <Entity type="Class">
        <Name>SelfResurrectingSendingEndpoint</Name>
        <Access>Public</Access>
        <Location left="2836" top="2258" />
        <Size width="289" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void Send(ICommunicationMessage message)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>http://kentb.blogspot.com/2010/01/wcf-channels-faulting-and-dependency.html</Text>
        <Location left="2735" top="2108" />
        <Size width="455" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we need to keep a list of all services that are available? Not everybody will need it but some will (e.g. apollo.core and apollo.core.loaderservice).</Text>
        <Location left="3977" top="145" />
        <Size width="181" height="114" />
      </Entity>
      <Entity type="Comment">
        <Text>Need to be able to broadcast that we're on the network and that we're getting off the network.</Text>
        <Location left="3977" top="336" />
        <Size width="181" height="90" />
      </Entity>
      <Entity type="Interface">
        <Name>IProcessIncomingMessages</Name>
        <Access>Internal</Access>
        <Location left="4831" top="1611" />
        <Size width="339" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void ProcessMessage(ICommunicationMessage message)</Member>
        <Member type="Method">void OnLocalChannelClosed()</Member>
      </Entity>
      <Entity type="Class">
        <Name>MessageHandler</Name>
        <Access>Internal</Access>
        <Location left="4485" top="1216" />
        <Size width="619" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void ProcessMessage(ICommunicationMessage message)</Member>
        <Member type="Method">public void OnLocalChannelClosed()</Member>
        <Member type="Method">public Task&lt;ICommunicationMessage&gt; ForwardResponse(EndpointId messageReceiver, MessageId inResponseTo)</Member>
        <Member type="Method">public void ActOnArrival(IMessageFilter messageFilter, IMessageProcessAction notifyAction)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IMessageProcessAction</Name>
        <Access>Internal</Access>
        <Location left="5237" top="1343" />
        <Size width="290" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Property">Type MessageTypeToProcess { get; }</Member>
        <Member type="Method">void Invoke(ICommunicationMessage message)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IMessageFilter</Name>
        <Access>Internal</Access>
        <Location left="5237" top="1181" />
        <Size width="324" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool PassThrough(ICommunicationMessage message)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Remember that datasets may become very large so the streaming capabilities should be able to handle large blocks of data without issue.</Text>
        <Location left="5007" top="2645" />
        <Size width="215" height="107" />
      </Entity>
      <Entity type="Class">
        <Name>DiscoveryChannel</Name>
        <Access>Internal</Access>
        <Location left="4856" top="537" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IDiscoverOtherServices</Name>
        <Access>Internal</Access>
        <Location left="4215" top="511" />
        <Size width="455" height="129" />
        <Collapsed>False</Collapsed>
        <Member type="Event">event EventHandler&lt;ConnectionInformationEventArgs&gt; OnServiceBecomingAvailable</Member>
        <Member type="Event">event EventHandler&lt;EndpointId&gt; OnServiceBecomingUnavailable</Member>
        <Member type="Method">void AnnounceLogOn()</Member>
        <Member type="Method">void AnnounceLogOff()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>This channel is used only for discovery of other services.</Text>
        <Location left="4215" top="351" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Used to map an endpoint to the command set. The channel may change (if it dies or the dataset is moved) but the EndpointId should stay the same.</Text>
        <Location left="3713" top="118" />
        <Size width="183" height="117" />
      </Entity>
      <Entity type="Interface">
        <Name>IReceivingEndpoint</Name>
        <Access>Public</Access>
        <Location left="2607" top="1975" />
        <Size width="335" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void AcceptMessage(ICommunicationMessage message)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>The CommandSet is defined on by the owner of the CommandSet. The MessageHub will invoke the given commands when a message arrives from the other side.

On the other side the MessageHub will use the CommandSet interface to create a proxy that will send out a message with the right information to invoke the command on the owners side.
                </Text>
        <Location left="53" top="419" />
        <Size width="257" height="205" />
      </Entity>
      <Entity type="Class">
        <Name>EndpointDisconnectMessage</Name>
        <Access>Internal</Access>
        <Location left="511" top="2359" />
        <Size width="192" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string ClosingReason { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DataDownloadRequestMessage</Name>
        <Access>Internal</Access>
        <Location left="1267" top="2531" />
        <Size width="331" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public UploadToken Token { get; }</Member>
        <Member type="Property">public StreamTransferInformation TransferInformation { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>FailureMessage</Name>
        <Access>Internal</Access>
        <Location left="332" top="2661" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommandInvokedMessage</Name>
        <Access>Internal</Access>
        <Location left="537" top="3109" />
        <Size width="290" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ISerializedMethodInvocation Invocation { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Note that these don't have to be comparable but they do have to be equatable.</Text>
        <Location left="1129" top="2304" />
        <Size width="166" height="80" />
      </Entity>
      <Entity type="Comment">
        <Text>We're adding an interfae these because these interfaces are needed in the core application so that we can build a dynamic proxy for them in order to mirror the command set.</Text>
        <Location left="298" top="734" />
        <Size width="216" height="114" />
      </Entity>
      <Entity type="Interface">
        <Name>IMachineCommands</Name>
        <Access>Public</Access>
        <Location left="833" top="1143" />
        <Size width="585" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IObservable&lt;string&gt; DetermineMissingOrIncorrectAssemblies(IEnumerable&lt;string&gt; requiredAssemblies)</Member>
        <Member type="Method">IObservable TransferAssembly(string assemblyPath)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ICommunicationChannelCommands</Name>
        <Access>Public</Access>
        <Location left="115" top="1143" />
        <Size width="428" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IObservable&lt;EndpointId&gt; ReEstablishConnection(EndpointId oldEndpoint)</Member>
        <Member type="Method">IObservable Ping(EndpointId endpoint)</Member>
        <Member type="Method">IObservable Transfer(Stream data)</Member>
      </Entity>
      <Entity type="Class">
        <Name>EndpointInformationResponseMessage</Name>
        <Access>Internal</Access>
        <Location left="208" top="2923" />
        <Size width="308" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IList&lt;ISerializedType&gt; AvailableCommands { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>The discovery channel needs to be there all the time because endpoints may come and go at random times.</Text>
        <Location left="4215" top="145" />
        <Size width="160" height="103" />
      </Entity>
      <Entity type="Comment">
        <Text>Note that the collection of potential enpoints is just that due to the fact that it is possible that the endpoints randomly disappear due to unreliability of the network.</Text>
        <Location left="3432" top="360" />
        <Size width="191" height="124" />
      </Entity>
      <Entity type="Comment">
        <Text>Should check that the return value is either one of:
- void
- Task
- IObservable

And all parameters need to be serializable.
                </Text>
        <Location left="1107" top="75" />
        <Size width="255" height="139" />
      </Entity>
      <Entity type="Class">
        <Name>CommandProxyBuilder</Name>
        <Access>Internal</Access>
        <Location left="1143" top="354" />
        <Size width="410" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Field">Dictionairy&lt;Type, object&gt; m_ProxyCache</Member>
        <Member type="Method">public object ProxyConnectingTo(Type interfaceType, EndpointId endpoint)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Can we use Dynamic for this?</Text>
        <Location left="1392" top="138" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Interface">
        <Name>IChannelType</Name>
        <Access>Public</Access>
        <Location left="3800" top="2407" />
        <Size width="688" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Uri GenerateNewChannelUri()</Member>
        <Member type="Method">string GenerateNewAddress()</Member>
        <Member type="Method">Binding GenerateBinding()</Member>
        <Member type="Method">Tuple&lt;StreamTransferInformation, Task&lt;FileInfo&gt;&gt; PrepareForDataReception(string localFile, CancellationToken token)</Member>
        <Member type="Method">Task TransferData(string filePath, StreamTransferInformation transferInformation, CancellationToken token)</Member>
      </Entity>
      <Entity type="Class">
        <Name>SendingEndpoint</Name>
        <Access>Internal</Access>
        <Location left="3233" top="2483" />
        <Size width="369" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Field">Dictionairy&lt;EndpointId, IChannelProxy&gt; m_Endpoints</Member>
        <Member type="Method">public void Send(EndpointId id, ICommunicationMessage message)</Member>
        <Member type="Method">public IEnumerable&lt;EndpointId&gt; KnownEndpoints()</Member>
        <Member type="Method">public void CloseChannelTo(EndpointId endpoint)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IChannelProxy</Name>
        <Access>Public</Access>
        <Location left="2836" top="2483" />
        <Size width="281" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Send(ICommunicationMessage message)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Really only need one of these. They can send messages to all known endpoints.</Text>
        <Location left="3476" top="1254" />
        <Size width="200" height="80" />
      </Entity>
      <Entity type="Interface">
        <Name>IMessagePipe</Name>
        <Access>Public</Access>
        <Location left="3095" top="1975" />
        <Size width="311" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Event">event EventHandler&lt;MessageEventArgs&gt; OnNewMessage</Member>
      </Entity>
      <Entity type="Class">
        <Name>ReceivingEndpoint</Name>
        <Access>Public</Access>
        <Location left="3095" top="1791" />
        <Size width="346" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void AcceptMessage(ICommunicationMessage message)</Member>
        <Member type="Event">public event EventHandler&lt;MessageEventArgs&gt; OnNewMessage</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>StreamTransferInformation</Name>
        <Access>Internal</Access>
        <Location left="4057" top="3196" />
        <Size width="196" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public long StartPosition { get; set; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommunicationMessage</Name>
        <Access>Internal</Access>
        <Location left="758" top="2681" />
        <Size width="413" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">protected CommunicationMessage(EndpointId origin)</Member>
        <Member type="Constructor">protected CommunicationMessage(EndpointId origin, MessageId inResponseTo)</Member>
        <Member type="Property">public MessageId Id { get; }</Member>
        <Member type="Property">public MessageId InResponseTo { get; }</Member>
        <Member type="Property">public EndpointId OriginatingEndpoint { get; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NewCommandRegisteredMessage</Name>
        <Access>Internal</Access>
        <Location left="1016" top="3109" />
        <Size width="231" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ISerializedType Command { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TcpStreamTransferInformation</Name>
        <Access>Internal</Access>
        <Location left="4310" top="3019" />
        <Size width="210" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IPAddress IPAddress { get; set; }</Member>
        <Member type="Property">public int Port { get; set; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NamedPipeStreamTransferInformation</Name>
        <Access>Internal</Access>
        <Location left="3800" top="3019" />
        <Size width="237" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; set; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IDirectIncomingMessages</Name>
        <Access>Public</Access>
        <Location left="4796" top="1006" />
        <Size width="599" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Task&lt;ICommunicationMessage&gt; ForwardResponse(EndpointId messageReceiver, MessageId inResponseTo)</Member>
        <Member type="Method">void ActOnArrival(IMessageFilter messageFilter, IMessageProcessAction notifyAction)</Member>
      </Entity>
      <Entity type="Class">
        <Name>EndpointInformationRequestMessage</Name>
        <Access>Public</Access>
        <Location left="248" top="3046" />
        <Size width="230" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SuccessMessage</Name>
        <Access>Public</Access>
        <Location left="332" top="2768" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EndpointConnectMessage</Name>
        <Access>Public</Access>
        <Location left="275" top="2446" />
        <Size width="182" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Address { get; }</Member>
        <Member type="Property">public string ChannelType { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommandInvokedResponseMessage</Name>
        <Access>Public</Access>
        <Location left="800" top="3225" />
        <Size width="222" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public object Result { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RemoteNotificationHub</Name>
        <Access>Public</Access>
        <Location left="2501" top="1362" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ISendCommandsToRemoteEndpoints</Name>
        <Access>Public</Access>
        <Location left="464" top="106" />
        <Size width="432" height="197" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IEnumerable&lt;CommandInformationPerEndpoint&gt; AvailableCommands()</Member>
        <Member type="Method">IEnumerable&lt;Type&gt; AvailableCommandsFor(EndpointId endpoint)</Member>
        <Member type="Event">event EventHandler&lt;CommandSetAvailabilityEventArgs&gt; OnEndpointSignedIn</Member>
        <Member type="Event">event EventHandler&lt;EndpointEventArgs&gt; OnEndpointSignedOff</Member>
        <Member type="Method">bool HasCommandsFor(EndpointId endpoint)</Member>
        <Member type="Method">bool HasCommandFor(EndpointId endpoint, Type commandInterfaceType)</Member>
        <Member type="Method">TCommand CommandsFor&lt;TCommand&gt;(EndpointId endpoint)</Member>
        <Member type="Method">ICommandSet CommandsFor(EndpointId endpoint, Type commandType)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>INotifyRemoteEndpointsOfEvents</Name>
        <Access>Public</Access>
        <Location left="2360" top="1714" />
        <Size width="445" height="197" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IEnumerable&lt;NotificationInformationPerEndpoint&gt; AvailableNotifications()</Member>
        <Member type="Method">IEnumerable&lt;Type&gt; AvailableNotificationsFor(EndpointId endpoint)</Member>
        <Member type="Event">event EventHandler&lt;NotificationAvailabilityEventArgs&gt; OnEndpointSignedIn</Member>
        <Member type="Event">event EventHandler&lt;EndpointEventArgs&gt; OnEndpointSignedOff</Member>
        <Member type="Method">bool HasNotificationsFor(EndpointId endpoint)</Member>
        <Member type="Method">bool HasNotificationFor(EndpointId endpoint, Type notificationInterfaceType)</Member>
        <Member type="Method">TNotification NotificationsFor&lt;TNotification&gt;(EndpointId endpoint)</Member>
        <Member type="Method">INotificationSet NotificationsFor(EndpointId endpoint, Type notificationType)</Member>
      </Entity>
      <Entity type="Class">
        <Name>EventNotificationMessage</Name>
        <Access>Public</Access>
        <Location left="1331" top="2820" />
        <Size width="165" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Need to register to get the event. We only send it to those endpoints that have registered</Text>
        <Location left="2752" top="1467" />
        <Size width="195" height="93" />
      </Entity>
      <Entity type="Interface">
        <Name>ICommandCollection</Name>
        <Access>Public</Access>
        <Location left="1345" top="614" />
        <Size width="366" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Register(Type commandType, ICommandSet commands)</Member>
        <Member type="Method">ICommandSet CommandsFor(Type interfaceType)</Member>
      </Entity>
      <Entity type="Class">
        <Name>LocalCommandCollection</Name>
        <Access>Public</Access>
        <Location left="1345" top="789" />
        <Size width="375" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void Register(Type commandType, ICommandSet commands)</Member>
        <Member type="Method">public ICommandSet CommandsFor(Type interfaceType)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Holds the actual command objects on the receiving side of the channel.</Text>
        <Location left="1775" top="614" />
        <Size width="190" height="83" />
      </Entity>
      <Entity type="Interface">
        <Name>INotificationSendersCollection</Name>
        <Access>Public</Access>
        <Location left="2432" top="788" />
        <Size width="355" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Register(Type eventType, INotificationSet notifications)</Member>
        <Member type="Method">INotificationSet NotificationsFor(Type interfaceType)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>INotificationSet</Name>
        <Access>Public</Access>
        <Location left="2468" top="1171" />
        <Size width="234" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Class">
        <Name>LocalNotificationCollection</Name>
        <Access>Public</Access>
        <Location left="2329" top="961" />
        <Size width="551" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void Register(Type eventType, INotificationSet notifications)</Member>
        <Member type="Method">public INotificationSet NotificationsFor(Type interfaceType)</Member>
        <Member type="Method">public void RegisterForNotification(EndpointId endpoint, ISerializedEventRegistration notification)</Member>
        <Member type="Method">public void UnregisterFromNotification(EndpointId endpoint, ISerializedEventRegistration notification)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NotificationProxyBuilder</Name>
        <Access>Public</Access>
        <Location left="2842" top="1269" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ISendNotifications</Name>
        <Access>Public</Access>
        <Location left="1673" top="977" />
        <Size width="538" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void RegisterForNotification(EndpointId endpoint, ISerializedEventRegistration notification)</Member>
        <Member type="Method">void UnregisterFromNotification(EndpointId endpoint, ISerializedEventRegistration notification)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ICommandSet</Name>
        <Access>Public</Access>
        <Location left="453" top="908" />
        <Size width="456" height="97" />
        <Collapsed>False</Collapsed>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="4" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>939</X>
          <Y>2435</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>939</X>
          <Y>2406</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="7" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>3132</X>
          <Y>630</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="8" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="9" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>899</X>
          <Y>751</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>785</X>
          <Y>711</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="11" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3651</X>
          <Y>570</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="11" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..1</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="12" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>618</X>
          <Y>1252</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="14" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>4735</X>
          <Y>2962</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>4583</X>
          <Y>2888</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="23" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>746</X>
          <Y>1351</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>746</X>
          <Y>1245</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="20" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="16" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3564</X>
          <Y>1634</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3636</X>
          <Y>1633</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="17" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>374</X>
          <Y>247</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>444</X>
          <Y>511</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="18" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="21" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3560</X>
          <Y>1501</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3629</X>
          <Y>1500</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="5" second="15">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="24" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="29" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>3899</X>
          <Y>508</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="29" second="28">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="13" second="24">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>4514</X>
          <Y>2094</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="31" second="30">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>4886</X>
          <Y>1427</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="31" second="32">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>5130</X>
          <Y>1305</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="34" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>5134</X>
          <Y>2612</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="31" second="33">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>5129</X>
          <Y>1263</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="11" second="36">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>4141</X>
          <Y>586</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="37" second="36">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="35" second="36">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="11" second="22">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="38" second="22">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="40" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="45" second="6">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="23" second="47">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>807</X>
          <Y>1352</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1038</X>
          <Y>1263</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="12" second="48">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>547</X>
          <Y>1351</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="50" second="37">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="51" second="11">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>3667</X>
          <Y>550</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="52" second="53">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="8" second="53">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>948</X>
          <Y>491</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="54" second="53">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="26" second="39">
        <Label>links to via WCF</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2811</X>
          <Y>2308</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2645</X>
          <Y>2079</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="27" second="26">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="2" second="55">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3721</X>
          <Y>2664</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3773</X>
          <Y>2469</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="3" second="55">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>4590</X>
          <Y>2664</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>4514</X>
          <Y>2479</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="24" second="55">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="24" second="25">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="56" second="25">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="56" second="57">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="26" second="57">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="58" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3701</X>
          <Y>1290</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3750</X>
          <Y>1455</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="24" second="59">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3831</X>
          <Y>2032</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3448</X>
          <Y>2018</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="59" second="39">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="60" second="59">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="62" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>978</X>
          <Y>2656</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>978</X>
          <Y>2608</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="42" second="62">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1207</X>
          <Y>2761</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="44" second="62">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>889</X>
          <Y>3169</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>890</X>
          <Y>2868</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="41" second="62">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>808</X>
          <Y>2656</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="43" second="62">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="49" second="62">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>813</X>
          <Y>2868</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="63" second="62">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>978</X>
          <Y>3167</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>947</X>
          <Y>2897</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="65" second="61">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>4080</X>
          <Y>3171</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="64" second="61">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>4225</X>
          <Y>3171</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="2" second="65">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="3" second="64">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="5" second="55">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>4982</X>
          <Y>2450</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="31" second="66">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>4859</X>
          <Y>1190</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="11" second="66">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>4026</X>
          <Y>670</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="30" second="24">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>4301</X>
          <Y>2025</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="67" second="62">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>503</X>
          <Y>3073</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>855</X>
          <Y>2868</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="68" second="62">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="69" second="62">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>785</X>
          <Y>2656</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="70" second="62">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="8" second="72">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="71" second="73">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="71" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2828</X>
          <Y>1412</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3062</X>
          <Y>775</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="74" second="62">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1196</X>
          <Y>2798</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="75" second="71">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="77" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1745</X>
          <Y>827</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2267</X>
          <Y>621</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="77" second="76">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="78" second="76">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="81" second="79">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="81" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2916</X>
          <Y>1016</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3032</X>
          <Y>778</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="81" second="80">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="71" second="80">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2582</X>
          <Y>1337</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="71" second="82">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2688</X>
          <Y>1384</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="81" second="83">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="8" second="84">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="10" second="84">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="47" second="84">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>770</X>
          <Y>1038</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="48" second="84">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>596</X>
          <Y>1032</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Project - Components</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Comment">
        <Text>
Can we define coworkers based on a graph (i.e. be able to specify the graph of coworkers for one single component wiht coworkers of coworkers etc.).
The obvious catch is how to we indicate the graph? And then is it worth it?
                </Text>
        <Location left="10" top="709" />
        <Size width="294" height="121" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we allow ghost state? This would allow us to visualise and then apply really quickly.</Text>
        <Location left="394" top="726" />
        <Size width="160" height="89" />
      </Entity>
      <Entity type="Comment">
        <Text>
Allow objects / components to indicate which of their coworkers are read, write or read/write connections. That way we can trace which components get changed by whom.

For data components this should lead to a hierarchy of components. e.g. geometry - mesh
                </Text>
        <Location left="10" top="416" />
        <Size width="294" height="165" />
      </Entity>
      <Entity type="Comment">
        <Text>
How do we handle settings?

We need to be able to set values and react to changes in values.

Do we allow objects to specify dialog layouts?
                </Text>
        <Location left="590" top="367" />
        <Size width="242" height="137" />
      </Entity>
      <Entity type="Comment">
        <Text>
How do object links come into this?
- coworkers
- usage / encapsulate
- construction links, e.g. one object relies on another for construction (either directly or indirectly, e.g. mesh - geometry)

Note that objects may only be linked when they're executing. This is especially useful for actions.
                </Text>
        <Location left="10" top="245" />
        <Size width="294" height="167" />
      </Entity>
      <Entity type="Comment">
        <Text>
The interface shouldn't have to be defined. The interface could consist of a collection of methods / properties, each defined on another object.

e.g. a action could be defined by a set of coworker methods (on different objects), some property methods and one or more action methods.
                </Text>
        <Location left="790" top="726" />
        <Size width="223" height="184" />
      </Entity>
      <Entity type="Comment">
        <Text>Are categories also tags? Probably. Maybe use a taxonomy?</Text>
        <Location left="809" top="37" />
        <Size width="162" height="72" />
      </Entity>
      <Entity type="Comment">
        <Text>Stores the state for a single component. Only state is persisted</Text>
        <Location left="610" top="581" />
        <Size width="162" height="72" />
      </Entity>
      <Entity type="Comment">
        <Text>Mark sub-objects with special tags indicating if they are part of the external interface or not?</Text>
        <Location left="1354" top="756" />
        <Size width="162" height="85" />
      </Entity>
      <Entity type="Comment">
        <Text>External interfaces describe the different "APIs" that are available to other components</Text>
        <Location left="1356" top="617" />
        <Size width="162" height="85" />
      </Entity>
      <Entity type="Comment">
        <Text>
Do we need communication lanes? Define them for:
- Inter component
- Inter object
- Component - UI and reverse
                </Text>
        <Location left="10" top="594" />
        <Size width="294" height="108" />
      </Entity>
      <Entity type="Comment">
        <Text>
Allow constructions like:
- Action1: Invoke [METHOD] on [OBJECT] with id [NUMBER]
                </Text>
        <Location left="558" top="226" />
        <Size width="332" height="87" />
      </Entity>
      <Entity type="Comment">
        <Text>
Stores the instruction sets for this component. Instructions for:
- Construction
- Destruction
                </Text>
        <Location left="1273" top="237" />
        <Size width="162" height="109" />
      </Entity>
      <Entity type="Comment">
        <Text>Tags stores the tags for this component</Text>
        <Location left="1273" top="135" />
        <Size width="162" height="72" />
      </Entity>
      <Entity type="Comment">
        <Text>Categories stores the categories for this component</Text>
        <Location left="1273" top="37" />
        <Size width="162" height="72" />
      </Entity>
      <Entity type="Class">
        <Name>InstructionSets</Name>
        <Access>Internal</Access>
        <Location left="1032" top="237" />
        <Size width="162" height="85" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Constrains and external interfaces are related. Connect them somehow.</Text>
        <Location left="1354" top="527" />
        <Size width="162" height="72" />
      </Entity>
      <Entity type="Comment">
        <Text>The external interfaces and the capabilities are related. Connect them somehow.</Text>
        <Location left="824" top="527" />
        <Size width="167" height="72" />
      </Entity>
      <Entity type="Comment">
        <Text>
A component is just a collection of objects. There is no actual instance of the component. Don't use individual objects to create a component. Maybe create a single component interface / controller object.

Components to connect to other components --&gt; Let them figure out connections by themselves.

Note that some elements are manditory but others are not. Some components may have all the elements while others may not have them.
                </Text>
        <Location left="10" top="10" />
        <Size width="294" height="227" />
      </Entity>
      <Entity type="Class">
        <Name>State</Name>
        <Access>Internal</Access>
        <Location left="394" top="581" />
        <Size width="162" height="85" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ExternalInterfaces</Name>
        <Access>Internal</Access>
        <Location left="1092" top="617" />
        <Size width="162" height="85" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SubObjects</Name>
        <Access>Internal</Access>
        <Location left="1092" top="756" />
        <Size width="162" height="85" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Constraints</Name>
        <Access>Internal</Access>
        <Location left="1189" top="433" />
        <Size width="162" height="85" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Capabilies</Name>
        <Access>Internal</Access>
        <Location left="966" top="433" />
        <Size width="162" height="85" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Tags</Name>
        <Access>Internal</Access>
        <Location left="1032" top="135" />
        <Size width="162" height="85" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Categories</Name>
        <Access>Internal</Access>
        <Location left="1032" top="37" />
        <Size width="162" height="85" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ComponentId</Name>
        <Access>Public</Access>
        <Location left="394" top="477" />
        <Size width="162" height="85" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Allow components to set meta-data on themselves an other components</Text>
        <Location left="316" top="245" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>
Components are essentially templates. They define how to connect a set of objects in order to make a 'function'. The template acts as the facade to other templates. Each template should contain a clear capability. Extensions can happen in two places:
- By linking to another template. These links can be shared with other templates.
- By internally linking to objects. These links are never shared.
                </Text>
        <Location left="316" top="10" />
        <Size width="460" height="153" />
      </Entity>
      <Entity type="Interface">
        <Name>IComponentTemplate</Name>
        <Access>Public</Access>
        <Location left="146" top="1012" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Comment" first="1" second="19">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="3" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="5" second="20">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1062</X>
          <Y>662</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="11" second="15">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>915</X>
          <Y>258</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1007</X>
          <Y>267</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="6" second="24">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>921</X>
          <Y>134</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1007</X>
          <Y>175</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="6" second="25">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>996</X>
          <Y>76</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1007</X>
          <Y>76</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="7" second="19">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>585</X>
          <Y>613</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>581</X>
          <Y>613</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="8" second="21">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1329</X>
          <Y>792</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1279</X>
          <Y>792</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="9" second="20">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1331</X>
          <Y>667</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1279</X>
          <Y>667</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="12" second="15">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1248</X>
          <Y>280</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1219</X>
          <Y>280</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="13" second="24">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1248</X>
          <Y>169</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1219</X>
          <Y>169</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="14" second="25">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1248</X>
          <Y>73</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1219</X>
          <Y>73</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="16" second="22">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1392</X>
          <Y>502</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1376</X>
          <Y>476</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="17" second="23">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>891</X>
          <Y>502</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>941</X>
          <Y>469</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="20" second="21">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1169</X>
          <Y>727</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1169</X>
          <Y>731</Y>
        </BendPoint>
        <Direction>Bidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="22" second="20">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1300</X>
          <Y>543</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1279</X>
          <Y>640</Y>
        </BendPoint>
        <Direction>Bidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="23" second="20">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1067</X>
          <Y>543</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1067</X>
          <Y>644</Y>
        </BendPoint>
        <Direction>Bidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Project - Core</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Comment">
        <Text>
Note that the 'data-unit' graph only needs to hold the 'description' of each initial data set. The descriptions hold all the variables, geometry and other data which can be changed to obtain another 'data-unit'.

The generator, visualization and actual data sets can be linked to the 'data-unit'-description but they don't necessarily need to be in the tree.

By separating the actual generated data from the 'description' data we can allow modification (copy/clone/modify/edit etc.) of a 'data-unit' without having to digg through all the generated data. This also forces components / users to indicate what data should be considered in the tree and what data doesn't need to be considered.
                </Text>
        <Location left="10" top="10" />
        <Size width="362" height="261" />
      </Entity>
      <Entity type="Interface">
        <Name>IHistory</Name>
        <Access>Internal</Access>
        <Location left="2240" top="674" />
        <Size width="162" height="76" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>ITimeLineProxy</Name>
        <Access>Internal</Access>
        <Location left="2240" top="831" />
        <Size width="162" height="66" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IBuildProjects</Name>
        <Access>Internal</Access>
        <Location left="135" top="1072" />
        <Size width="515" height="129" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IBuildProjects Define()</Member>
        <Member type="Method">IBuildProjects WithDatasetDistributor(Func&lt;DatasetRequest, DistributionPlan&gt; distributor)</Member>
        <Member type="Method">IBuildProjects FromStorage(IPersistenceInformation persistenceInfo)</Member>
        <Member type="Method">IProject Build()</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IPersistenceProxy</Name>
        <Access>Internal</Access>
        <Location left="984" top="1328" />
        <Size width="162" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IComponentResolver</Name>
        <Access>Internal</Access>
        <Location left="2426" top="583" />
        <Size width="162" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Comment">
        <Text>
- Define default objects that get substituted for specific types, attribute values etc.. This is just like an IOC container. e.g. when using Autofac you hardcode that resolving interface X always gets you an instance of object Y. We can do a similar system for simple system components (e.g. a logger, a console application runner etc.)
- If we make this mechanism available over the entire application then we can allow the higher level components to create substitutions too. That way we could allow the project to setup the resolvers for different simulation components based on the type of simulation that the user has selected. When using this system we'll get a sort of distributed, dynamic IOC container where all the reference types get filled in at the last possible minute.
- We'll need to figure out how we are going to store all this information though. We could mabye use an actual IOC container and dynamically create builders (which we can discard when ever we want)
- Another issue is figuring out a way to be able to load components without having the entire  object graph availabe. We might be able to create dynamic proxies that only load up their suggested component once they are needed?
                </Text>
        <Location left="2364" top="108" />
        <Size width="423" height="363" />
      </Entity>
      <Entity type="Comment">
        <Text>Should be available to the UI / project system.</Text>
        <Location left="2670" top="634" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>Project</Name>
        <Access>Internal</Access>
        <Location left="2058" top="1021" />
        <Size width="400" height="128" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ProjectService</Name>
        <Access>Internal</Access>
        <Location left="801" top="1047" />
        <Size width="350" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly DatasetLoader m_Loader</Member>
        <Member type="Field">private IProject m_Project</Member>
        <Member type="Method">public void CreateNewProject()</Member>
        <Member type="Method">public void LoadProject(IPersistenceInformation persistenceInfo)</Member>
        <Member type="Property">public IProject Current { get; }</Member>
        <Member type="Method">public void UnloadProject()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IProject</Name>
        <Access>Internal</Access>
        <Location left="1266" top="1021" />
        <Size width="606" height="265" />
        <Collapsed>False</Collapsed>
        <Member type="Property">bool IsClosed { get; }</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnClosed</Member>
        <Member type="Property">string Name { get; set; }</Member>
        <Member type="Event">event EventHandler&lt;ValueChangedEventArgs&lt;string&gt;&gt; OnNameChanged</Member>
        <Member type="Property">string Summary { get; set; }</Member>
        <Member type="Event">event EventHandler&lt;ValueChangedEventArgs&lt;string&gt;&gt; OnSummaryChanged</Member>
        <Member type="Property">int NumberOfDatasets { get; }</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnDatasetCreated</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnDatasetDeleted</Member>
        <Member type="Method">IProxyDataset BaseDataset()</Member>
        <Member type="Method">void Save(IPersistenceInformation persistenceInfo)</Member>
        <Member type="Method">void Export(DatasetId datasetToExport, bool shouldIncludeChildren, IPersistenceInformation persistenceInfo)</Member>
      </Entity>
      <Entity type="Class">
        <Name>ProjectBuilder</Name>
        <Access>Internal</Access>
        <Location left="278" top="1292" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DatasetRequest</Name>
        <Access>Public</Access>
        <Location left="1528" top="498" />
        <Size width="360" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DatasetOfflineInformation DatasetToLoad { get; }</Member>
        <Member type="Property">public DatasetId Parent { get; }</Member>
        <Member type="Property">public bool ProvideParentWithHubConnection { get; }</Member>
        <Member type="Property">public bool IsIntraDatasetCommunicationRequired { get; }</Member>
        <Member type="Property">public int MaximumNumberOfParallelBlocks { get; }</Member>
        <Member type="Property">public ExpectedDatasetLoad ExpectedLoadPerMachine { get; }</Member>
        <Member type="Property">public LoadingLocation PreferredLoadingLocation { get; }</Member>
        <Member type="Property">public MachineDistributionRange DesiredDistributionRange { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DistributionPlan</Name>
        <Access>Public</Access>
        <Location left="331" top="316" />
        <Size width="319" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DatasetId DistributionFor { get; }</Member>
        <Member type="Method">public IEnumerable&lt;Machine&gt; MachinesToDistributeTo()</Member>
        <Member type="Property">public TimeSpan EstimatedTransferTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedLoadingTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedRunningTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedUnloadingTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedReturnTransferTime { get; }</Member>
        <Member type="Property">public DateTimeOffset EarliestStartTime { get; }</Member>
        <Member type="Property">public DateTimeOffset EarliestEstimatedFinnishTime { get; }</Member>
        <Member type="Method">public IObservable&lt;DatasetOnlineInformation&gt; Accept()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DatasetOnlineInformation</Name>
        <Access>Public</Access>
        <Location left="3174" top="902" />
        <Size width="346" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DatasetId Id { get; }</Member>
        <Member type="Property">public EndpointId Endpoint { get; }</Member>
        <Member type="Property">public NetworkIdentifier RunsOn { get; }</Member>
        <Member type="Method">public IEnumerable&lt;ICommandSet&gt; AvailableCommands()</Member>
        <Member type="Method">public TCommand Command&lt;TCommand&gt;()</Member>
        <Member type="Method">public IEnumerable&lt;INotificationSet&gt; AvailableNotifications()</Member>
        <Member type="Method">public TNotification Notification&lt;TNotification&gt;()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DatasetOfflineInformation</Name>
        <Access>Public</Access>
        <Location left="3174" top="1163" />
        <Size width="311" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DatasetId Id { get; }</Member>
        <Member type="Property">public DatasetCreator CreatedBy { get; }</Member>
        <Member type="Property">public bool CanBecomeParent { get; }</Member>
        <Member type="Property">public bool CanBeDeleted { get; }</Member>
        <Member type="Property">public bool CanBeAdopted { get; }</Member>
        <Member type="Property">public bool CanBeCopied { get; }</Member>
        <Member type="Property">public IPersistenceInformation StoredAt { get; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public string Summary { get; set; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IProxyDataset</Name>
        <Access>Internal</Access>
        <Location left="1279" top="1482" />
        <Size width="532" height="469" />
        <Collapsed>False</Collapsed>
        <Member type="Property">DatasetId Id { get; }</Member>
        <Member type="Property">bool IsValid { get; }</Member>
        <Member type="Property">bool CanBeDeleted { get; }</Member>
        <Member type="Method">void Delete()</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnDeleted</Member>
        <Member type="Property">bool CanBeAdopted { get; }</Member>
        <Member type="Property">bool CanBeCopied { get; }</Member>
        <Member type="Property">DatasetCreator CreatedBy { get; }</Member>
        <Member type="Property">IPersistenceInformation StoredAt { get; }</Member>
        <Member type="Property">string Name { get; set; }</Member>
        <Member type="Event">event EventHandler&lt;ValueChangedEventArgs&lt;string&gt;&gt; OnNameChanged</Member>
        <Member type="Property">string Summary { get; set; }</Member>
        <Member type="Event">event EventHandler&lt;ValueChangedEventArgs&lt;string&gt;&gt; OnSummaryChanged</Member>
        <Member type="Property">bool IsLoaded { get; }</Member>
        <Member type="Method">IEnumerable&lt;Machine&gt; RunsOn()</Member>
        <Member type="Method">void LoadOntoMachine(LoadingLocation preferredLocation, MachineDistributionRange range)</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnLoaded</Member>
        <Member type="Method">void UnloadFromMachine()</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnUnloaded</Member>
        <Member type="Method">IEnumerable&lt;IProxyDataset&gt; Children()</Member>
        <Member type="Property">bool CanBecomeParent { get; }</Member>
        <Member type="Method">IProxyDataset CreateNewChild(IDatasetCreationInformation newChild)</Member>
        <Member type="Method">IEnumerable&lt;IProxyDataset&gt; CreateNewChildren(IDatasetCreationInformation[] newChildren)</Member>
        <Member type="Property">ProxyCommandSet Commands { get; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>DatasetProxy</Name>
        <Access>Internal</Access>
        <Location left="1971" top="1621" />
        <Size width="270" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Field">DatasetId m_Id</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>
what about:
- Commands?
                </Text>
        <Location left="1916" top="1367" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Note that the dataset does not chose it's own components. That's what the resolver is for.</Text>
        <Location left="2656" top="738" />
        <Size width="181" height="99" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we need to define how to contact the machine? We may need a specific username or port?</Text>
        <Location left="10" top="638" />
        <Size width="203" height="102" />
      </Entity>
      <Entity type="Class">
        <Name>DatasetId</Name>
        <Access>Public</Access>
        <Location left="3553" top="1087" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Delegate">
        <Name>ProposeDistributionDelegate</Name>
        <Access>Public</Access>
        <Location left="1584" top="864" />
        <Size width="222" height="78" />
        <Collapsed>False</Collapsed>
        <ReturnType>IEnumerable&lt;DistributionPlan&gt;</ReturnType>
        <Param>DatasetRequest request</Param>
      </Entity>
      <Entity type="Class">
        <Name>ProxyCommandSet</Name>
        <Access>Internal</Access>
        <Location left="1971" top="1861" />
        <Size width="270" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">TCommand CommandsFor&lt;TCommand&gt;()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IPersistenceInformation</Name>
        <Access>Public</Access>
        <Location left="3589" top="1452" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Class">
        <Name>DatasetCreationInformation</Name>
        <Access>Public</Access>
        <Location left="854" top="1611" />
        <Size width="297" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IPersistenceInformation LoadFrom { get; set; }</Member>
        <Member type="Property">public DatasetCreator CreatedOnRequestOf { get; set; }</Member>
        <Member type="Property">public bool CanBecomeParent { get; set; }</Member>
        <Member type="Property">public bool CanBeDeleted { get; set; }</Member>
        <Member type="Property">public bool CanBeAdopted { get; set; }</Member>
        <Member type="Property">public bool CanBeCopied { get; set; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>
Note that by the time we get all the plans back some of them may well be invalid.
How are we going to deal with that?
                </Text>
        <Location left="10" top="376" />
        <Size width="197" height="114" />
      </Entity>
      <Entity type="Comment">
        <Text>The client sends the distribution out to all the available hosts it knows about (the config file indicates how far it can go?). These hosts then create a proposal of how they would approach the problem and send that back. Then the client can decide on which host to use.</Text>
        <Location left="365" top="846" />
        <Size width="262" height="139" />
      </Entity>
      <Entity type="Class">
        <Name>Machine</Name>
        <Access>Public</Access>
        <Location left="389" top="638" />
        <Size width="195" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public MachineId Id { get; }</Member>
        <Member type="Property">public string DomainName { get; }</Member>
        <Member type="Property">public bool IsLocalMachine { get; }</Member>
        <Member type="Property">public bool IsPartOfGroup { get; }</Member>
        <Member type="Property">public string GroupIdentifier { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Do we want to have a staged approach to the distribution? So first we go out to all the stand-alone machines, then to the local cluster, then to the WAN cluster etc. etc.. The choice of where to go first could be dictated by the user preferences (for the project) and the desired distribution locality</Text>
        <Location left="10" top="846" />
        <Size width="270" height="139" />
      </Entity>
      <Entity type="Interface">
        <Name>IHelpDistributingDatasets</Name>
        <Access>Public</Access>
        <Location left="788" top="878" />
        <Size width="459" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IObservable&lt;DistributionPlan&gt; ProposeDistributionFor(DatasetRequest request)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ISendCommandsToRemoteEndpoints</Name>
        <Access>Public</Access>
        <Location left="2914" top="522" />
        <Size width="432" height="197" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IEnumerable&lt;CommandInformationPerEndpoint&gt; AvailableCommands()</Member>
        <Member type="Method">IEnumerable&lt;Type&gt; AvailableCommandsFor(EndpointId endpoint)</Member>
        <Member type="Event">event EventHandler&lt;CommandSetAvailabilityEventArgs&gt; OnEndpointSignedIn</Member>
        <Member type="Event">event EventHandler&lt;EndpointEventArgs&gt; OnEndpointSignedOff</Member>
        <Member type="Method">bool HasCommandsFor(EndpointId endpoint)</Member>
        <Member type="Method">bool HasCommandFor(EndpointId endpoint, Type commandInterfaceType)</Member>
        <Member type="Method">TCommand CommandsFor&lt;TCommand&gt;(EndpointId endpoint)</Member>
        <Member type="Method">ICommandSet CommandsFor(EndpointId endpoint, Type commandType)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>INotifyRemoteEndpointsOfEvents</Name>
        <Access>Public</Access>
        <Location left="3383" top="522" />
        <Size width="445" height="197" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IEnumerable&lt;NotificationInformationPerEndpoint&gt; AvailableNotifications()</Member>
        <Member type="Method">IEnumerable&lt;Type&gt; AvailableNotificationsFor(EndpointId endpoint)</Member>
        <Member type="Event">event EventHandler&lt;NotificationAvailabilityEventArgs&gt; OnEndpointSignedIn</Member>
        <Member type="Event">event EventHandler&lt;EndpointEventArgs&gt; OnEndpointSignedOff</Member>
        <Member type="Method">bool HasNotificationsFor(EndpointId endpoint)</Member>
        <Member type="Method">bool HasNotificationFor(EndpointId endpoint, Type notificationInterfaceType)</Member>
        <Member type="Method">TNotification NotificationsFor&lt;TNotification&gt;(EndpointId endpoint)</Member>
        <Member type="Method">INotificationSet NotificationsFor(EndpointId endpoint, Type notificationType)</Member>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="2" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2312</X>
          <Y>806</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2312</X>
          <Y>775</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="6" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2525</X>
          <Y>497</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2525</X>
          <Y>555</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="9" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>754</X>
          <Y>1133</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>687</X>
          <Y>1133</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="9" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1085</X>
          <Y>1251</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1085</X>
          <Y>1303</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="8" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2220</X>
          <Y>965</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2401</X>
          <Y>613</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="8" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2316</X>
          <Y>983</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2316</X>
          <Y>923</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="8" second="10">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2021</X>
          <Y>1103</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1897</X>
          <Y>1103</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="11" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>357</X>
          <Y>1251</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>357</X>
          <Y>1228</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="9" second="10">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="17" second="16">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="10" second="16">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="7" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2559</X>
          <Y>558</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="19" second="5">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2533</X>
          <Y>669</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="8" second="17">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="15" second="21">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3510</X>
          <Y>1212</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3620</X>
          <Y>1189</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="21">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3548</X>
          <Y>1011</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3620</X>
          <Y>1052</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="8" second="22">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2103</X>
          <Y>995</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1854</X>
          <Y>901</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="18" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1897</X>
          <Y>1200</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="17" second="23">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="15" second="24">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3510</X>
          <Y>1248</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="8" second="14">
        <Label>store by ID</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="8" second="15">
        <Label>store by ID</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2483</X>
          <Y>1112</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3149</X>
          <Y>1254</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="17" second="8">
        <Label>links</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2175</X>
          <Y>1176</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="26" second="13">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="13" second="28">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="20" second="28">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="29" second="27">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="16" second="25">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="22" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="30" second="13">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>850</X>
          <Y>849</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>679</X>
          <Y>433</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="27" second="30">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="22" second="30">
        <Label>Links to</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="9" second="30">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="31">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3256</X>
          <Y>869</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="32">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3463</X>
          <Y>873</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Project - Dataset application</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>EntryPoint</Name>
        <Access>Internal</Access>
        <Location left="381" top="785" />
        <Size width="196" height="113" />
        <Collapsed>False</Collapsed>
        <Member type="Method">static int Main(string[] args)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>
How do we deal with components? The core part of the application is in charge of picking the right ones, but we'll still need to be able to load them. For that we'll need loading information from somewhere.
The application can provide the exact assembly details (name, version number, public key etc.) but we'll need to know where to find the files.
                </Text>
        <Location left="10" top="468" />
        <Size width="296" height="159" />
      </Entity>
      <Entity type="Comment">
        <Text>Load types asynchronuously. The idea is to load the assemblies in an async way so that we're not waiting for them for too long.</Text>
        <Location left="2053" top="1442" />
        <Size width="211" height="102" />
      </Entity>
      <Entity type="Interface">
        <Name>IHistory</Name>
        <Access>Internal</Access>
        <Location left="628" top="367" />
        <Size width="162" height="99" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Comment">
        <Text>To create sub-datasets we create a DatasetRequest and send that over the wire to the application.</Text>
        <Location left="106" top="32" />
        <Size width="180" height="97" />
      </Entity>
      <Entity type="Class">
        <Name>DatasetRequest</Name>
        <Access>Public</Access>
        <Location left="10" top="217" />
        <Size width="334" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DatasetOfflineInformation DatasetToLoad { get; }</Member>
        <Member type="Property">public DatasetId Parent { get; }</Member>
        <Member type="Property">public bool ProvideParentWithHubConnection { get; }</Member>
        <Member type="Property">public ExpectedDatasetLoad ExpectedLoadPerMachine { get; }</Member>
        <Member type="Property">public LoadingLocation PreferredLoadingLocation { get; }</Member>
        <Member type="Property">public Range&lt;int&gt; DesiredDistributionRange { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Should be able to request an assembly to be streamed to the local machine. This is needed when we don't have the right plug-in assembly.</Text>
        <Location left="2053" top="1301" />
        <Size width="208" height="122" />
      </Entity>
      <Entity type="Interface">
        <Name>IContainer</Name>
        <Access>Public</Access>
        <Location left="1115" top="782" />
        <Size width="163" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Comment">
        <Text>DI container</Text>
        <Location left="1181" top="675" />
        <Size width="105" height="50" />
      </Entity>
      <Entity type="Class">
        <Name>ScheduleDistributor</Name>
        <Access>Public</Access>
        <Location left="1065" top="280" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IDistributeScheduleExecutions</Name>
        <Access>Public</Access>
        <Location left="891" top="107" />
        <Size width="605" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IExecuteSchedules Execute(ScheduleId scheduleId, CancellationToken? token = null, bool executeOutOfProcess = false)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ITrackDatasetLocks</Name>
        <Access>Public</Access>
        <Location left="520" top="512" />
        <Size width="304" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Method">DatasetLockKey LockForWriting()</Member>
        <Member type="Method">void RemoveWriteLock(DatasetLockKey key)</Member>
        <Member type="Method">DatasetLockKey LockForReading()</Member>
        <Member type="Method">void RemoveReadLock(DatasetLockKey key)</Member>
        <Member type="Property">bool IsLockedForWriting { get; }</Member>
        <Member type="Property">bool IsLockedForReading { get; }</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnLockForWriting</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnUnlockFromWriting</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnLockForReading</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnUnlockFromReading</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IScheduleExecutionCommands</Name>
        <Access>Public</Access>
        <Location left="1641" top="280" />
        <Size width="190" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Task Start(ExecutionId id)</Member>
        <Member type="Method">Task Pause(ExecutionId id)</Member>
        <Member type="Method">Task Stop(ExecutionId id)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ICommandSet</Name>
        <Access>Public</Access>
        <Location left="1896" top="759" />
        <Size width="456" height="97" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleExecutionCommands</Name>
        <Access>Internal</Access>
        <Location left="1641" top="459" />
        <Size width="186" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public Task Start(ExecutionId id)</Member>
        <Member type="Method">public Task Pause(ExecutionId id)</Member>
        <Member type="Method">public Task Stop(ExecutionId id)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleInformationCommands</Name>
        <Access>Public</Access>
        <Location left="1988" top="249" />
        <Size width="198" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IScheduleInformationCommands</Name>
        <Access>Public</Access>
        <Location left="1900" top="453" />
        <Size width="436" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Task&lt;IEnumerable&lt;ScheduleActionInformation&gt;&gt; AvailableActions()</Member>
        <Member type="Method">Task&lt;IEnumerable&lt;ScheduleConditionInformation&gt;&gt; AvailableConditions()</Member>
        <Member type="Method">Task&lt;IEnumerable&lt;ScheduleInformation&gt;&gt; AvailableSchedules()</Member>
        <Member type="Method">Task&lt;ScheduleInformation&gt; ScheduleInformation(ScheduleId id)</Member>
        <Member type="Method">Task&lt;IEditableSchedule&gt; Schedule(ScheduleId id)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IScheduleExecutionNotifications</Name>
        <Access>Public</Access>
        <Location left="1022" top="954" />
        <Size width="353" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Event">event EventHandler&lt;ScheduleEventArgs&gt; OnStart</Member>
        <Member type="Event">event EventHandler&lt;ScheduleEventArgs&gt; OnPause</Member>
        <Member type="Event">event EventHandler&lt;ProgressEventArgs&gt; OnExecutionProgress</Member>
        <Member type="Event">event EventHandler&lt;ExecutingVertexEventArgs&gt; OnVertexProcess</Member>
        <Member type="Event">event EventHandler&lt;ScheduleEventArgs&gt; OnFinish</Member>
      </Entity>
      <Entity type="Interface">
        <Name>INotificationSet</Name>
        <Access>Public</Access>
        <Location left="1080" top="1197" />
        <Size width="234" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Comment">
        <Text>Define one or more interfaces that provide access to some of the internals of the application (scheduling, component loading etc.) for plug-ins</Text>
        <Location left="1360" top="821" />
        <Size width="294" height="77" />
      </Entity>
      <Entity type="Class">
        <Name>GroupToMefTranslator</Name>
        <Access>Public</Access>
        <Location left="2053" top="1778" />
        <Size width="164" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ILoadGroups</Name>
        <Access>Public</Access>
        <Location left="2053" top="1601" />
        <Size width="204" height="78" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>ICommunicationChannelCommands</Name>
        <Access>Public</Access>
        <Location left="2253" top="1016" />
        <Size width="428" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IObservable&lt;EndpointId&gt; ReEstablishConnection(EndpointId oldEndpoint)</Member>
        <Member type="Method">IObservable Ping(EndpointId endpoint)</Member>
        <Member type="Method">IObservable Transfer(Stream data)</Member>
      </Entity>
      <Entity type="Class">
        <Name>ComponentTransferingCommands</Name>
        <Access>Public</Access>
        <Location left="1705" top="1301" />
        <Size width="230" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IComponentTransferingCommands</Name>
        <Access>Public</Access>
        <Location left="1705" top="1121" />
        <Size width="254" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Task LoadTemplate(ITemplate template)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>ComposablePartCatalog</Text>
        <Location left="2722" top="1442" />
        <Size width="160" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>Export provider?</Text>
        <Location left="2722" top="1507" />
        <Size width="117" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>MEF</Text>
        <Location left="2466" top="1790" />
        <Size width="61" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>Should we setup our own composition service?</Text>
        <Location left="2722" top="1635" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>OnDemandLoadCatalog</Name>
        <Access>Public</Access>
        <Location left="2390" top="1343" />
        <Size width="199" height="217" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CompositionContainer</Name>
        <Access>Public</Access>
        <Location left="2401" top="1628" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Make sure we load different components from different containers based on the desired lifespan. Most likely we'll split between data and non-data objects. Data should come out of the parent container (don't destroy until the app dies) everything else out of a child container that we can just kill.</Text>
        <Location left="2722" top="1301" />
        <Size width="280" height="132" />
      </Entity>
      <Entity type="Comment">
        <Text>We don't intend to track components and their connections. MEF can do all the work for that.</Text>
        <Location left="2722" top="1171" />
        <Size width="158" height="99" />
      </Entity>
      <Entity type="Comment">
        <Text>Components are created in "blocks". A block should be independant of other blocks and can be deleted by disposing the owning container.</Text>
        <Location left="2604" top="1753" />
        <Size width="215" height="99" />
      </Entity>
      <Entity type="Comment">
        <Text>Need a way to interchange components (e.g. Rhinoe vs OpenNurbs). This ability would also come in handy if we can't load a component but can load an equivalent one and if we want to export data (held by one component, translated by another) etc. etc.</Text>
        <Location left="2006" top="1939" />
        <Size width="259" height="139" />
      </Entity>
      <Entity type="Comment">
        <Text>Note that this also comes into play when we're dealing with versioning and we need to load an upgraded version of a component.</Text>
        <Location left="2356" top="1939" />
        <Size width="182" height="139" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Comment" first="1" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>150</X>
          <Y>656</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>356</X>
          <Y>849</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="4" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="7" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1128</X>
          <Y>757</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>815</X>
          <Y>409</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="7">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="8" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1224</X>
          <Y>750</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="7" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1156</X>
          <Y>412</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="9" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="7" second="11">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1090</X>
          <Y>784</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>849</X>
          <Y>646</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="16" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2135</X>
          <Y>726</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="15" second="16">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="12" second="13">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1861</X>
          <Y>338</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1861</X>
          <Y>804</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="14" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="17" second="18">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="7" second="17">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="20" second="30">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2167</X>
          <Y>1753</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="23" second="21">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1835</X>
          <Y>1403</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2028</X>
          <Y>1630</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="20" second="21">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="29" second="22">
        <Label>Request assembly transfer</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2495</X>
          <Y>1189</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="25" second="29">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2697</X>
          <Y>1474</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2614</X>
          <Y>1474</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="26" second="29">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2697</X>
          <Y>1534</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2626</X>
          <Y>1534</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="28" second="30">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="30" second="29">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="27" second="30">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="23" second="24">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="7" second="14">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1345</X>
          <Y>810</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1611</X>
          <Y>515</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="7" second="15">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1442</X>
          <Y>795</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2089</X>
          <Y>200</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="24" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1976</X>
          <Y>881</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="22" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2303</X>
          <Y>894</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="2" second="29">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="31" second="29">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="6" second="29">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2295</X>
          <Y>1359</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2354</X>
          <Y>1417</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="32" second="29">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2614</X>
          <Y>1365</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="34" second="20">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="19" second="7">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1303</X>
          <Y>836</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="33" second="30">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2589</X>
          <Y>1697</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="34" second="35">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2290</X>
          <Y>2007</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Project - Loader</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>LoaderApplication</Name>
        <Access>Public</Access>
        <Location left="851" top="61" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Defines the P2P app for loading onto a local machine.</Text>
        <Location left="475" top="172" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>
Assume that the whole system is unreliable. The following problems can occur:
- The client machine (apollo.core owner) can go down. Then the slaves are without an originator.
- The server (apollo.core.loaderXXX) can go down. Then the client and the slaves are without link
- The slave (apollo.core.dataset) can go down. Then the data is gone
- The network connection can drop. None of the machines disappear but if the connection is gone long enough / in the critical moment then we either lose data or identity.
                </Text>
        <Location left="10" top="10" />
        <Size width="391" height="216" />
      </Entity>
      <Entity type="Comment">
        <Text>All loaders should be able to process loading requests and respond with a plan that indicates how the dataset will be distributed etc.. The plan should have loading times, processing times etc.. This would allow the client to determine which solution is best for them, while still allowing the loaders to have control over their own domain.</Text>
        <Location left="10" top="529" />
        <Size width="387" height="106" />
      </Entity>
      <Entity type="Class">
        <Name>HardwareSpecification</Name>
        <Access>Public</Access>
        <Location left="1126" top="1645" />
        <Size width="790" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public HardwareSpecification(ulong memoryInBytes, ProcessorSpecification[] processors, DiskSpecification[] disks, NetworkSpecification[] networks)</Member>
        <Member type="Property">public ulong MemoryInBytes { get; }</Member>
        <Member type="Method">public IEnumerable&lt;ProcessorSpecification&gt; Processors()</Member>
        <Member type="Method">public IEnumerable&lt;DiskSpecification&gt; Disks()</Member>
        <Member type="Method">public IEnumerable&lt;NetworkSpecification&gt; Networks()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>The goal for the loaders is to provide a set of distribution proposals based on a given distribution requirement. The loaders will create one distribution plan for each dataset that must be distributed. This allows smaller machines to be used even if they're not able to handle all of the datasets in the distribution request.</Text>
        <Location left="10" top="233" />
        <Size width="387" height="110" />
      </Entity>
      <Entity type="Comment">
        <Text>
Note that the final distribution of the jobs sounds like a tricky piece of work. We have to decide which jobs to give to what machines so that the overall run-time is lowest. However this depends on many things. For instance:
- Machines may be physically further away and thus require more time for transfer (which would suit smaller jobs instead of one bigger job).
- A cluster may be better suited to handle the whole set of calculations if we need intra-dataset communication.
                </Text>
        <Location left="10" top="346" />
        <Size width="387" height="179" />
      </Entity>
      <Entity type="Class">
        <Name>Machine</Name>
        <Access>Public</Access>
        <Location left="2086" top="1645" />
        <Size width="701" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Machine(IDictionary&lt;BaseLineId, BaseLineResult&gt; baselines)</Member>
        <Member type="Constructor">public Machine(NetworkIdentifier location, HardwareSpecification specification, IDictionary&lt;BaseLineId, BaseLineResult&gt; baselines)</Member>
        <Member type="Property">public NetworkIdentifier Location { get; }</Member>
        <Member type="Property">public HardwareSpecification Hardware { get; }</Member>
        <Member type="Method">public IEnumerable&lt;BaseLineResult&gt; BaseLines()</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>
Note that by the time we get all the plans back some of them may well be invalid.
How are we going to deal with that?
                </Text>
        <Location left="3679" top="1731" />
        <Size width="197" height="114" />
      </Entity>
      <Entity type="Class">
        <Name>NetworkIdentifier</Name>
        <Access>Public</Access>
        <Location left="3314" top="1990" />
        <Size width="208" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string DomainName { get; private set; }</Member>
        <Member type="Property">public bool IsPartOfGroup { get; }</Member>
        <Member type="Property">public string Group { get; private set; }</Member>
        <Member type="Property">public bool IsLocalMachine { get; }</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DistributionPlan</Name>
        <Access>Public</Access>
        <Location left="3256" top="1668" />
        <Size width="358" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DatasetId DistributionFor { get; }</Member>
        <Member type="Method">public IEnumerable&lt;MachineIdentifier&gt; MachinesToDistributeTo()</Member>
        <Member type="Property">public TimeSpan EstimatedTransferTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedLoadingTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedRunningTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedUnloadingTime { get; }</Member>
        <Member type="Property">public TimeSpan EstimatedReturnTransferTime { get; }</Member>
        <Member type="Property">public DateTimeOffset EarliestStartTime { get; }</Member>
        <Member type="Property">public DateTimeOffset EarliestEstimatedFinishTime { get; }</Member>
        <Member type="Method">public IObservable&lt;DatasetOnlineInformation&gt; Accept()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>The catch is that the child dataset(s) may or may not exist at this point. If the children are independent then we could potentially make them before the loading request. If the children are part of a domain decomposition then we can't because it depends on the available resources.</Text>
        <Location left="4768" top="1714" />
        <Size width="211" height="171" />
      </Entity>
      <Entity type="Enum">
        <Name>LoadingLocation</Name>
        <Access>Public</Access>
        <Location left="4214" top="2044" />
        <Size width="172" height="146" />
        <Collapsed>False</Collapsed>
        <Value>None</Value>
        <Value>Local</Value>
        <Value>Distributed</Value>
        <Value>DistributedOnPeerToPeer</Value>
        <Value>DistributedOnCluster</Value>
      </Entity>
      <Entity type="Comment">
        <Text>Defines how 'complex' a dataset is with respect to machine load (memory, CPU, HDD etc.)</Text>
        <Location left="4892" top="2076" />
        <Size width="183" height="95" />
      </Entity>
      <Entity type="Class">
        <Name>DatasetRequest</Name>
        <Access>Public</Access>
        <Location left="4286" top="1698" />
        <Size width="382" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IList&lt;DatasetOfflineInformation&gt; DatasetsToLoad { get; set; }</Member>
        <Member type="Property">public DatasetId Parent { get; set; }</Member>
        <Member type="Property">public bool ShouldProvideParentWithHubConnection { get; set; }</Member>
        <Member type="Property">public bool IsIntraDatasetCommunicationRequired { get; set; }</Member>
        <Member type="Property">public ExpectedDatasetLoad ExpectedLoadPerMachine { get; set; }</Member>
        <Member type="Property">public LoadingLocation PreferredLoadingLocation { get; set; }</Member>
        <Member type="Property">public MachineDistributionRange DesiredDistributionRange { get; set; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DatasetLoader</Name>
        <Access>Internal</Access>
        <Location left="3795" top="770" />
        <Size width="534" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public IObservable&lt;DistributionPlan&gt; ProposeDistributionFor(DatasetRequest request)</Member>
        <Member type="Method">internal IObservable&lt;DatasetOnlineInformation&gt; ImplementPlan(DistributionPlan planToImplement)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IHelpDistributingDatasets</Name>
        <Access>Public</Access>
        <Location left="3782" top="1449" />
        <Size width="459" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IObservable&lt;DistributionPlan&gt; ProposeDistributionFor(DatasetRequest request)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>The request needs to go out to all available loaders. How do we achieve that?</Text>
        <Location left="4170" top="1013" />
        <Size width="160" height="90" />
      </Entity>
      <Entity type="Comment">
        <Text>Note that we need to know not only how many machines and which machines to send this to, we also need to know when the request has disappeared in the great void.</Text>
        <Location left="4450" top="1013" />
        <Size width="255" height="109" />
      </Entity>
      <Entity type="Class">
        <Name>DatasetLoaderCommandSet</Name>
        <Access>Public</Access>
        <Location left="1351" top="1132" />
        <Size width="174" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IDatasetLoaderCommandSet</Name>
        <Access>Public</Access>
        <Location left="1719" top="672" />
        <Size width="560" height="129" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IObservable&lt;DistributionPlan&gt; Propose(DatasetRequest request)</Member>
        <Member type="Method">IObservable&lt;PlanExecutionId&gt; AcceptPlan(DistributionPlan plan)</Member>
        <Member type="Method">IObservable&lt;EndPointId&gt; LoadNewDataset(MachineId machineToLoadOn)</Member>
        <Member type="Method">IObservable&lt;EndPointId&gt; LoadNewDataset(MachineId machineToLoadOn, PlanExecutionId planId)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>
Should there be a config that indicates in what order things should be considered?
Define:
- Which machines are what (cluster, p2p, local)
- Which order things go in (cluster, p2p, local)
                </Text>
        <Location left="4170" top="1222" />
        <Size width="304" height="106" />
      </Entity>
      <Entity type="Comment">
        <Text>Dispatches incomming messages to the correct recipient.</Text>
        <Location left="1378" top="111" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Need to be able to broadcast that we're on the network and that we're getting off the network.</Text>
        <Location left="1111" top="97" />
        <Size width="181" height="90" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we need the ability to get a distribution plan for multiple datasets?</Text>
        <Location left="4620" top="1515" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Interface">
        <Name>ILoadDatasets</Name>
        <Access>Internal</Access>
        <Location left="3177" top="1449" />
        <Size width="528" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IObservable&lt;DatasetOnlineInformation&gt; ImplementPlan(DistributionPlan planToImplement)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Initialize the app through the IOC container. Possibly have a bunch of startable components that do the actual work.</Text>
        <Location left="475" top="61" />
        <Size width="191" height="94" />
      </Entity>
      <Entity type="Comment">
        <Text>We're adding an interfae these because these interfaces are needed in the core application so that we can build a dynamic proxy for them in order to mirror the command set.</Text>
        <Location left="913" top="486" />
        <Size width="216" height="114" />
      </Entity>
      <Entity type="Class">
        <Name>CommandSet</Name>
        <Access>Public</Access>
        <Location left="1214" top="895" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MachineCommands</Name>
        <Access>Public</Access>
        <Location left="1106" top="1132" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IMachineCommands</Name>
        <Access>Public</Access>
        <Location left="546" top="895" />
        <Size width="585" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IObservable&lt;string&gt; DetermineMissingOrIncorrectAssemblies(IEnumerable&lt;string&gt; requiredAssemblies)</Member>
        <Member type="Method">IObservable TransferAssembly(string assemblyPath)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ICommandSet</Name>
        <Access>Public</Access>
        <Location left="1068" top="672" />
        <Size width="456" height="147" />
        <Collapsed>False</Collapsed>
        <Member type="Event">event EventHandler&lt;CommandSetAvailabilityEventArgs&gt; OnAvailabilityChange</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnInvalidate</Member>
      </Entity>
      <Entity type="Class">
        <Name>DistributorCalculator</Name>
        <Access>Public</Access>
        <Location left="1351" top="1348" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICommandSetProxy</Name>
        <Access>Public</Access>
        <Location left="3208" top="715" />
        <Size width="163" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Comment">
        <Text>
Distributed processing fallacy 5:
Topology doesn't change:
- It does, all the time. More so for clients than for servers but still.
==&gt; Do not rely on a specific machine. Get machines to broadcast their presence if they are on the network and ready to work. Ditto for going offline. WCF-discovery should work for this.
                </Text>
        <Location left="4170" top="459" />
        <Size width="339" height="160" />
      </Entity>
      <Entity type="Comment">
        <Text>
Distributed processing fallacy 8:
The network is homegeous
- It's not, there's all kinds of stuff on it
==&gt; Machines may be more or less powerful than the 'current' machine etc. Not much we can do about it other than keep it in mind.
                </Text>
        <Location left="3756" top="493" />
        <Size width="339" height="123" />
      </Entity>
      <Entity type="Class">
        <Name>MachineDistributionRange</Name>
        <Access>Public</Access>
        <Location left="3981" top="2044" />
        <Size width="168" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int Minimum { get; }</Member>
        <Member type="Property">public int Maximum { get; }</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ExpectedDatasetLoad</Name>
        <Access>Public</Access>
        <Location left="4447" top="2044" />
        <Size width="346" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public long OnDiskSizeInBytes { get; set; }</Member>
        <Member type="Property">public long InMemorySizeInBytes { get; set; }</Member>
        <Member type="Property">public BaseLineId BaseLine { get; set; }</Member>
        <Member type="Property">public double RelativeMemoryRunningExpansion { get; set; }</Member>
        <Member type="Property">public double RelativeOnDiskExpansionAfterRunning { get; set; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DiskSpecification</Name>
        <Access>Public</Access>
        <Location left="901" top="1968" />
        <Size width="531" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public DiskSpecification(string serialNumber, ulong totalSpace, ulong availableSpace)</Member>
        <Member type="Constructor">public DiskSpecification(string name, string serialNumber, ulong totalSpace, ulong availableSpace)</Member>
        <Member type="Property">public string Name { get; private set; }</Member>
        <Member type="Property">public string SerialNumber { get; private set; }</Member>
        <Member type="Property">public ulong TotalSpace { get; private set; }</Member>
        <Member type="Property">public long AvailableSpace { get; private set; }</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ProcessorSpecification</Name>
        <Access>Public</Access>
        <Location left="1256" top="2249" />
        <Size width="803" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public ProcessorSpecification(string name, int addressWidth, ProcessorArchitecture architecture, long cores, long logicalProcessors, long clockSpeed)</Member>
        <Member type="Property">public string Name { get; private set; }</Member>
        <Member type="Property">public int AddressWidth { get; private set; }</Member>
        <Member type="Property">internal ProcessorArchitecture Architecture { get; private set; }</Member>
        <Member type="Property">public long NumberOfCores { get; private set; }</Member>
        <Member type="Property">public long NumberOfLogicalProcessors { get; private set; }</Member>
        <Member type="Property">public long NumberOfLogicalProcessors { get; private set; }</Member>
        <Member type="Property">public long ClockSpeedInMHz { get; private set; }</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NetworkSpecification</Name>
        <Access>Public</Access>
        <Location left="1649" top="1968" />
        <Size width="504" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NetworkSpecification(string name, string macAddress, bool isConnected, ulong speed)</Member>
        <Member type="Property">public string Name { get; private set; }</Member>
        <Member type="Property">public string MacAddress { get; private set; }</Member>
        <Member type="Property">public bool IsConnected { get; private set; }</Member>
        <Member type="Property">public ulong SpeedInBitsPerSecond { get; private set; }</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>
Should check that the return value is either one of:
- void
- Task
- IObservable

And all parameters need to be serializable.
                </Text>
        <Location left="1378" top="444" />
        <Size width="255" height="139" />
      </Entity>
      <Entity type="Class">
        <Name>MessageHub</Name>
        <Access>Public</Access>
        <Location left="1100" top="274" />
        <Size width="392" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public TCommands CommandsFor&lt;TCommands&gt;(EndpointId endpoint)</Member>
        <Member type="Method">public void RegisterCommands(CommandSet set)</Member>
        <Member type="Method">public void CloseConnectionTo(EndpointId endpoint)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MessageHub</Name>
        <Access>Public</Access>
        <Location left="3073" top="263" />
        <Size width="392" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public TCommands CommandsFor&lt;TCommands&gt;(EndpointId endpoint)</Member>
        <Member type="Method">public void RegisterCommands(CommandSet set)</Member>
        <Member type="Method">public void CloseConnectionTo(EndpointId endpoint)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>ProcessorArchitecture</Name>
        <Access>Public</Access>
        <Location left="1567" top="2624" />
        <Size width="163" height="197" />
        <Collapsed>False</Collapsed>
        <Value>None</Value>
        <Value>x86</Value>
        <Value>Mips</Value>
        <Value>Alpha</Value>
        <Value>PowerPc</Value>
        <Value>Itanium</Value>
        <Value>x64</Value>
        <Value>Unknown</Value>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Comment" first="1" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="7" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2057</X>
          <Y>1705</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1941</X>
          <Y>1705</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="8" second="10">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="10" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="11" second="14">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="14" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="15" second="16">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="18" second="17">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="19" second="20">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1774</X>
          <Y>826</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="17" second="21">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="16" second="14">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>4278</X>
          <Y>1499</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="24" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>4527</X>
          <Y>1670</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="10" second="25">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3425</X>
          <Y>1643</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3425</X>
          <Y>1557</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="26" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>812</X>
          <Y>114</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="27" second="31">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1167</X>
          <Y>542</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1230</X>
          <Y>647</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="30" second="31">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>749</X>
          <Y>867</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1043</X>
          <Y>745</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="29" second="30">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1081</X>
          <Y>1170</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>808</X>
          <Y>1015</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="29" second="28">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1183</X>
          <Y>1102</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1257</X>
          <Y>997</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="28" second="31">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="20" second="31">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1685</X>
          <Y>742</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1549</X>
          <Y>742</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="19" second="28">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1337</X>
          <Y>997</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="19" second="32">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="33" second="20">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="34" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>4143</X>
          <Y>742</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="35" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>3902</X>
          <Y>731</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="14" second="36">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>4251</X>
          <Y>1877</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="37">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="13" second="37">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="4" second="38">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1101</X>
          <Y>1724</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>968</X>
          <Y>1943</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="4" second="39">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1579</X>
          <Y>2222</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="4" second="40">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1941</X>
          <Y>1760</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1996</X>
          <Y>1943</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="17" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="15" second="33">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3768</X>
          <Y>839</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="15" second="25">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3883</X>
          <Y>907</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="41" second="31">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1448</X>
          <Y>647</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="42" second="31">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="42">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>926</X>
          <Y>302</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1075</X>
          <Y>341</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="23" second="42">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="22" second="42">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="43" second="42">
        <Label>Connects over the network</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="43" second="33">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="32" second="7">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1591</X>
          <Y>1435</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="39" second="44">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Project - Persistence</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Comment">
        <Text>
Define different template types. Each type will have it's own set of rules. Suggested types are:
- Temporary: no versioning necessary
- SaveFileStorage: versioned, is part of the main project fileset
                </Text>
        <Location left="126" top="674" />
        <Size width="260" height="137" />
      </Entity>
      <Entity type="Comment">
        <Text>Delegates could be useful here. Note that we can't use Func&lt;&gt; or Action&lt;&gt; because they don't serialize across AppDomains</Text>
        <Location left="1182" top="687" />
        <Size width="220" height="102" />
      </Entity>
      <Entity type="Comment">
        <Text>
Think about how we handle versioning. For some file types that will not be a problem. For others it will. Solutions could be:
- Have a different serializer for each version. Each version of the system updates all writers + adds new ones.
                </Text>
        <Location left="146" top="446" />
        <Size width="242" height="151" />
      </Entity>
      <Entity type="Comment">
        <Text>
Have the persistence system be a service. However we never write in that appdomain. All the service does is listen to requests from other services for read or write. When a request comes in we send a serializer across the AppDomains.

This serializer should be serializable itself (to cross the AppDomain boundaries) and so it shouldn't contain any non-serializable data. When the serializer gets to the otherside it can be used to write out what ever data is available.
                </Text>
        <Location left="1104" top="425" />
        <Size width="382" height="168" />
      </Entity>
      <Entity type="Comment">
        <Text>When using this system components should be allowed to register their own data templates. This means that the template should not write directly to disk?</Text>
        <Location left="470" top="393" />
        <Size width="210" height="101" />
      </Entity>
      <Entity type="Comment">
        <Text>A template will match a specific file type to a data stream. We should allow multiple templates for a single data stream type. This will be necessary for data exports etc.</Text>
        <Location left="456" top="228" />
        <Size width="241" height="107" />
      </Entity>
      <Entity type="Comment">
        <Text>The ID is used to identify a persistence template based on the data it takes and the data it writes.</Text>
        <Location left="456" top="48" />
        <Size width="185" height="89" />
      </Entity>
      <Entity type="Interface">
        <Name>IPersistenceId</Name>
        <Access>Public</Access>
        <Location left="189" top="55" />
        <Size width="163" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IPersistenceTemplate&lt;TInput&gt;</Name>
        <Access>Public</Access>
        <Location left="175" top="174" />
        <Size width="191" height="178" />
        <Collapsed>False</Collapsed>
        <Member type="Property">IPersistenceId Id { get; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>KernelService</Name>
        <Access>Public</Access>
        <Location left="753" top="55" />
        <Size width="302" height="153" />
        <Collapsed>False</Collapsed>
        <Member type="Method">protected abstract void StartService()</Member>
        <Member type="Event">public event EventHandler&lt;StartupProgressEventArgs&gt; StartupProgress</Member>
        <Member type="Method">public void Start()</Member>
        <Member type="Method">public StartupState GetStartupState()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PersistenceService</Name>
        <Access>Public</Access>
        <Location left="826" top="462" />
        <Size width="162" height="94" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>how to deal with configurations? Where do we store the default config file. And how do we write the config files.</Text>
        <Location left="838" top="712" />
        <Size width="202" height="86" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Comment" first="2" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="3" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="2" second="10">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>449</X>
          <Y>525</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>782</X>
          <Y>525</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="2" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="3" second="10">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="4" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>394</X>
          <Y>337</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="5" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="5" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="6" second="7">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="11" second="10">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>799</X>
          <Y>545</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="10" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Project - Plug-ins</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>PluginRepository</Name>
        <Access>Internal</Access>
        <Location left="1973" top="1201" />
        <Size width="162" height="139" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Define default objects that get substituted for specific types, attribute values etc.. This is just like an IOC container. e.g. when using Autofac you hardcode that resolving interface X always gets you an instance of object Y. We can do a similar system for simple system components (e.g. a logger, a console application runner etc.)</Text>
        <Location left="3147" top="1734" />
        <Size width="368" height="124" />
      </Entity>
      <Entity type="Comment">
        <Text>Allow component selection to be based on many things, including meta-data (queries like: Coworker WITH TYPE = ISilly AND SomeAttribute=&lt;SomeValue&gt;</Text>
        <Location left="3554" top="1381" />
        <Size width="312" height="84" />
      </Entity>
      <Entity type="Comment">
        <Text>Keep track of all the assemblies we have tried to load and note the ones that we failed to load. Do not try to load those again in the next session (unless the version number changes / CRC changes)</Text>
        <Location left="2139" top="1739" />
        <Size width="237" height="123" />
      </Entity>
      <Entity type="Comment">
        <Text>Store the plug-in data in a version safe way. So that we can always map a component to it's assembly and assembly version</Text>
        <Location left="2769" top="1381" />
        <Size width="202" height="99" />
      </Entity>
      <Entity type="Comment">
        <Text>Allow putting constraints on the loading of an assembly. For purposes of licensing etc.</Text>
        <Location left="2266" top="276" />
        <Size width="187" height="97" />
      </Entity>
      <Entity type="Comment">
        <Text>One way to stop non-allowed assemblies from being loaded when using MEF is described here: http://blogs.msdn.com/b/dsplaisted/archive/2010/11/01/how-to-control-who-can-write-extensions-for-your-mef-application.aspx</Text>
        <Location left="2185" top="2111" />
        <Size width="270" height="118" />
      </Entity>
      <Entity type="Comment">
        <Text>How are we going to deal with versions? We need to provide some upgrade path and users should be able to not upgrade and then store their data in the original (non-upgraded) format.</Text>
        <Location left="2865" top="1556" />
        <Size width="237" height="103" />
      </Entity>
      <Entity type="Comment">
        <Text>We'll need to know if loading a component requires an upgrade in the data somehow.</Text>
        <Location left="2980" top="1381" />
        <Size width="160" height="103" />
      </Entity>
      <Entity type="Comment">
        <Text>Mono.Addins is out because it has some very strict definitions that won't work for us. Examples are:
* Addin root. We don't really have one (technically the dataset will be but not really)
* Can only get extensions for extension points you define.
                </Text>
        <Location left="10" top="10" />
        <Size width="496" height="97" />
      </Entity>
      <Entity type="Comment">
        <Text>Going with MEF as base but then we'll customize it pretty heavily so that we can get:
* Plug-in scanning &amp; data storage for the host application
* Delay loading catalog in the Dataset application (delay load includes transfering the assembly across)
* Selection mechanism(s) that works on serialized data and actual type data
                </Text>
        <Location left="10" top="113" />
        <Size width="496" height="110" />
      </Entity>
      <Entity type="Comment">
        <Text>Mmm here's a really good reason to delay load: http://blog.bits-in-motion.com/2009/09/gallio-plug-in-model.html.

Basically if you have lots of assemblies then it's going to be slow to load them all ...
                </Text>
        <Location left="2397" top="1739" />
        <Size width="310" height="125" />
      </Entity>
      <Entity type="Comment">
        <Text>
How are we going to let plug-ins provide all the information they want to provide. Allow plug-ins to provide:
* That they are a plug-in of a specific type (data for classes, functions for transformers)
* Settings: name, description, default value and where to put the current value. Also notification of change
                    * Events (mainly for data)
                </Text>
        <Location left="2265" top="1381" />
        <Size width="280" height="167" />
      </Entity>
      <Entity type="Class">
        <Name>PluginDetector</Name>
        <Access>Internal</Access>
        <Location left="2244" top="1967" />
        <Size width="243" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void SearchDirectory(string directory)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RemoteAssemblyScanner</Name>
        <Access>Internal</Access>
        <Location left="2023" top="2298" />
        <Size width="429" height="119" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public IEnumerable&lt;PluginInfo&gt; Scan(IEnumerable&lt;string&gt; assembliesToScan)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>MarshalByRef</Text>
        <Location left="2054" top="2167" />
        <Size width="98" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>Features should be able to link to regions / goals / etc. etc. so that we can  indicate when to use a given feature</Text>
        <Location left="3231" top="1381" />
        <Size width="191" height="84" />
      </Entity>
      <Entity type="Class">
        <Name>SerializedExportDefinition</Name>
        <Access>Internal</Access>
        <Location left="1248" top="732" />
        <Size width="300" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IEnumerable&lt;PluginMetadata&gt; Metadata { get; }</Member>
        <Member type="Property">public string ContractName { get; }</Member>
        <Member type="Property">public SerializedTypeIdentity DeclaringType { get; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedImportDefinition</Name>
        <Access>Internal</Access>
        <Location left="1225" top="1028" />
        <Size width="313" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IEnumerable&lt;PluginMetadata&gt; Metadata { get; }</Member>
        <Member type="Property">public string ConstractName { get; }</Member>
        <Member type="Property">public SerializedTypeIdentity DeclaringType { get; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedAssemblyDefinition</Name>
        <Access>Internal</Access>
        <Location left="2252" top="427" />
        <Size width="217" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string FullName { get; }</Member>
        <Member type="Property">public Version Version { get; }</Member>
        <Member type="Property">public CultureInfo Culture { get; }</Member>
        <Member type="Property">public string PublicKeyToken { get; }</Member>
        <Member type="Property">public string FullName { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedTypeDefinition</Name>
        <Access>Internal</Access>
        <Location left="2388" top="626" />
        <Size width="345" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public SerializedTypeIdentity Identity { get; }</Member>
        <Member type="Property">public SerializedTypeIdentity BaseType { get; }</Member>
        <Member type="Property">public IEnumerable&lt;SerializedTypeIdentity&gt; Interfaces { get; }</Member>
        <Member type="Property">public bool IsClass { get; }</Member>
        <Member type="Property">public bool IsInterface { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>How are we going to send this to the dataset. And how are we going to indicate that it should be send etc.?</Text>
        <Location left="3885" top="1882" />
        <Size width="244" height="105" />
      </Entity>
      <Entity type="Comment">
        <Text>How does this all link to the actual numerics / geometry stuff?</Text>
        <Location left="3253" top="431" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>The selector is used to select the correct templates based on the settings of the geometry / goal. For instance the geometry could have a material assigned that is a fluid. That would mean that the selection criteria are "should handle fluids"</Text>
        <Location left="3221" top="588" />
        <Size width="256" height="122" />
      </Entity>
      <Entity type="Interface">
        <Name>ITranslateGroupsForTransport</Name>
        <Access>Public</Access>
        <Location left="3899" top="1745" />
        <Size width="186" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Class">
        <Name>GroupSelector</Name>
        <Access>Internal</Access>
        <Location left="3207" top="1563" />
        <Size width="630" height="91" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ISelectComponentGroups</Name>
        <Access>Internal</Access>
        <Location left="3154" top="872" />
        <Size width="642" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IEnumerable&lt;GroupDescriptor&gt; MatchingGroups(IEnumerable&lt;Tuple&lt;object, object&gt;&gt; selectionCriteria)</Member>
        <Member type="Method">IEnumerable&lt;GroupDescriptor&gt; MatchingGroups(IPluginGroup groupToLink)</Member>
        <Member type="Method">IPluginGroup CompleteGroup(IPluginGroup group)</Member>
        <Member type="Method">IPluginGroup CompleteGroup(IPluginGroup group, params IPluginGroup[] sharableGroups)</Member>
        <Member type="Method">IPluginGroup LinkGroups(params IPluginGroup[] groups)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Should be able to specify exactly which group / component gets loaded in case you want to repeat a specific simulation</Text>
        <Location left="2876" top="893" />
        <Size width="195" height="109" />
      </Entity>
      <Entity type="Class">
        <Name>GroupDescriptor</Name>
        <Access>Internal</Access>
        <Location left="3041" top="1102" />
        <Size width="335" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string ContractName { get; }</Member>
        <Member type="Property">public IEnumerable&lt;Tuple&lt;object, object&gt;&gt; MetaData { get; }</Member>
        <Member type="Method">public IPluginGroup Select()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IPluginGroup</Name>
        <Access>Public</Access>
        <Location left="3912" top="761" />
        <Size width="286" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IEnumerable&lt;GroupProperty&gt; Properties()</Member>
        <Member type="Method">bool IsComplete()</Member>
      </Entity>
      <Entity type="Class">
        <Name>GroupConnections</Name>
        <Access>Internal</Access>
        <Location left="3683" top="351" />
        <Size width="274" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ComponentGroup</Name>
        <Access>Internal</Access>
        <Location left="4074" top="493" />
        <Size width="162" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IConnectComponentGroups</Name>
        <Access>Public</Access>
        <Location left="3703" top="535" />
        <Size width="268" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IEnumerable&lt;IPluginGroup&gt; Groups()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Actions and conditions can define name / description by convention. We'll look at their resources under: &lt;ClassName&gt;_&lt;XXXXName&gt;_YYY where XXX is either action or condition and YYY is either name or description</Text>
        <Location left="1473" top="224" />
        <Size width="232" height="126" />
      </Entity>
      <Entity type="Comment">
        <Text>Define one or more interfaces that provide access to some of the internals of the application (scheduling, component loading etc.) for plug-ins</Text>
        <Location left="1675" top="1394" />
        <Size width="294" height="77" />
      </Entity>
      <Entity type="Interface">
        <Name>IPluginRepository</Name>
        <Access>Public</Access>
        <Location left="1984" top="1528" />
        <Size width="162" height="99" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Comment">
        <Text>How are we going to deal with Transform vs Data (and how does that tie in to actions / conditions)</Text>
        <Location left="2326" top="1268" />
        <Size width="182" height="86" />
      </Entity>
      <Entity type="Class">
        <Name>SerializedScheduleActionDefinition</Name>
        <Access>Internal</Access>
        <Location left="1473" top="41" />
        <Size width="270" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string ContractName { get; }</Member>
        <Member type="Property">public SerializedMethodDefinition Method { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedScheduleConditionDefinition</Name>
        <Access>Internal</Access>
        <Location left="1473" top="412" />
        <Size width="233" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string ContractName { get; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedConstructorDefinition</Name>
        <Access>Internal</Access>
        <Location left="275" top="1033" />
        <Size width="382" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public SerializedTypeIdentity DeclaringType { get; }</Member>
        <Member type="Property">public IEnumerable&lt;SerializedParameterDefinition&gt; Parameters { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedMethodDefinition</Name>
        <Access>Internal</Access>
        <Location left="337" top="543" />
        <Size width="382" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public SerializedTypeIdentity DeclaringType { get; }</Member>
        <Member type="Property">public string MethodName { get; }</Member>
        <Member type="Property">public SerializedTypeIdentity ReturnType { get; }</Member>
        <Member type="Property">public IEnumerable&lt;SerializedParameterDefinition&gt; Parameters { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedPropertyDefinition</Name>
        <Access>Internal</Access>
        <Location left="451" top="750" />
        <Size width="282" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string PropertyName { get; }</Member>
        <Member type="Property">public SerializedTypeIdentity PropertyType { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedParameterDefinition</Name>
        <Access>Internal</Access>
        <Location left="120" top="793" />
        <Size width="237" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; }</Member>
        <Member type="Property">public SerializedTypeIdentity Type { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedExportOnMethodDefinition</Name>
        <Access>Internal</Access>
        <Location left="813" top="593" />
        <Size width="270" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public SerializedMethodDefinition Method { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedExportOnPropertyDefinition</Name>
        <Access>Internal</Access>
        <Location left="813" top="750" />
        <Size width="277" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public SerializedPropertyDefinition Property { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedExportOnTypeDefinition</Name>
        <Access>Internal</Access>
        <Location left="813" top="482" />
        <Size width="209" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedImportOnConstructorDefinition</Name>
        <Access>Internal</Access>
        <Location left="797" top="1097" />
        <Size width="310" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public SerializedConstructorDefinition Constructor { get; }</Member>
        <Member type="Property">public SerializedParameterDefinition Parameter { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedImportOnPropertyDefinition</Name>
        <Access>Internal</Access>
        <Location left="813" top="922" />
        <Size width="277" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public SerializedPropertyDefinition Property { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedScheduleConditionOnPropertyDefinition</Name>
        <Access>Internal</Access>
        <Location left="935" top="329" />
        <Size width="300" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public SerializedPropertyDefinition Property { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedScheduleConditionOnMethodDefinition</Name>
        <Access>Internal</Access>
        <Location left="935" top="189" />
        <Size width="295" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public SerializedMethodDefinition Method { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedTypeIdentity</Name>
        <Access>Internal</Access>
        <Location left="1880" top="626" />
        <Size width="287" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; }</Member>
        <Member type="Property">public string Namespace { get; }</Member>
        <Member type="Property">public string AssemblyQualifiedName { get; }</Member>
        <Member type="Property">public string FullName { get; }</Member>
        <Member type="Property">public SerializedAssemblyDefinition Assembly { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PluginInfo</Name>
        <Access>Internal</Access>
        <Location left="1579" top="2291" />
        <Size width="292" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public PluginFileInfo FileInfo { get; set; }</Member>
        <Member type="Method">public void AddType(PluginTypeInfo type)</Member>
        <Member type="Method">public void AddGroup(PluginGroupInfo group)</Member>
        <Member type="Property">public IEnumerable&lt;PluginTypeInfo&gt; Types { get; }</Member>
        <Member type="Property">public IEnumerable&lt;PluginGroupInfo&gt; Groups { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PluginFileInfo</Name>
        <Access>Internal</Access>
        <Location left="1388" top="2092" />
        <Size width="260" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Path { get; }</Member>
        <Member type="Property">public DateTimeOffset LastWriteTimeUtc { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PluginTypeInfo</Name>
        <Access>Internal</Access>
        <Location left="1698" top="928" />
        <Size width="447" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public SerializedAssemblyDefinition Assembly { get; set; }</Member>
        <Member type="Property">public SerializedTypeIdentity Type { get; set; }</Member>
        <Member type="Property">public IEnumerable&lt;SerializedImportDefinition&gt; Imports { get; set; }</Member>
        <Member type="Property">public IEnumerable&lt;SerializedExportDefinition&gt; Exports { get; set; }</Member>
        <Member type="Property">public IEnumerable&lt;SerializedScheduleActionDefinition&gt; Actions { get; set; }</Member>
        <Member type="Property">public IEnumerable&lt;SerializedScheduleConditionDefinition&gt; Conditions { get; set; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PluginGroupInfo</Name>
        <Access>Internal</Access>
        <Location left="1257" top="1548" />
        <Size width="508" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public GroupRegistrationId Id { get; }</Member>
        <Member type="Property">public IEnumerable&lt;SerializedGroupObjectDefinition&gt; Objects { get; set; }</Member>
        <Member type="Property">public IDictionary&lt;ImportRegistrationId, ExportRegistrationId&gt; InternalConnections { get; set; }</Member>
        <Member type="Property">public SerializedScheduleDefinition Schedule { get; set; }</Member>
        <Member type="Property">public SerializedGroupExportDefinition GroupExport { get; set; }</Member>
        <Member type="Property">public IEnumerable&lt;SerializedGroupImportDefinition&gt; GroupImports { get; set; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedScheduleDefinition</Name>
        <Access>Internal</Access>
        <Location left="635" top="1490" />
        <Size width="495" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public GroupRegistrationId ContainingGroup { get; }</Member>
        <Member type="Property">public ScheduleId ScheduleId { get; }</Member>
        <Member type="Property">public IEditableSchedule Schedule { get; }</Member>
        <Member type="Property">public IDictionary&lt;ScheduleElementId, ScheduleActionRegistrationId&gt; Actions { get; }</Member>
        <Member type="Property">public IDictionary&lt;ScheduleElementId, ScheduleConditionRegistrationId&gt; Conditions { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedGroupObjectDefinition</Name>
        <Access>Internal</Access>
        <Location left="635" top="1261" />
        <Size width="454" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ObjectRegistrationId Id { get; }</Member>
        <Member type="Property">public SerializedTypeIdentity Type { get; }</Member>
        <Member type="Property">public int Index { get; }</Member>
        <Member type="Property">public IEnumerable&lt;ExportRegistrationId&gt; RegisteredExports { get; }</Member>
        <Member type="Property">public IEnumerable&lt;ImportRegistrationId&gt; RegisteredImports { get; }</Member>
        <Member type="Property">public IEnumerable&lt;ScheduleActionRegistrationId&gt; RegisteredActions { get; }</Member>
        <Member type="Property">public IEnumerable&lt;ScheduleConditionRegistrationId&gt; RegisteredConditions { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedGroupImportDefinition</Name>
        <Access>Internal</Access>
        <Location left="635" top="1749" />
        <Size width="363" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string ContractName { get; }</Member>
        <Member type="Property">public GroupRegistrationId ContainingGroup { get; }</Member>
        <Member type="Property">public EditableInsertVertex ScheduleInsertPosition { get; }</Member>
        <Member type="Property">public IEnumerable&lt;ImportRegistrationId&gt; ImportsToMatch { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializedGroupExportDefinition</Name>
        <Access>Internal</Access>
        <Location left="635" top="1933" />
        <Size width="360" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string ContractName { get; }</Member>
        <Member type="Property">public GroupRegistrationId ContainingGroup { get; }</Member>
        <Member type="Property">public ScheduleId ScheduleToExport { get; }</Member>
        <Member type="Property">public IEnumerable&lt;ExportRegistrationId&gt; ProvidedExports { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Push these in separately because we need all the types in the type-hierarchy, but not all types will be plugin types.</Text>
        <Location left="2266" top="857" />
        <Size width="198" height="102" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Comment" first="7" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2899</X>
          <Y>1505</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="8" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3070</X>
          <Y>1511</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="15" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2101</X>
          <Y>2273</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="13" second="14">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2512</X>
          <Y>2025</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2505</X>
          <Y>2377</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="3" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2279</X>
          <Y>1889</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="22" second="23">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="6" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="25" second="24">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3862</X>
          <Y>1611</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>4006</X>
          <Y>1720</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="21" second="24">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3970</X>
          <Y>1857</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="25" second="26">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="27" second="26">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="26" second="28">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="31" second="29">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="30" second="32">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3781</X>
          <Y>453</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="16" second="25">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>3327</X>
          <Y>1535</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="2" second="25">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="1" second="25">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>3305</X>
          <Y>1679</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="23" second="26">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3329</X>
          <Y>735</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="32" second="29">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="34" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1870</X>
          <Y>1369</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1939</X>
          <Y>1299</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="28" second="35">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="0" second="35">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2100</X>
          <Y>1365</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="11" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2433</X>
          <Y>1942</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="13" second="35">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2219</X>
          <Y>2001</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="7" second="25">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="36" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2160</X>
          <Y>1229</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="12" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2161</X>
          <Y>1306</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="33" second="37">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="33" second="38">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="43" second="17">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1221</X>
          <Y>763</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="44" second="17">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="45" second="17">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1317</X>
          <Y>689</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="43" second="40">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="44" second="41">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="40" second="42">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>312</X>
          <Y>614</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>207</X>
          <Y>768</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="39" second="42">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>246</X>
          <Y>1071</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>220</X>
          <Y>937</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="47" second="18">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="46" second="18">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1132</X>
          <Y>1140</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1193</X>
          <Y>1140</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="46" second="42">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>769</X>
          <Y>1181</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>183</X>
          <Y>929</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="46" second="39">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="47" second="41">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>758</X>
          <Y>973</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="37" second="40">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1372</X>
          <Y>72</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>637</X>
          <Y>518</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="48" second="38">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1281</X>
          <Y>371</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1437</X>
          <Y>445</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="49" second="38">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1332</X>
          <Y>231</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1442</X>
          <Y>422</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="49" second="40">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>882</X>
          <Y>214</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>665</X>
          <Y>518</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="48" second="41">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>830</X>
          <Y>364</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>758</X>
          <Y>777</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="50" second="19">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2192</X>
          <Y>729</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2214</X>
          <Y>465</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="20" second="50">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2503</X>
          <Y>247</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2099</X>
          <Y>599</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="5" second="19">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="35" second="51">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2012</X>
          <Y>1652</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="51">
        <Label>Creates</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1976</X>
          <Y>2367</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1896</X>
          <Y>2367</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="51" second="52">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1654</X>
          <Y>2265</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="53" second="50">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="20">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2272</X>
          <Y>1218</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="18" second="53">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="17" second="53">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1650</X>
          <Y>993</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="37" second="53">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1768</X>
          <Y>92</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1850</X>
          <Y>900</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="38" second="53">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1751</X>
          <Y>453</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1815</X>
          <Y>903</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="54" second="56">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1114</X>
          <Y>1361</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="54" second="55">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="54" second="57">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1232</X>
          <Y>1687</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="54" second="58">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1046</X>
          <Y>2011</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="59" second="20">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2485</X>
          <Y>813</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Project - Scheduling</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IStoreSchedules</Name>
        <Access>Internal</Access>
        <Location left="1000" top="407" />
        <Size width="1076" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Method">ScheduleInformation Add(IEditableSchedule schedule, string name, string summary, string description, IEnumerable&lt;IScheduleVariable&gt; produces, IEnumerable&lt;IScheduleDependency&gt; dependsOn)</Member>
        <Member type="Method">void Update(ScheduleId scheduleToReplace, IEditableSchedule newSchedule)</Member>
        <Member type="Method">void Remove(ScheduleId id)</Member>
        <Member type="Method">bool Contains(ScheduleId id)</Member>
        <Member type="Method">IEditableSchedule Schedule(ScheduleId id)</Member>
        <Member type="Method">ScheduleInformation Information(ScheduleId id)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IStoreScheduleConditions</Name>
        <Access>Internal</Access>
        <Location left="1000" top="215" />
        <Size width="908" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Method">ScheduleConditionInformation Add(IScheduleCondition condition, string name, string summary, string description, IEnumerable&lt;IScheduleDependency&gt; dependsOn)</Member>
        <Member type="Method">void Update(ScheduleElementId conditionToReplace, IScheduleCondition newCondition)</Member>
        <Member type="Method">void Remove(ScheduleElementId id)</Member>
        <Member type="Method">bool Contains(ScheduleElementId id)</Member>
        <Member type="Method">IScheduleCondition Condition(ScheduleElementId id)</Member>
        <Member type="Method">ScheduleConditionInformation Information(ScheduleElementId id)</Member>
      </Entity>
      <Entity type="Class">
        <Name>DistributedExecutor</Name>
        <Access>Public</Access>
        <Location left="1555" top="1488" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IExecuteSchedules</Name>
        <Access>Public</Access>
        <Location left="1062" top="1488" />
        <Size width="353" height="265" />
        <Collapsed>False</Collapsed>
        <Member type="Property">bool IsLocal { get; }</Member>
        <Member type="Property">bool IsRunning { get; }</Member>
        <Member type="Property">bool IsPaused { get; }</Member>
        <Member type="Method">void Start()</Member>
        <Member type="Method">void Pause()</Member>
        <Member type="Method">void Stop(bool terminateImmediately)</Member>
        <Member type="Event">event EventHandler&lt;ExecutingVertexEventArgs&gt; OnVertexProcess</Member>
        <Member type="Event">event EventHandler&lt;ProgressEventArgs&gt; OnExecutionProgress</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnStart</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnPause</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnFinish</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnComplete</Member>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleDistributor</Name>
        <Access>Public</Access>
        <Location left="1543" top="1008" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IDistributeScheduleExecutions</Name>
        <Access>Public</Access>
        <Location left="1338" top="837" />
        <Size width="605" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IExecuteSchedules Execute(ScheduleId scheduleId, CancellationToken? token = null, bool executeOutOfProcess = false)</Member>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleExecutionNotifications</Name>
        <Access>Public</Access>
        <Location left="2178" top="468" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IScheduleExecutionNotifications</Name>
        <Access>Public</Access>
        <Location left="2524" top="484" />
        <Size width="353" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Event">event EventHandler&lt;ScheduleEventArgs&gt; OnStart</Member>
        <Member type="Event">event EventHandler&lt;ScheduleEventArgs&gt; OnPause</Member>
        <Member type="Event">event EventHandler&lt;ProgressEventArgs&gt; OnExecutionProgress</Member>
        <Member type="Event">event EventHandler&lt;ExecutingVertexEventArgs&gt; OnVertexProcess</Member>
        <Member type="Event">event EventHandler&lt;ScheduleEventArgs&gt; OnFinish</Member>
      </Entity>
      <Entity type="Interface">
        <Name>INotificationSet</Name>
        <Access>Public</Access>
        <Location left="2572" top="709" />
        <Size width="234" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Enum">
        <Name>ScheduleIntegrityFailureType</Name>
        <Access>Public</Access>
        <Location left="3735" top="2396" />
        <Size width="257" height="248" />
        <Collapsed>False</Collapsed>
        <Value>None</Value>
        <Value>ScheduleIsMissingStart</Value>
        <Value>ScheduleIsMissingEnd</Value>
        <Value>ScheduleStartDoesNotConnectToEnd</Value>
        <Value>ScheduleVertexIsNotReachableFromStart</Value>
        <Value>ScheduleEndIsNotReachableFromVertex</Value>
        <Value>SubScheduleLinksBackToParentSchedule</Value>
        <Value>VertexLinksToOtherVertexInMultipleWays</Value>
        <Value>SynchronizationBlockMissingStart</Value>
        <Value>SynchronizationBlockMissingEnd</Value>
        <Value>Unknown</Value>
      </Entity>
      <Entity type="Class">
        <Name>SynchronizeEndVertexProcessor</Name>
        <Access>Public</Access>
        <Location left="54" top="1252" />
        <Size width="197" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IScheduleAction</Name>
        <Access>Public</Access>
        <Location left="2593" top="30" />
        <Size width="188" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Property">bool IsBeingExecuted { get; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleConditionInformation</Name>
        <Access>Public</Access>
        <Location left="2552" top="200" />
        <Size width="195" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ScheduleElementId Id { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IScheduleCondition</Name>
        <Access>Public</Access>
        <Location left="2412" top="30" />
        <Size width="163" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Class">
        <Name>EditableSynchronizationStartVertex</Name>
        <Access>Public</Access>
        <Location left="2087" top="3217" />
        <Size width="356" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public IEnumerable&lt;IScheduleVariable&gt; VariablesToSynchronize()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>The start vertex indicates that the revision numbers of the given variables should be makred. The end vertex then gives the executor a chance to get all the variables up to the next revision.</Text>
        <Location left="928" top="2998" />
        <Size width="204" height="119" />
      </Entity>
      <Entity type="Class">
        <Name>SynchronizationEndVertex</Name>
        <Access>Internal</Access>
        <Location left="701" top="2980" />
        <Size width="166" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EditableExecutingVertex</Name>
        <Access>Public</Access>
        <Location left="2087" top="3006" />
        <Size width="273" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ScheduleElementId ActionToExecute { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EditableSubScheduleVertex</Name>
        <Access>Public</Access>
        <Location left="2087" top="2883" />
        <Size width="244" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ScheduleId ScheduleToExecute { get; }</Member>
        <Member type="Property">public bool ShouldWaitForFinish { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EditableSynchronizationEndVertex</Name>
        <Access>Public</Access>
        <Location left="2087" top="3112" />
        <Size width="211" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EditableMarkHistoryVertex</Name>
        <Access>Public</Access>
        <Location left="1590" top="3086" />
        <Size width="170" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleActionInformation</Name>
        <Access>Public</Access>
        <Location left="2223" top="200" />
        <Size width="317" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ScheduleElementId Id { get; }</Member>
        <Member type="Property">public string Name { get; }</Member>
        <Member type="Property">public string Summary { get; }</Member>
        <Member type="Property">public string Description { get; }</Member>
        <Member type="Method">public IEnumerable&lt;IScheduleVariable&gt; Produces()</Member>
        <Member type="Method">public IEnumerable&lt;IScheduleDependency&gt; DependsOn()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>FixedScheduleBuilder</Name>
        <Access>Internal</Access>
        <Location left="2808" top="3006" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Structure">
        <Name>ScheduleInfo</Name>
        <Access>Public</Access>
        <Location left="2223" top="30" />
        <Size width="163" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ScheduleId Id { get; }</Member>
        <Member type="Property">public bool IsValid { get; }</Member>
        <Member type="Property">public bool IsRunning { get; }</Member>
        <Member type="Property">public bool IsPaused { get; }</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Are templates the same as sub-schedules?</Text>
        <Location left="1636" top="2074" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>EditableEndVertex</Name>
        <Access>Public</Access>
        <Location left="1531" top="2978" />
        <Size width="234" height="94" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EditableStartVertex</Name>
        <Access>Public</Access>
        <Location left="1676" top="2883" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EditableInsertVertex</Name>
        <Access>Public</Access>
        <Location left="2087" top="2705" />
        <Size width="189" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int RemainingInserts { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Edge&lt;IExecutableGraphVertex&gt;</Name>
        <Access>Public</Access>
        <Location left="817" top="2740" />
        <Size width="197" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Do we need templates?</Text>
        <Location left="1882" top="2074" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>Edge&lt;IEditableScheduleVertex&gt;</Name>
        <Access>Public</Access>
        <Location left="1457" top="2883" />
        <Size width="199" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EditableScheduleEdge</Name>
        <Access>Internal</Access>
        <Location left="1376" top="2716" />
        <Size width="294" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ScheduleElementId ConditionToEvaluate { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IEditableScheduleVertex</Name>
        <Access>Public</Access>
        <Location left="1865" top="2705" />
        <Size width="162" height="94" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Comment">
        <Text>The executable schedule is read-only (can't be changed). It is also internal to the dataset application. In order to make one get an editable schedule and convert it.</Text>
        <Location left="1029" top="2241" />
        <Size width="160" height="138" />
      </Entity>
      <Entity type="Class">
        <Name>EditableSchedule</Name>
        <Access>Internal</Access>
        <Location left="1676" top="2469" />
        <Size width="447" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Field">AdjacencyGraph&lt;IEditableScheduleVertex, EditableScheduleEdge&gt; m_Graph</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Serializable</Text>
        <Location left="2213" top="2483" />
        <Size width="93" height="62" />
      </Entity>
      <Entity type="Interface">
        <Name>IEditableSchedule</Name>
        <Access>Public</Access>
        <Location left="1636" top="2300" />
        <Size width="464" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">ScheduleId Id { get; }</Member>
      </Entity>
      <Entity type="Comment">
        <Text>What are we going to do with the UI? We need some way of displaying the graph in the UI, with progressive discovery, i.e. initially we just want to show the very high levels and then drill down. Eventually obviously it'll get complicated but we should try to keep it as simple as possible.</Text>
        <Location left="305" top="30" />
        <Size width="232" height="158" />
      </Entity>
      <Entity type="Class">
        <Name>ScheduleExecutionCommands</Name>
        <Access>Internal</Access>
        <Location left="2132" top="808" />
        <Size width="186" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public Task Start(ExecutionId id)</Member>
        <Member type="Method">public Task Pause(ExecutionId id)</Member>
        <Member type="Method">public Task Stop(ExecutionId id)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICommandSet</Name>
        <Access>Public</Access>
        <Location left="2006" top="1316" />
        <Size width="456" height="97" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IScheduleExecutionCommands</Name>
        <Access>Public</Access>
        <Location left="2132" top="1035" />
        <Size width="190" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Task Start(ExecutionId id)</Member>
        <Member type="Method">Task Pause(ExecutionId id)</Member>
        <Member type="Method">Task Stop(ExecutionId id)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Revert history not only affects the components but also the executor. That needs to stop executing, terminate all non-history state and then restart!</Text>
        <Location left="878" top="1105" />
        <Size width="191" height="104" />
      </Entity>
      <Entity type="Interface">
        <Name>IVerifyScheduleIntegrity</Name>
        <Access>Public</Access>
        <Location left="30" top="1813" />
        <Size width="694" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool IsValid(IEditableSchedule schedule, Action&lt;ScheduleIntegrityFailureType, IEditableScheduleVertex&gt; onValidationFailure)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Need some way to provide state so that we can tell if it is resolved</Text>
        <Location left="3302" top="2219" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>
                    Could be one of many things. For example:
                    - Physical variable (e.g. x, y, z, u, v, w, etc.)
                    - ?
                </Text>
        <Location left="3389" top="1999" />
        <Size width="283" height="76" />
      </Entity>
      <Entity type="Comment">
        <Text>This one is tricky. Not sure how this is going to work yet ...</Text>
        <Location left="3002" top="1944" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Need a way to get to the graph that we have so far ...</Text>
        <Location left="2602" top="2215" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>VariableScheduleAssembler</Name>
        <Access>Internal</Access>
        <Location left="2837" top="2116" />
        <Size width="172" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>How do we let sub-components add things at an insert point?</Text>
        <Location left="2344" top="2719" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Interface">
        <Name>IBuildFixedSchedules</Name>
        <Access>Public</Access>
        <Location left="2602" top="2675" />
        <Size width="834" height="248" />
        <Collapsed>False</Collapsed>
        <Member type="Method">EditableExecutingActionVertex AddExecutingAction(ScheduleElementId actionId)</Member>
        <Member type="Method">EditableSubScheduleVertex AddSubSchedule(ScheduleId schedule, bool waitForFinish)</Member>
        <Member type="Method">EditableSynchronizationStartVertex AddSynchronizationStartPoint(IEnumerable&lt;IScheduleVariable&gt; variables)</Member>
        <Member type="Method">EditableSynchronizationEndVertex AddSynchronizationEndPoint(EditableSynchronizationStartVertex startPoint)</Member>
        <Member type="Method">EditableMarkHistoryVertex AddHistoryMarkingPoint()</Member>
        <Member type="Method">EditableInsertVertex AddInsertPoint()</Member>
        <Member type="Method">Tuple&lt;EditableInsertVertex, EditableInsertVertex&gt; InsertIn(EditableInsertVertex insertVertex, IEditableScheduleVertex vertexToInsert)</Member>
        <Member type="Method">Tuple&lt;EditableInsertVertex, EditableScheduleVertex, EditableInsertVertex&gt; InsertIn(EditableInsertVertex insertVertex, IEditableSchedule scheduleToInsert)</Member>
        <Member type="Method">void LinkTo(IEditableScheduleVertex start, IEditableScheduleVertex end, ScheduleElementId traverseCondition)</Member>
        <Member type="Method">void LinkFromStart(IEditableScheduleVertex vertex, ScheduleElementId traverseCondition)</Member>
        <Member type="Method">void LinkToEnd(IEditableScheduleVertex vertex, ScheduleElementId traverseCondition)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IBuildVariableSchedules</Name>
        <Access>Public</Access>
        <Location left="2697" top="2319" />
        <Size width="374" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void AddVariableToResolveFor(IScheduleVariable variable)</Member>
        <Member type="Method">bool AreAllVariablesResolved()</Member>
        <Member type="Method">IEnumerable&lt;IScheduleVariable&gt; ResolutionMissingFor()</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IScheduleVariable</Name>
        <Access>Public</Access>
        <Location left="3468" top="2148" />
        <Size width="162" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Class">
        <Name>MarkHistoryVertexProcessor</Name>
        <Access>Internal</Access>
        <Location left="679" top="920" />
        <Size width="508" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public MarkHistoryVertexProcessor(ITimeline timeline, Action&lt;TimeMarker&gt; onMarkerStorage)</Member>
        <Member type="Property">public Type VertexTypeToProcess { get; }</Member>
        <Member type="Method">public void Process(IScheduleGraphVertex vertex)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SubScheduleVertexProcessor</Name>
        <Access>Internal</Access>
        <Location left="697" top="734" />
        <Size width="408" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public SubScheduleVertexProcessor(IDistributeScheduleExecutions executor)</Member>
        <Member type="Property">public Type VertexTypeToProcess { get; }</Member>
        <Member type="Method">public void Process(IScheduleGraphVertex vertex)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SynchronizeStartVertexProcessor</Name>
        <Access>Internal</Access>
        <Location left="54" top="1105" />
        <Size width="204" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ExecutableActionVertexProcessor</Name>
        <Access>Internal</Access>
        <Location left="393" top="564" />
        <Size width="384" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public ExecutableActionVertexProcessor(IStoreScheduleActions storage)</Member>
        <Member type="Property">public Type VertexTypeToProcess { get; }</Member>
        <Member type="Method">public void Process(IScheduleGraphVertex vertex)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Terminates the schedule execution</Text>
        <Location left="42" top="801" />
        <Size width="160" height="58" />
      </Entity>
      <Entity type="Class">
        <Name>ScheduleEndVertexProcessor</Name>
        <Access>Internal</Access>
        <Location left="42" top="947" />
        <Size width="272" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Type VertexTypeToProcess { get; }</Member>
        <Member type="Method">public void Process(IScheduleGraphVertex vertex)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleStartVertexProcessor</Name>
        <Access>Internal</Access>
        <Location left="238" top="778" />
        <Size width="272" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Type VertexTypeToProcess { get; }</Member>
        <Member type="Method">public void Process(IScheduleGraphVertex vertex)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IProcesScheduleGraphVertices</Name>
        <Access>Internal</Access>
        <Location left="474" top="1105" />
        <Size width="265" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Property">Type VertexTypeToProcess { get; }</Member>
        <Member type="Method">void Process(IScheduleGraphVertex vertex)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IBuildSchedules</Name>
        <Access>Public</Access>
        <Location left="2545" top="2510" />
        <Size width="171" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IEditableSchedule Build()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>All parts of the schedule can link to the end node if they want to be able to force a quick exit from the schedule without having to execute an 'unhandled error'</Text>
        <Location left="112" top="2228" />
        <Size width="208" height="110" />
      </Entity>
      <Entity type="Class">
        <Name>MarkHistoryVertex</Name>
        <Access>Internal</Access>
        <Location left="41" top="2615" />
        <Size width="235" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public bool ShouldStore()</Member>
        <Member type="Method">public TimeMarker StoreHistory()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SynchronizationStartVertex</Name>
        <Access>Internal</Access>
        <Location left="701" top="2851" />
        <Size width="356" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public IEnumerable&lt;IScheduleVariable&gt; VariablesToSynchronize()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SubScheduleVertex</Name>
        <Access>Internal</Access>
        <Location left="69" top="2773" />
        <Size width="210" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ScheduleId SubSchedule { get; }</Member>
        <Member type="Property">public bool WaitForFinish { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ExecutingAction</Name>
        <Access>Internal</Access>
        <Location left="688" top="3103" />
        <Size width="163" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void Invoke()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleElementId</Name>
        <Access>Public</Access>
        <Location left="2412" top="99" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleActionStorage</Name>
        <Access>Internal</Access>
        <Location left="697" top="204" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IStoreScheduleActions</Name>
        <Access>Internal</Access>
        <Location left="1000" top="30" />
        <Size width="1088" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Method">ScheduleActionInformation Add(IScheduleAction action, string name, string summary, string description, IEnumerable&lt;IScheduleVariable&gt; produces, IEnumerable&lt;IScheduleDependency&gt; dependsOn)</Member>
        <Member type="Method">void Update(ScheduleElementId actionToReplace, IScheduleAction newAction)</Member>
        <Member type="Method">void Remove(ScheduleElementId id)</Member>
        <Member type="Method">bool Contains(ScheduleElementId id)</Member>
        <Member type="Method">IScheduleAction Action(ScheduleElementId id)</Member>
        <Member type="Method">ScheduleActionInformation Information(ScheduleElementId id)</Member>
      </Entity>
      <Entity type="Class">
        <Name>DependencyResolver</Name>
        <Access>Internal</Access>
        <Location left="3160" top="2122" />
        <Size width="162" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IActionScheduleDependency</Name>
        <Access>Public</Access>
        <Location left="3446" top="2469" />
        <Size width="178" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IVariableScheduleDependency</Name>
        <Access>Public</Access>
        <Location left="3446" top="2343" />
        <Size width="219" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Property">IScheduleVariable Variable { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IScheduleDependency</Name>
        <Access>Public</Access>
        <Location left="3160" top="2408" />
        <Size width="162" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool IsResolved()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>
                    Where is all this going to live?
                    - Interfaces in Apollo.Core
                    - Implementations mainly in Apollo.Dataset except for the actual graph itself? Or are we going to mirror that?
                </Text>
        <Location left="30" top="30" />
        <Size width="265" height="100" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we allow farming calcs out to other datasets if we're running in interactive mode? i.e. when the user is doing some calc to display on screen immediately? The 'main' schedule is never considered to be 'interactive'</Text>
        <Location left="30" top="3006" />
        <Size width="190" height="158" />
      </Entity>
      <Entity type="Comment">
        <Text>Need to indicate if we can move this to another (child) dataset.</Text>
        <Location left="265" top="3031" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Lock should lock everything. Schedule and components.</Text>
        <Location left="1025" top="2143" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>ScheduleExecutor</Name>
        <Access>Internal</Access>
        <Location left="567" top="1486" />
        <Size width="336" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public ScheduleExecutor(IProcessSchedule scheduleToExecute)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ExecutableEndVertex</Name>
        <Access>Internal</Access>
        <Location left="260" top="2406" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ExecutableStartVertex</Name>
        <Access>Internal</Access>
        <Location left="499" top="2406" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ExecutableGraphEdge</Name>
        <Access>Internal</Access>
        <Location left="773" top="2577" />
        <Size width="291" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ScheduleElementId TraversingCondition { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>
                    The graph always starts at a start node and always ends at an end node.
                    Start and end nodes cannot have an action.
                    Also a start node does not have any parents and an end node does not have any children.
                </Text>
        <Location left="394" top="2175" />
        <Size width="228" height="134" />
      </Entity>
      <Entity type="Class">
        <Name>ExecutableSchedule</Name>
        <Access>Internal</Access>
        <Location left="702" top="2198" />
        <Size width="226" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly ScheduleGraphStartNode m_Start</Member>
        <Member type="Field">private readonly ScheduleGraphEndNode m_End</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IExecutableGraphVertex</Name>
        <Access>Internal</Access>
        <Location left="352" top="2554" />
        <Size width="163" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="4" second="2">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1648</X>
          <Y>1256</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="2" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1520</X>
          <Y>1606</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1506</X>
          <Y>1606</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="4" second="77">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>727</X>
          <Y>1461</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="77" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1036</X>
          <Y>1604</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="53" second="5">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="4" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="38" second="5">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1993</X>
          <Y>875</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="6" second="7">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="7" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="33" second="82">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="76" second="82">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="77" second="82">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="53" second="59">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>672</X>
          <Y>767</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>602</X>
          <Y>1080</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="55" second="59">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>559</X>
          <Y>1080</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="52" second="59">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>638</X>
          <Y>1074</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="10" second="59">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>552</X>
          <Y>1233</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="54" second="59">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>443</X>
          <Y>1145</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="55" second="68">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="14" second="32">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2062</X>
          <Y>3263</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="15" second="16">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="15" second="63">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="16" second="83">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>667</X>
          <Y>3028</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>480</X>
          <Y>2644</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="65" second="83">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>663</X>
          <Y>3163</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>445</X>
          <Y>2640</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="63" second="83">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>676</X>
          <Y>2898</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>505</X>
          <Y>2645</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="64" second="83">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>357</X>
          <Y>2838</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>403</X>
          <Y>2642</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="62" second="83">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>301</X>
          <Y>2714</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>376</X>
          <Y>2640</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="17" second="32">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2054</X>
          <Y>3053</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1988</X>
          <Y>2840</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="18" second="32">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2035</X>
          <Y>2959</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2012</X>
          <Y>2843</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="19" second="32">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2044</X>
          <Y>3158</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1970</X>
          <Y>2830</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="20" second="32">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1799</X>
          <Y>3143</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1932</X>
          <Y>2829</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="47" second="36">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2809</X>
          <Y>2157</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2125</X>
          <Y>2335</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="22" second="36">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2783</X>
          <Y>3129</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2284</X>
          <Y>2375</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="22" second="49">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="48" second="27">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2339</X>
          <Y>2765</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="24" second="29">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="25" second="32">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1915</X>
          <Y>2826</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="26" second="32">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1865</X>
          <Y>2922</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1899</X>
          <Y>2824</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="27" second="32">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2062</X>
          <Y>2760</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="80" second="28">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="29" second="36">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1977</X>
          <Y>2230</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="32" second="31">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="34" second="31">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1748</X>
          <Y>2597</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="34" second="32">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1801</X>
          <Y>2588</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="31" second="30">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="34" second="36">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="35" second="34">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="38" second="40">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="40" second="39">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="41" second="52">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1133</X>
          <Y>1073</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="43" second="72">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>3291</X>
          <Y>2381</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="71" second="51">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="44" second="51">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="45" second="69">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3195</X>
          <Y>1973</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3264</X>
          <Y>2083</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="46" second="50">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2803</X>
          <Y>2253</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2863</X>
          <Y>2294</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="47" second="69">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3064</X>
          <Y>2155</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="47" second="50">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2915</X>
          <Y>2294</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="49" second="60">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2577</X>
          <Y>2743</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="50" second="60">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="69" second="72">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="75" second="64">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="74" second="64">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="56" second="57">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>134</X>
          <Y>884</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="58" second="59">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>524</X>
          <Y>1080</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="57" second="59">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>347</X>
          <Y>1012</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>484</X>
          <Y>1077</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="77" second="59">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="61" second="78">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>338</X>
          <Y>2374</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="67" second="68">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>923</X>
          <Y>134</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="70" second="72">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>3347</X>
          <Y>2454</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="71" second="72">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>3347</X>
          <Y>2422</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="81" second="78">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>478</X>
          <Y>2334</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>448</X>
          <Y>2450</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="81" second="79">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>553</X>
          <Y>2347</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="78" second="83">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>389</X>
          <Y>2524</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="79" second="83">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>444</X>
          <Y>2529</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="80" second="83">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>540</X>
          <Y>2601</Y>
        </BendPoint>
        <Direction>Bidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="82" second="80">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>879</X>
          <Y>2334</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="82" second="83">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>730</X>
          <Y>2336</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>564</X>
          <Y>2577</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>UI - Overview</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>DatasetFacade</Name>
        <Access>Public</Access>
        <Location left="2814" top="91" />
        <Size width="432" height="451" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnNameChanged</Member>
        <Member type="Property">public string Summary { get; set; }</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnSummaryChanged</Member>
        <Member type="Property">public bool IsValid { get; }</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnInvalidate</Member>
        <Member type="Property">public bool CanBeDeleted { get; }</Member>
        <Member type="Method">public void Delete()</Member>
        <Member type="Property">public bool CanBeAdopted { get; }</Member>
        <Member type="Property">public bool CanBeCopied { get; }</Member>
        <Member type="Property">public DatasetCreator CreatedBy { get; }</Member>
        <Member type="Property">public bool IsLoaded { get; }</Member>
        <Member type="Method">public IEnumerable&lt;Machine&gt; RunsOn()</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnLoaded</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnUnloaded</Member>
        <Member type="Property">public bool CanBecomeParent { get; }</Member>
        <Member type="Method">public IEnumerable&lt;DatasetFacade&gt; Children()</Member>
        <Member type="Method">public DatasetFacade AddChild()</Member>
        <Member type="Method">public DatasetFacade AddChild(IPersistenceInformation persistenceInformation)</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ProjectFacade</Name>
        <Access>Public</Access>
        <Location left="2137" top="159" />
        <Size width="390" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public bool IsClosed { get; }</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnProjectClosed</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnNameChanged</Member>
        <Member type="Property">public string Summary { get; set; }</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnSummaryChanged</Member>
        <Member type="Property">public int NumberOfDatasets { get; set; }</Member>
        <Member type="Property">public bool HasProjectChanged { get; }</Member>
        <Member type="Method">public bool ShouldSaveProject()</Member>
        <Member type="Method">public void SaveProject(IPersistenceInformation persistenceInformation)</Member>
        <Member type="Method">public DatasetFacade Root()</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnDatasetCreated</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnDatasetDeleted</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Need to handle the licensing information.</Text>
        <Location left="353" top="1311" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>
                    Where does all this advice come from?

                    Some will probably come from the plugins, others we'll have to put in there some how. Maybe have seperate files for advice?
                </Text>
        <Location left="2096" top="921" />
        <Size width="212" height="132" />
      </Entity>
      <Entity type="Comment">
        <Text>This needs to be renamed. It's not so much the interaction stuff, it's more the settings / options / random stuff (e.g. plug-in system, licensing etc.)</Text>
        <Location left="1061" top="1157" />
        <Size width="218" height="97" />
      </Entity>
      <Entity type="Comment">
        <Text>This will need to know about timelines!</Text>
        <Location left="1942" top="444" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>AdviceFacade</Name>
        <Access>Internal</Access>
        <Location left="1760" top="1015" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ProjectHub</Name>
        <Access>Internal</Access>
        <Location left="1776" top="625" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UserInteractionFacade</Name>
        <Access>Internal</Access>
        <Location left="1422" top="1113" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Used by the user interface to resolve the dependencies .</Text>
        <Location left="287" top="471" />
        <Size width="166" height="50" />
      </Entity>
      <Entity type="Interface">
        <Name>IServiceInformation</Name>
        <Access>Public</Access>
        <Location left="194" top="710" />
        <Size width="227" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">string Name { get; }</Member>
        <Member type="Property">DateTimeOffset StartupTime { get; }</Member>
        <Member type="Property">TimeSpan Uptime { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IHoldDependencies</Name>
        <Access>Public</Access>
        <Location left="287" top="272" />
        <Size width="162" height="89" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Class">
        <Name>BootStrapper</Name>
        <Access>Public</Access>
        <Location left="659" top="253" />
        <Size width="339" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void Load()</Member>
        <Member type="Event">public event EventHandler&lt;StartupProgressEventArgs&gt; StartupProgress</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IBootstrapper</Name>
        <Access>Public</Access>
        <Location left="659" top="10" />
        <Size width="339" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Load()</Member>
        <Member type="Event">event EventHandler&lt;StartupProgressEventArgs&gt; StartupProgress</Member>
      </Entity>
      <Entity type="Class">
        <Name>DependencyInjection</Name>
        <Access>Public</Access>
        <Location left="10" top="272" />
        <Size width="162" height="110" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ILinkToProjects</Name>
        <Access>Public</Access>
        <Location left="2137" top="625" />
        <Size width="381" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool HasActiveProject()</Member>
        <Member type="Method">ProjectFacade ActiveProject()</Member>
        <Member type="Method">bool CanCreateNewProject()</Member>
        <Member type="Method">void NewProject()</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnNewProjectLoaded</Member>
        <Member type="Method">bool CanLoadProject()</Member>
        <Member type="Method">void LoadProject(IPersistenceInformation persistenceInformation)</Member>
        <Member type="Method">bool CanUnloadProject()</Member>
        <Member type="Method">void UnloadProject()</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnProjectUnloaded</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Note that start-up events are not fed through this system, because the UI won't be up when those events get raised. They will be fed through the bootstrapper.</Text>
        <Location left="1648" top="390" />
        <Size width="221" height="117" />
      </Entity>
      <Entity type="Comment">
        <Text>
                    Quite a lot really. We can add:
                    - Plug-in selection algorithms
                    - others?
                </Text>
        <Location left="2070" top="1326" />
        <Size width="288" height="112" />
      </Entity>
      <Entity type="Comment">
        <Text>What do we put in the advice engine? </Text>
        <Location left="2096" top="1183" />
        <Size width="212" height="50" />
      </Entity>
      <Entity type="Class">
        <Name>ApplicationFacade</Name>
        <Access>Internal</Access>
        <Location left="616" top="972" />
        <Size width="309" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public bool CanShutdown { get; }</Member>
        <Member type="Method">public void Shutdown(bool shouldForce)</Member>
        <Member type="Property">public IHoldSystemInforrmation ApplicationStatus { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IHoldSystemInformation</Name>
        <Access>Public</Access>
        <Location left="165" top="904" />
        <Size width="333" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Refresh()</Member>
        <Member type="Property">DateTimeOffset LastUpdateTime { get; }</Member>
        <Member type="Method">IEnumerable&lt;IServiceInformation&gt; ServiceInformation()</Member>
        <Member type="Property">DateTimeOffset StartupTime { get; }</Member>
        <Member type="Property">TimeSpan Uptime { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IGiveAdvice</Name>
        <Access>Public</Access>
        <Location left="1760" top="1183" />
        <Size width="163" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Comment">
        <Text>Defines the top-level API for all the user interaction commands. Examples are help system, translation of system messages etc.</Text>
        <Location left="1027" top="1433" />
        <Size width="262" height="63" />
      </Entity>
      <Entity type="Interface">
        <Name>IInteractWithUsers</Name>
        <Access>Public</Access>
        <Location left="1422" top="1411" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IAbstractApplications</Name>
        <Access>Public</Access>
        <Location left="616" top="1204" />
        <Size width="303" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CanShutdown()</Member>
        <Member type="Method">void Shutdown(bool shouldForce)</Member>
        <Member type="Property">IHoldSystemInforrmation ApplicationStatus { get; }</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Need to handle the configuration options too</Text>
        <Location left="353" top="1204" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>KernelService</Name>
        <Access>Internal</Access>
        <Location left="1091" top="275" />
        <Size width="302" height="153" />
        <Collapsed>False</Collapsed>
        <Member type="Method">protected abstract void StartService()</Member>
        <Member type="Event">public event EventHandler&lt;StartupProgressEventArgs&gt; StartupProgress</Member>
        <Member type="Method">public void Start()</Member>
        <Member type="Method">public StartupState GetStartupState()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UserInterfaceService</Name>
        <Access>Internal</Access>
        <Location left="1409" top="685" />
        <Size width="162" height="96" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Need a help system. Have fun with this one.</Text>
        <Location left="1027" top="1545" />
        <Size width="262" height="70" />
      </Entity>
      <Entity type="Comment">
        <Text>Needs some way to display messages from other components. However these messags might need translating to normal user speak --&gt; Use tags. aka components send tag, UI looks them up and combines?</Text>
        <Location left="1352" top="1724" />
        <Size width="260" height="113" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="1" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="15" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="2" second="24">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="3" second="18">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="4" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="5" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2022</X>
          <Y>544</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2107</X>
          <Y>676</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="8" second="21">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Dependency" first="6" second="21">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1852</X>
          <Y>1142</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1852</X>
          <Y>1152</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="7" second="27">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1725</X>
          <Y>741</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1695</X>
          <Y>746</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Dependency" first="7" second="15">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1977</X>
          <Y>725</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2100</X>
          <Y>725</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="8" second="27">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1516</X>
          <Y>1071</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="8" second="23">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="9" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="12" second="11">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>600</X>
          <Y>320</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>505</X>
          <Y>320</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="14" second="11">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="12" second="27">
        <Label>Links to</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>817</X>
          <Y>396</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1463</X>
          <Y>660</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="12" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="16" second="27">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1527</X>
          <Y>638</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="18" second="17">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="18" second="21">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2070</X>
          <Y>1210</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1949</X>
          <Y>1210</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="19" second="27">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>744</X>
          <Y>896</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1380</X>
          <Y>738</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="19" second="24">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="29" second="23">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="22" second="23">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="28" second="23">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="25" second="24">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="27" second="26">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1497</X>
          <Y>658</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1460</X>
          <Y>353</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>UI - Scripting</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IDatasetScriptFacade</Name>
        <Access>Public</Access>
        <Location left="2831" top="1048" />
        <Size width="306" height="384" />
        <Collapsed>False</Collapsed>
        <Member type="Property">string Name { get; set; }</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnNameChanged</Member>
        <Member type="Property">string Summary { get; set; }</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnSummaryChanged</Member>
        <Member type="Property">bool IsValid { get; }</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnInvalidate</Member>
        <Member type="Property">bool CanBeDeleted { get; }</Member>
        <Member type="Method">void Delete()</Member>
        <Member type="Property">bool CanBeAdopted { get; }</Member>
        <Member type="Property">bool CanBeCopied { get; }</Member>
        <Member type="Property">DatasetCreator CreatedBy { get; }</Member>
        <Member type="Property">bool IsLoaded { get; }</Member>
        <Member type="Method">IEnumerable&lt;Machine&gt; RunsOn()</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnLoaded</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnUnloaded</Member>
        <Member type="Property">bool CanBecomeParent { get; }</Member>
        <Member type="Method">IEnumerable&lt;DatasetFacadeForScripts&gt; Children()</Member>
        <Member type="Method">IScriptDatasetFacade AddChild()</Member>
        <Member type="Method">IScriptDatasetFacade AddChild(string filePath)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IProjectScriptFacade</Name>
        <Access>Public</Access>
        <Location left="2102" top="1048" />
        <Size width="296" height="282" />
        <Collapsed>False</Collapsed>
        <Member type="Property">bool IsClosed { get; }</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnProjectClosed</Member>
        <Member type="Property">string Name { get; set; }</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnNameChanged</Member>
        <Member type="Property">string Summary { get; set; }</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnSummaryChanged</Member>
        <Member type="Property">int NumberOfDatasets { get; }</Member>
        <Member type="Property">bool HasProjectChanged { get; }</Member>
        <Member type="Method">bool ShouldSaveProject()</Member>
        <Member type="Method">void SaveProject(string filePath)</Member>
        <Member type="Method">IScriptDatasetFacade Root()</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnDatasetCreated</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnDatasetDeleted</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ILinkScriptsToProjects</Name>
        <Access>Public</Access>
        <Location left="1469" top="1075" />
        <Size width="296" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool HasActiveProject()</Member>
        <Member type="Method">IProjectScriptFacade ActiveProject()</Member>
        <Member type="Method">bool CanCreateNewProject()</Member>
        <Member type="Method">void NewProject()</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnNewProjectLoaded</Member>
        <Member type="Method">bool CanLoadProject()</Member>
        <Member type="Method">void LoadProject(string filePath)</Member>
        <Member type="Method">bool CanUnloadProject()</Member>
        <Member type="Method">void UnloadProject()</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnProjectUnloaded</Member>
      </Entity>
      <Entity type="Enum">
        <Name>ScriptLanguage</Name>
        <Access>Public</Access>
        <Location left="121" top="1021" />
        <Size width="163" height="112" />
        <Collapsed>False</Collapsed>
        <Value>Python</Value>
        <Value>Ruby</Value>
        <Value>PowerShell</Value>
      </Entity>
      <Entity type="Comment">
        <Text>Implements IDisposable</Text>
        <Location left="1325" top="1475" />
        <Size width="160" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>- Allow access to the currently open controls?
- Allow access to the data structures?
- Provide access so the UI commands?
                </Text>
        <Location left="1659" top="2097" />
        <Size width="288" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>MarshalByRefObject</Text>
        <Location left="1710" top="1662" />
        <Size width="128" height="50" />
      </Entity>
      <Entity type="Class">
        <Name>UserInterfaceHubForScripts</Name>
        <Access>Public</Access>
        <Location left="1672" top="1778" />
        <Size width="222" height="214" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Lives in the Apollo AppDomain</Text>
        <Location left="545" top="1113" />
        <Size width="139" height="57" />
      </Entity>
      <Entity type="Comment">
        <Text>Need to create a facade for machines etc. as well.</Text>
        <Location left="3225" top="889" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>How to cancel the running of the current script? Use a task?</Text>
        <Location left="683" top="1604" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>MarshalByRefObject</Text>
        <Location left="450" top="1669" />
        <Size width="134" height="50" />
      </Entity>
      <Entity type="Class">
        <Name>ScriptDomainLauncher</Name>
        <Access>Internal</Access>
        <Location left="450" top="1797" />
        <Size width="347" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public IExecuteScripts Launch(ProjectHubForScripts projectHub)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>MarshalByRefObject</Text>
        <Location left="2764" top="591" />
        <Size width="128" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>MarshalByRefObject</Text>
        <Location left="2287" top="636" />
        <Size width="128" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>MarshalByRefObject</Text>
        <Location left="1646" top="654" />
        <Size width="128" height="50" />
      </Entity>
      <Entity type="Class">
        <Name>ProjectHubForScripts</Name>
        <Access>Public</Access>
        <Location left="1460" top="777" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DatasetFacadeForScripts</Name>
        <Access>Public</Access>
        <Location left="2877" top="810" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ProjectFacadeForScripts</Name>
        <Access>Public</Access>
        <Location left="2197" top="796" />
        <Size width="163" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RemoteScriptRunner</Name>
        <Access>Internal</Access>
        <Location left="918" top="1791" />
        <Size width="341" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public string Execute(string scriptCode)</Member>
        <Member type="Method">public IList&lt;Tuple&lt;int,string&gt;&gt; VerifySyntax(string scriptCode)</Member>
        <Member type="Method">public void Dispose()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>MarshalByRefObject</Text>
        <Location left="1368" top="1771" />
        <Size width="134" height="50" />
      </Entity>
      <Entity type="Class">
        <Name>ScriptHost</Name>
        <Access>Internal</Access>
        <Location left="463" top="1288" />
        <Size width="364" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public IExecuteScripts LoadScriptRunner(ScriptLanguage language)</Member>
        <Member type="Method">public void UnloadScriptRunner()</Member>
        <Member type="Property">public IExecuteScripts ScriptRunner { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IronRubyScriptRunner</Name>
        <Access>Internal</Access>
        <Location left="1099" top="2132" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IronPythonScriptRunner</Name>
        <Access>Internal</Access>
        <Location left="918" top="2132" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IExecuteScripts</Name>
        <Access>Internal</Access>
        <Location left="918" top="1596" />
        <Size width="335" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Method">string Execute(string scriptCode)</Member>
        <Member type="Method">IList&lt;Tuple&lt;int,string&gt;&gt; VerifySyntax(string scriptCode)</Member>
        <Member type="Method">void Dispose()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>These objects shadow the real facades so that the script is unable to pass anything across the remoting boundary that is not defined by Apollo itself. This means we only push primitives and known objects / structs across the boundary.</Text>
        <Location left="1933" top="458" />
        <Size width="192" height="149" />
      </Entity>
      <Entity type="Comment">
        <Text>Execute scripts in a different AppDomain so that we can unload after we're done.</Text>
        <Location left="1099" top="1362" />
        <Size width="160" height="106" />
      </Entity>
      <Entity type="Interface">
        <Name>IHostScripts</Name>
        <Access>Public</Access>
        <Location left="20" top="1288" />
        <Size width="355" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IExecuteScripts LoadScriptRunner(ScriptLanguage language)</Member>
        <Member type="Method">void UnloadScriptRunner()</Member>
        <Member type="Property">IExecuteScripts ScriptRunner { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IServiceInformation</Name>
        <Access>Public</Access>
        <Location left="177" top="497" />
        <Size width="227" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">string Name { get; }</Member>
        <Member type="Property">DateTimeOffset StartupTime { get; }</Member>
        <Member type="Property">TimeSpan Uptime { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IHoldSystemInformation</Name>
        <Access>Public</Access>
        <Location left="136" top="157" />
        <Size width="333" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Refresh()</Member>
        <Member type="Property">DateTimeOffset LastUpdateTime { get; }</Member>
        <Member type="Method">IEnumerable&lt;IServiceInformation&gt; ServiceInformation()</Member>
        <Member type="Property">DateTimeOffset StartupTime { get; }</Member>
        <Member type="Property">TimeSpan Uptime { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ILinkToProjects</Name>
        <Access>Public</Access>
        <Location left="1438" top="114" />
        <Size width="381" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool HasActiveProject()</Member>
        <Member type="Method">ProjectFacade ActiveProject()</Member>
        <Member type="Method">bool CanCreateNewProject()</Member>
        <Member type="Method">void NewProject()</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnNewProjectLoaded</Member>
        <Member type="Method">bool CanLoadProject()</Member>
        <Member type="Method">void LoadProject(IPersistenceInformation persistenceInformation)</Member>
        <Member type="Method">bool CanUnloadProject()</Member>
        <Member type="Method">void UnloadProject()</Member>
        <Member type="Event">event EventHandler&lt;EventArgs&gt; OnProjectUnloaded</Member>
      </Entity>
      <Entity type="Class">
        <Name>ProjectFacade</Name>
        <Access>Public</Access>
        <Location left="2066" top="78" />
        <Size width="390" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public bool IsClosed { get; }</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnProjectClosed</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnNameChanged</Member>
        <Member type="Property">public string Summary { get; set; }</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnSummaryChanged</Member>
        <Member type="Property">public int NumberOfDatasets { get; set; }</Member>
        <Member type="Property">public bool HasProjectChanged { get; }</Member>
        <Member type="Method">public bool ShouldSaveProject()</Member>
        <Member type="Method">public void SaveProject(IPersistenceInformation persistenceInformation)</Member>
        <Member type="Method">public DatasetFacade Root()</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnDatasetCreated</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnDatasetDeleted</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DatasetFacade</Name>
        <Access>Public</Access>
        <Location left="2743" top="10" />
        <Size width="432" height="451" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnNameChanged</Member>
        <Member type="Property">public string Summary { get; set; }</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnSummaryChanged</Member>
        <Member type="Property">public bool IsValid { get; }</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnInvalidate</Member>
        <Member type="Property">public bool CanBeDeleted { get; }</Member>
        <Member type="Method">public void Delete()</Member>
        <Member type="Property">public bool CanBeAdopted { get; }</Member>
        <Member type="Property">public bool CanBeCopied { get; }</Member>
        <Member type="Property">public DatasetCreator CreatedBy { get; }</Member>
        <Member type="Property">public bool IsLoaded { get; }</Member>
        <Member type="Method">public IEnumerable&lt;Machine&gt; RunsOn()</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnLoaded</Member>
        <Member type="Event">public event EventHandler&lt;EventArgs&gt; OnUnloaded</Member>
        <Member type="Property">public bool CanBecomeParent { get; }</Member>
        <Member type="Method">public IEnumerable&lt;DatasetFacade&gt; Children()</Member>
        <Member type="Method">public DatasetFacade AddChild()</Member>
        <Member type="Method">public DatasetFacade AddChild(IPersistenceInformation persistenceInformation)</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="19" second="7">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1284</X>
          <Y>1869</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="19" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1519</X>
          <Y>1848</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1606</X>
          <Y>1331</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="1" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="16" second="30">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="17" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="18" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="2" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="16" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="27" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="4" second="24">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1209</X>
          <Y>1569</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="5" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="6" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="8" second="21">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="9" second="17">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="10" second="24">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="12" second="19">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="21" second="12">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="11" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>527</X>
          <Y>1744</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>527</X>
          <Y>1769</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="25" second="17">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2167</X>
          <Y>522</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2826</X>
          <Y>837</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="25" second="18">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2029</X>
          <Y>632</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2172</X>
          <Y>821</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="25" second="16">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1975</X>
          <Y>632</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1690</X>
          <Y>825</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="13" second="17">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2906</X>
          <Y>785</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="14" second="18">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="15" second="16">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1577</X>
          <Y>752</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="17" second="32">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="18" second="31">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="21" second="24">
        <Label>As Proxy</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>911</X>
          <Y>1341</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1025</X>
          <Y>1571</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="20" second="19">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="22" second="19">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1176</X>
          <Y>1944</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="23" second="19">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>998</X>
          <Y>1945</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="19" second="24">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="21" second="27">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="26" second="24">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1177</X>
          <Y>1493</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1177</X>
          <Y>1558</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="29" second="28">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>305</X>
          <Y>328</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>305</X>
          <Y>460</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="31" second="32">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="30" second="31">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1889</X>
          <Y>220</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1959</X>
          <Y>220</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Utilities - History</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>TimeValueStorage&lt;T&gt;</Name>
        <Access>Public</Access>
        <Location left="287" top="1514" />
        <Size width="387" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void AddNewValue(TimeMarker mark, T value)</Member>
        <Member type="Method">public bool HasPastValue()</Member>
        <Member type="Method">public T PastValue()</Member>
        <Member type="Method">public bool HasFutureValue()</Member>
        <Member type="Method">public T FutureValue()</Member>
        <Member type="Method">public bool IsAtBeginOfTime()</Member>
        <Member type="Method">public bool WouldRollBackPastTheBeginningOfTime(TimeMarker mark)</Member>
        <Member type="Method">public T RollBackInTimeTo(TimeMarker mark)</Member>
        <Member type="Method">public T RollBackToBeginning()</Member>
        <Member type="Method">public bool IsAtEndOfTime()</Member>
        <Member type="Method">public bool WouldRollForwardPastTheEndOfTime(TimeMarker mark)</Member>
        <Member type="Method">public T RollForwardInTimeTo(TimeMarker mark)</Member>
        <Member type="Method">public T RollForwardToEnd()</Member>
        <Member type="Method">public void ForgetAll()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>If timelines have a parent then the child timeline can only roll-back if there is no effect on the parent.</Text>
        <Location left="983" top="866" />
        <Size width="182" height="88" />
      </Entity>
      <Entity type="Enum">
        <Name>ChangeBlocker</Name>
        <Access>Public</Access>
        <Location left="2215" top="475" />
        <Size width="167" height="129" />
        <Collapsed>False</Collapsed>
        <Value>None</Value>
        <Value>RollBack</Value>
        <Value>RollForward</Value>
        <Value>RollBackAndRollForward</Value>
      </Entity>
      <Entity type="Class">
        <Name>ChangeSet</Name>
        <Access>Internal</Access>
        <Location left="2190" top="1005" />
        <Size width="162" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICreateSnapshots</Name>
        <Access>Public</Access>
        <Location left="1984" top="493" />
        <Size width="163" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void CreateSnapshot()</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ITrackChanges</Name>
        <Access>Public</Access>
        <Location left="1722" top="493" />
        <Size width="230" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IChangeSet StartTrack()</Member>
        <Member type="Method">IChangeSet StartTrack(string name)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Note that we store the ID of the object, not the actual object itself.</Text>
        <Location left="1774" top="1549" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>This must be serializable and if possible small.</Text>
        <Location left="2251" top="76" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Interface">
        <Name>IVariableTimeline&lt;T&gt;</Name>
        <Access>Public</Access>
        <Location left="1273" top="1991" />
        <Size width="163" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Property">T Current { get; set; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>TimelineStorage&lt;T&gt;</Name>
        <Access>Internal</Access>
        <Location left="1273" top="1593" />
        <Size width="233" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Field">IStoreTimelineValues&lt;T&gt; m_Storage</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TimeMarker</Name>
        <Access>Public</Access>
        <Location left="469" top="30" />
        <Size width="162" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IStoreTimelineValues</Name>
        <Access>Public</Access>
        <Location left="1568" top="1217" />
        <Size width="256" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void RollBackLast()</Member>
        <Member type="Method">void RollBackTo(TimeMarker marker)</Member>
        <Member type="Method">void RollForwardLast()</Member>
        <Member type="Method">void RollForwardTo(TimeMarker marker)</Member>
        <Member type="Method">void StoreCurrent(TimeMarker marker)</Member>
        <Member type="Event">event EventHandler OnValueChanged</Member>
      </Entity>
      <Entity type="Class">
        <Name>ObjectTimeline&lt;T&gt;</Name>
        <Access>Internal</Access>
        <Location left="600" top="1041" />
        <Size width="384" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Field">Dictionary&lt;HistoryVariableId, IStoreTimelineValues&gt; m_Variables</Member>
        <Member type="Field">T m_Object</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>A ulong should be more than long enough. On my computer (i7 920) it takes about 3.8 seconds to count all values in a uint (in debug mode). That means it'll take about 508 years to count all values in a ulong ....</Text>
        <Location left="30" top="41" />
        <Size width="196" height="150" />
      </Entity>
      <Entity type="Comment">
        <Text>Implements IList&lt;T&gt;</Text>
        <Location left="1984" top="1821" />
        <Size width="160" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>Implements IDictionary&lt;K, V&gt;</Text>
        <Location left="2502" top="1593" />
        <Size width="192" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>Can a timeline have a parent? They probably should be able to, because we want the datasets to sync up with the parent app.</Text>
        <Location left="1287" top="866" />
        <Size width="186" height="102" />
      </Entity>
      <Entity type="Class">
        <Name>HistoryObjectVariableTimeline&lt;T&gt;</Name>
        <Access>Public</Access>
        <Location left="1425" top="1794" />
        <Size width="349" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static implicit operator T(VariableTimeLine&lt;T&gt; timeLineVariable)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>For objects that have a timeline ID</Text>
        <Location left="1543" top="1543" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>StandardObjectVariableTimeline&lt;T&gt;</Name>
        <Access>Public</Access>
        <Location left="906" top="1794" />
        <Size width="349" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static implicit operator T(VariableTimeLine&lt;T&gt; timeLineVariable)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Implements IDisposable?</Text>
        <Location left="736" top="1514" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>The collections should take IVariableTimeline objects otherwise we can't track changes in the individual objects.</Text>
        <Location left="1965" top="1543" />
        <Size width="160" height="100" />
      </Entity>
      <Entity type="Comment">
        <Text>Can we use history to create a reset method toot?</Text>
        <Location left="580" top="195" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Note that we should never track the actual object itself because that stops GC's from happening. But then how do we know the object has been removed?</Text>
        <Location left="438" top="1332" />
        <Size width="216" height="113" />
      </Entity>
      <Entity type="Comment">
        <Text>Will this do for object creation and deletion tracking?</Text>
        <Location left="448" top="582" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Collections are going to be tricky. They'll need to track every change, but there are some cases where that is easy, e.g. a clear.</Text>
        <Location left="2217" top="1915" />
        <Size width="235" height="93" />
      </Entity>
      <Entity type="Comment">
        <Text>How are we going to deal with snapshots?</Text>
        <Location left="376" top="195" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Interface">
        <Name>ITimeTravelState</Name>
        <Access>Public</Access>
        <Location left="1984" top="78" />
        <Size width="163" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Class">
        <Name>TimelineTraveller</Name>
        <Access>Public</Access>
        <Location left="1463" top="50" />
        <Size width="359" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public TimelineTraveller(TimeMarker origin, ITimeTravelState state)</Member>
        <Member type="Property">public TimeMarker Origin { get; }</Member>
        <Member type="Property">public ITimeTravelState State { get; }</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Side effect roll back / roll forward functions?</Text>
        <Location left="2661" top="958" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>HistoryId</Name>
        <Access>Public</Access>
        <Location left="289" top="30" />
        <Size width="163" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly ulong m_Id</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ITypeDescription</Name>
        <Access>Public</Access>
        <Location left="618" top="425" />
        <Size width="331" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">Type Type { get; }</Member>
        <Member type="Property">IGenerateStorageData StorageOperator { get; }</Member>
        <Member type="Method">IEnumerable&lt;ConstructionInfo&gt; ConstructionMethods()</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IAmHistoryEnabled</Name>
        <Access>Public</Access>
        <Location left="736" top="1345" />
        <Size width="234" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Property">HistoryId Id { get; }</Member>
        <Member type="Property">IFollowObjectTimeline History { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IFollowObjectTimeline</Name>
        <Access>Public</Access>
        <Location left="670" top="669" />
        <Size width="256" height="265" />
        <Collapsed>False</Collapsed>
        <Member type="Property">HistoryId Id { get; }</Member>
        <Member type="Property">TimeMarker CreationTime { get; }</Member>
        <Member type="Property">TimeMarker DeletionTime { get; }</Member>
        <Member type="Method">bool IsAlive()</Member>
        <Member type="Method">void DeleteFromTimeline()</Member>
        <Member type="Method">void RollBackTo(TimeMarker marker)</Member>
        <Member type="Method">void RollForwardTo(TimeMarker marker)</Member>
        <Member type="Event">event EventHandler OnRollBack</Member>
        <Member type="Event">event EventHandler OnRollForward</Member>
        <Member type="Method">void Mark(TimeMarker marker)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IDictionaryCollectionVariableTimeline&lt;K, T&gt;</Name>
        <Access>Public</Access>
        <Location left="2345" top="1694" />
        <Size width="271" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IListCollectionVariableTimeline&lt;T&gt;</Name>
        <Access>Public</Access>
        <Location left="2088" top="1694" />
        <Size width="218" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>ICollectionVariableTimeline&lt;T&gt;</Name>
        <Access>Public</Access>
        <Location left="2233" top="1543" />
        <Size width="199" height="61" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Comment">
        <Text>And what about deletions / creations of objects?</Text>
        <Location left="1201" top="669" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Need to know if we can delay a roll back / roll forward command</Text>
        <Location left="2644" top="493" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>
                    Needs to define its dependencies. A dependency can be:
                    - Roll-back blocking (i.e. if it is not there the changeset cannot be reverted)
                    - Roll forward blocking (i.e. if it's not there the changeset cannot be rolled forward)
                    - both
                    - neither
                </Text>
        <Location left="2478" top="667" />
        <Size width="478" height="103" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we need to nest timeline objects? We might have to because if we nest IChangeSet objects we need to track history only for as long as the parent IChangeSet isn't disposed. Once the parent ChangeSet is disposed we merge all the changes one level up.</Text>
        <Location left="1839" top="786" />
        <Size width="242" height="147" />
      </Entity>
      <Entity type="Comment">
        <Text>Implements IDisposable</Text>
        <Location left="2202" top="701" />
        <Size width="160" height="50" />
      </Entity>
      <Entity type="Interface">
        <Name>IChangeSet</Name>
        <Access>Public</Access>
        <Location left="2171" top="812" />
        <Size width="433" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">string Name { get; }</Member>
        <Member type="Method">void RegisterDependency(Func&lt;bool&gt; dependency, ChangeBlocker blocks)</Member>
        <Member type="Method">void UnregisterDependency(Func&lt;bool&gt; dependency)</Member>
      </Entity>
      <Entity type="Class">
        <Name>Timeline</Name>
        <Access>Internal</Access>
        <Location left="1568" top="717" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IFollowHistory</Name>
        <Access>Public</Access>
        <Location left="1287" top="241" />
        <Size width="407" height="316" />
        <Collapsed>False</Collapsed>
        <Member type="Property">TimeMarker CurrentMark { get; }</Member>
        <Member type="Property">bool IsAtCurrentTime { get; }</Member>
        <Member type="Property">bool CanRollBack { get; }</Member>
        <Member type="Property">bool CanRollForward { get; }</Member>
        <Member type="Method">void RollBackTo(TimeMarker marker, TimelineTraveller traveller = null)</Member>
        <Member type="Method">void RollBackTo(string mark, TimelineTraveller traveller = null)</Member>
        <Member type="Event">event EventHandler OnRollingBack</Member>
        <Member type="Event">event EventHandler OnRolledBack</Member>
        <Member type="Method">void RollForwardTo(TimeMarker marker, TimelineTraveller traveller = null)</Member>
        <Member type="Method">void RollForwardTo(string mark, TimelineTraveller traveller = null)</Member>
        <Member type="Event">event EventHandler OnRollingForward</Member>
        <Member type="Event">event EventHandler OnRolledForward</Member>
        <Member type="Method">TimeMarker Mark()</Member>
        <Member type="Method">TimeMarker Mark(string markName)</Member>
        <Member type="Event">event EventHandler&lt;TimeTravellerEventArgs&gt; OnTimeTravellerArrived</Member>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Realization" first="19" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1313</X>
          <Y>1966</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="17" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1386</X>
          <Y>1966</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="9" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="9" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="12" second="11">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1707</X>
          <Y>1192</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="36" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1758</X>
          <Y>1409</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="16" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1262</X>
          <Y>925</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1191</X>
          <Y>925</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="3" second="42">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="43" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1697</X>
          <Y>692</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2061</X>
          <Y>645</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="43" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="6" second="18">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="7" second="27">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="12" second="32">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="17" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1421</X>
          <Y>1726</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="19" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1216</X>
          <Y>1761</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1354</X>
          <Y>1716</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="12" second="33">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="13" second="30">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="14" second="35">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="15" second="34">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="37" second="44">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1453</X>
          <Y>603</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="16" second="43">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="18" second="17">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="20" second="32">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="23" second="32">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="21" second="36">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2150</X>
          <Y>1575</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2208</X>
          <Y>1575</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="24" second="33">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>513</X>
          <Y>682</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>642</X>
          <Y>722</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="25" second="34">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2375</X>
          <Y>1888</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="25" second="35">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2265</X>
          <Y>1890</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="28" second="27">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="29" second="42">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="33" second="31">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>769</X>
          <Y>636</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>768</X>
          <Y>571</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="43" second="33">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="34" second="36">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2396</X>
          <Y>1629</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="35" second="36">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2268</X>
          <Y>1629</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="38" second="39">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2723</X>
          <Y>627</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="39" second="42">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>2685</X>
          <Y>837</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="40" second="42">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="40" second="43">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1814</X>
          <Y>853</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1755</X>
          <Y>853</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="41" second="42">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2281</X>
          <Y>776</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2279</X>
          <Y>787</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="43" second="44">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Utilities - Logging</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>ILogMessage</Name>
        <Access>Internal</Access>
        <Location left="784" top="879" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Class">
        <Name>Logger</Name>
        <Access>Internal</Access>
        <Location left="352" top="714" />
        <Size width="256" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public LogLevel Level { get; }</Member>
        <Member type="Method">public bool ShouldLog(ILogMessage message)</Member>
        <Member type="Method">public void Log(ILogMessage message)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommandLogTemplate</Name>
        <Access>Internal</Access>
        <Location left="656" top="338" />
        <Size width="248" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public LogType LogType { get; }</Member>
        <Member type="Property">public string Name { get; }</Member>
        <Member type="Method">public string Transfer(ILogMessage message)</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DebugLogTemplate</Name>
        <Access>Internal</Access>
        <Location left="656" top="125" />
        <Size width="248" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public LogType LogType { get; }</Member>
        <Member type="Property">public string Name { get; }</Member>
        <Member type="Method">public string Transfer(ILogMessage message)</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ILoggerConfiguration</Name>
        <Access>Internal</Access>
        <Location left="41" top="714" />
        <Size width="244" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">string TargetDirectory { get; }</Member>
        <Member type="Property">int NumberOfMessagesToBuffer { get; }</Member>
        <Member type="Property">int FlushAfter { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ILogger</Name>
        <Access>Internal</Access>
        <Location left="656" top="557" />
        <Size width="246" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">LogLevel Level { get; }</Member>
        <Member type="Method">bool ShouldLog(ILogMessage message)</Member>
        <Member type="Method">void Log(ILogMessage message)</Member>
      </Entity>
      <Entity type="Enum">
        <Name>LogLevel</Name>
        <Access>Internal</Access>
        <Location left="30" top="170" />
        <Size width="162" height="185" />
        <Collapsed>False</Collapsed>
        <Value>Trace</Value>
        <Value>Debug</Value>
        <Value>Info</Value>
        <Value>Warn</Value>
        <Value>Error</Value>
        <Value>Fatal</Value>
        <Value>None</Value>
      </Entity>
      <Entity type="Enum">
        <Name>LogType</Name>
        <Access>Internal</Access>
        <Location left="30" top="30" />
        <Size width="162" height="119" />
        <Collapsed>False</Collapsed>
        <Value>None</Value>
        <Value>Debug</Value>
        <Value>Command</Value>
      </Entity>
      <Entity type="Interface">
        <Name>ILogSink</Name>
        <Access>Internal</Access>
        <Location left="1059" top="845" />
        <Size width="381" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Method">LogLevel Level(LogType logType)</Member>
        <Member type="Method">bool ShouldLogMessage(ILogMesage message, LogType logType)</Member>
        <Member type="Method">void Log(ILogMessage message, LogType logType)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ILogTemplate</Name>
        <Access>Internal</Access>
        <Location left="322" top="259" />
        <Size width="260" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">LogType LogType { get; }</Member>
        <Member type="Property">string Name { get; }</Member>
        <Member type="Method">string Transfer(ILogMessage message)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Do we need a log template? This could define a way to write log data to the disk in such a way that we can parse it later?</Text>
        <Location left="352" top="67" />
        <Size width="211" height="94" />
      </Entity>
      <Entity type="Comment">
        <Text>Links to nlog for the actual logging.</Text>
        <Location left="317" top="966" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>KernelService</Name>
        <Access>Internal</Access>
        <Location left="1107" top="209" />
        <Size width="302" height="153" />
        <Collapsed>False</Collapsed>
        <Member type="Method">protected abstract void StartService()</Member>
        <Member type="Event">public event EventHandler&lt;StartupProgressEventArgs&gt; StartupProgress</Member>
        <Member type="Method">public void Start()</Member>
        <Member type="Method">public StartupState GetStartupState()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LogSink</Name>
        <Access>Internal</Access>
        <Location left="1071" top="557" />
        <Size width="397" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public LogLevel Level(LogType logType)</Member>
        <Member type="Method">public bool ShouldLogMessage(ILogMesage message, LogType logType)</Member>
        <Member type="Method">public void Log(ILogMessage message, LogType logType)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="13" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1122</X>
          <Y>710</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="1" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>527</X>
          <Y>867</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="1" second="4">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="1" second="9">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="11" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="1" second="5">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>664</X>
          <Y>815</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>781</X>
          <Y>698</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="2" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>607</X>
          <Y>330</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="3" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="13" second="5">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="13" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="10" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="13" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>