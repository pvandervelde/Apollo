<Window x:Class="ProjectExplorerPrototype.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:filters="clr-namespace:ProjectExplorerPrototype.Filters"
        xmlns:projects="clr-namespace:ProjectExplorerPrototype.Projects"
        xmlns:converters="clr-namespace:ProjectExplorerPrototype.Converters"
        Title="Project Explorer" Height="600" Width="800" Name="wndMain" MinHeight="600" MinWidth="800"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    
    <Window.Resources>
        <!--
        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!-
                                 Note that the following do not work, but I believe the top 2 should?!
                                 <ToggleButton IsChecked="{TemplateBinding IsExpanded}" ClickMode="Press" Name="Expander">
                                 <ToggleButton IsChecked="{TemplateBinding Property=IsExpanded}" ClickMode="Press" Name="Expander">
                                 <ToggleButton IsChecked="{TemplateBinding Path=IsExpanded}" ClickMode="Press" Name="Expander">
                                 ->
                                <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Name="Expander" Visibility="Collapsed">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="UIElement.Focusable" Value="false" />
                                            <Setter Property="FrameworkElement.Width" Value="16" />
                                            <Setter Property="FrameworkElement.Height" Value="16" />
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                            <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                </Path.Data>
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF"/>
                                                            </Trigger>
                                                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="Bd" 
                                        HorizontalAlignment="Stretch" 
                                        BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        Padding="{TemplateBinding Control.Padding}" 
                                        Background="{TemplateBinding Panel.Background}" 
                                        SnapsToDevicePixels="True" 
                                        Grid.Column="1" >
                                    <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="PART_Header" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                                <ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.Row="1" />
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected" Value="True" >
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        -->
       
        <Style x:Key="internalBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Background" Value="White" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
        </Style>
        
        <Style x:Key="listviewItemStyle" TargetType="{x:Type ListViewItem}">
            <Style.Resources>
                <converters:ListviewBackgroundConverter x:Key="listviewBackgroundConverter" />
            </Style.Resources>
            <Setter Property="Background">
                <Setter.Value>
                    <Binding RelativeSource="{RelativeSource Self}" Converter="{StaticResource listviewBackgroundConverter}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>

        <Style x:Key="columnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}" >
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Margin" Value="5,0,5,0" />
        </Style>
        
        <Style x:Key="nonsizingColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource columnHeaderStyle}">
            
        </Style>
        
        <DataTemplate x:Key="filterNameTemplate" DataType="{x:Type filters:Filter}">
            <DataTemplate.Resources>
                <converters:FilterIsActiveToOpacityConverter x:Key="filterToOpacityConverter" />
            </DataTemplate.Resources>
            
            <TextBox Text="{Binding Path=Name, Mode=TwoWay}" 
                     FontSize="14"
                     Opacity="{Binding Path=IsActive, Converter={StaticResource filterToOpacityConverter}}"
                     HorizontalAlignment="Stretch" VerticalAlignment="Center"
                     Margin="2"
                     >
            </TextBox>
        </DataTemplate>
        
        <DataTemplate x:Key="filterOnOffTemplate" DataType="{x:Type filters:Filter}">
            <DataTemplate.Resources>
                <converters:FilterIsActiveConverter x:Key="filterIsActiveConverter" />
            </DataTemplate.Resources>
            
            <Button x:Name="btnActive" 
                    Command="{Binding Path=ChangeActiveStateCommand}"
                    Margin="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Height="48"
                    Width="48"
                    >
                <Image x:Name="imgOnOff" Source="{Binding Path=IsActive, Converter={StaticResource filterIsActiveConverter}}" />
            </Button>
        </DataTemplate>

        <HierarchicalDataTemplate x:Key="datasetTemplate" 
                                  DataType="{x:Type projects:DataSetViewModel}" 
                                  ItemsSource="{Binding Path=Children}">
            <HierarchicalDataTemplate.Resources>
                <converters:ProjectRunningConverter x:Key="projectRunningConverter" />
                <converters:FilterIsActiveConverter x:Key="filterIsActiveConverter" />
                <converters:ProjectProcessStateConverter x:Key="projectProcessStateConverter" />
                <converters:ProjectLockStateConverter x:Key="projectLockStateConverter" />
                <converters:ProgressConverter x:Key="projectProgressConverter" />
            </HierarchicalDataTemplate.Resources>
            
            <Border x:Name="dataSetBorder"
                    BorderBrush="Blue"
                    BorderThickness="1"
                    CornerRadius="3"
                    Margin="2"
                    Padding="2">
                <Grid>
                    <ProgressBar Value="{Binding Path=PercentComplete}" Background="White" Opacity="50" />
                    <StackPanel Orientation="Horizontal" >
                        <!-- Image for lock -->
                        <Image Source="{Binding Path=ProcessState, Converter={StaticResource projectProcessStateConverter}}" Width="16" Height="16" Margin="3,0,3,0" />
                        
                        <!-- Image for lock -->
                        <Image Source="{Binding Path=LockState, Converter={StaticResource projectLockStateConverter}}" Width="16" Height="16" Margin="3,0,3,0" />
                        
                        <StackPanel Orientation="Vertical" Margin="3,0,3,0">
                            <Label>Location:</Label>
                            <TextBlock Text="{Binding Location}"  />
                        </StackPanel>
                        
                        <StackPanel Orientation="Vertical" Margin="3,0,3,0">
                            <Label>Name:</Label>
                            <TextBlock Text="{Binding Name}" />    
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Border>
        </HierarchicalDataTemplate>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <!-- Menu bar -->
            <RowDefinition Height="Auto" />
            <!-- Window content-->
            <RowDefinition Height="*" />
            <!-- Status bar -->
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <!-- Menu + toolbars -->
        <StackPanel Grid.Row="0">
            
        </StackPanel>
        
        <Grid Grid.Row="1" Name="dpMainContent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="150" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="100" />
            </Grid.ColumnDefinitions>
            
            <!-- Graph -->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*" MinHeight="150" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" MinHeight="100" />
                </Grid.RowDefinitions>


                <!-- Graph -->
                <Border Style="{StaticResource internalBorderStyle}">
                    <TreeView Name="tvProject"
                              ItemsSource="{Binding Path=Project}"
                              ItemTemplate="{StaticResource datasetTemplate}"
                              >
                    </TreeView>
                </Border>
                
                <GridSplitter Grid.Row="1" Name="gsplSplitter" VerticalAlignment="Center" HorizontalAlignment="Stretch" ResizeBehavior="PreviousAndNext" BorderThickness="2" BorderBrush="Red" ShowsPreview="True" Margin="2" />

                <Border Grid.Row="2" 
                        Name="bdrFilters" 
                        Style="{StaticResource internalBorderStyle}">
                    <ListView Name="lvwFilters"
                              ItemsSource="{Binding Path=Filters}"
                              ItemContainerStyle="{StaticResource listviewItemStyle}">
                        <ListView.View>
                            <GridView ColumnHeaderContainerStyle="{StaticResource columnHeaderStyle}">
                                <GridViewColumn Header="Filter name" 
                                                CellTemplate="{StaticResource filterNameTemplate}"
                                                >
                                </GridViewColumn>
                                <GridViewColumn Header="On / Off"
                                                CellTemplate="{StaticResource filterOnOffTemplate}"
                                                HeaderContainerStyle="{StaticResource nonsizingColumnHeaderStyle}">
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Border>
            </Grid>
            
            <GridSplitter Grid.Column="1" Name="gsplVerticalSplitter" VerticalAlignment="Stretch" HorizontalAlignment="Center" ResizeBehavior="PreviousAndNext" BorderThickness="2" BorderBrush="Red" ShowsPreview="True" Margin="2" />
            
            <!-- Properties control -->
            <Border Grid.Column="2" Name="bdrProperties" CornerRadius="5" Margin="10,0,10,0" BorderThickness="1">
                <StackPanel Name="spProperties" >

                </StackPanel>
            </Border>

            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF6993FF" Offset="0" />
                    <GradientStop Color="#FFB4B6B6" Offset="1" />
                </LinearGradientBrush>
            </Grid.Background>
        </Grid>
        
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
        </Grid>
        
        <!-- Status bar -->
        <DockPanel Grid.Row="2">
            <StatusBar>
                
            </StatusBar>
        </DockPanel>
    </Grid>
</Window>
