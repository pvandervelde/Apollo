<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NSarrac.Service</name>
    </assembly>
    <members>
        <member name="T:NSarrac.Service.InjectionSetup">
            <summary>
            Provides the methods used for the dependency injection.
            </summary>
        </member>
        <member name="M:NSarrac.Service.InjectionSetup.InitializeContainer(NSarrac.Processors.IConfigurationReader,NSarrac.Service.IStoreSecrets)">
            <summary>
            Initializes the <see cref="T:NSarrac.Service.InjectionSetup"/> class.
            </summary>
            <param name="reader">The configuration reader.</param>
            <param name="keyStore">The key store.</param>
            <returns>
            The IOC container.
            </returns>
        </member>
        <member name="T:NSarrac.Service.IStoreSecrets">
            <summary>
            Defines the interface for objects that store application wide
            secrets.
            </summary>
        </member>
        <member name="M:NSarrac.Service.IStoreSecrets.PrivateKey">
            <summary>
            Returns the private key which is used for decrypting the
            error messages.
            </summary>
            <returns>
            The private key.
            </returns>
        </member>
        <member name="T:NSarrac.Service.PrivateKeyStore">
            <summary>
            Stores the private key which is used to decrypt the error messages.
            </summary>
        </member>
        <member name="F:NSarrac.Service.PrivateKeyStore.m_KeyString">
            <summary>
            The string that holds the private key.
            </summary>
        </member>
        <member name="M:NSarrac.Service.PrivateKeyStore.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:NSarrac.Service.PrivateKeyStore"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:NSarrac.Service.PrivateKeyStore.#ctor(System.Xml.Linq.XDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:NSarrac.Service.PrivateKeyStore"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:NSarrac.Service.PrivateKeyStore.PrivateKey">
            <summary>
            Returns the private key which is used for decrypting the
            error messages.
            </summary>
            <returns>
            The private key.
            </returns>
        </member>
        <member name="T:NSarrac.Service.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:NSarrac.Service.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:NSarrac.Service.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:NSarrac.Service.Properties.Resources.Exceptions_Messages_UnknownKey">
            <summary>
              Looks up a localized string similar to The specified key is unknown..
            </summary>
        </member>
        <member name="P:NSarrac.Service.Properties.Resources.Exceptions_Messages_UnknownKey_WithKey">
            <summary>
              Looks up a localized string similar to The specified key [{0}] is unknown..
            </summary>
        </member>
        <member name="T:NSarrac.Service.ReportingService">
            <summary>
            Defines the interface for the error reporting webservice.
            </summary>
        </member>
        <member name="F:NSarrac.Service.ReportingService.s_ConfigurationFile">
            <summary>
            The file name of the configuration file.
            </summary>
        </member>
        <member name="F:NSarrac.Service.ReportingService.s_KeyFile">
            <summary>
            The file name of the key file.
            </summary>
        </member>
        <member name="F:NSarrac.Service.ReportingService.m_Logger">
            <summary>
            The logger which is used to log exceptions etc.
            </summary>
        </member>
        <member name="F:NSarrac.Service.ReportingService.m_Container">
            <summary>
            The Dependency Injection container.
            </summary>
        </member>
        <member name="M:NSarrac.Service.ReportingService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NSarrac.Service.ReportingService"/> class.
            </summary>
        </member>
        <member name="M:NSarrac.Service.ReportingService.Resolve``1">
            <summary>
            Resolves the request for a new instance of type <typeparamref name="TService"/>.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <returns>
            A new object of type <typeparamref name="TService"/>.
            </returns>
        </member>
        <member name="M:NSarrac.Service.ReportingService.Report(NSarrac.Framework.Report)">
            <summary>
            Reports the error condition described in the specified report to the default
            report processor.
            </summary>
            <param name="reportToProcess">The report.</param>
            <returns>
            An object that describes a possible solution for the error condition.
            </returns>
        </member>
        <member name="T:NSarrac.Service.ServerFailResolution">
            <summary>
            Defines the <see cref="T:NSarrac.Framework.ErrorResolution"/> which is used when the
            server experiences a fatal error and is unable to process the 
            error report.
            </summary>
        </member>
        <member name="T:NSarrac.Service.UnknownKeyException">
            <summary>
            An exception thrown if a <see cref="T:NSarrac.Processors.IConfigurationReader"/> is asked for a value
            with an unknown key.
            </summary>
        </member>
        <member name="M:NSarrac.Service.UnknownKeyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NSarrac.Service.UnknownKeyException"/> class.
            </summary>
        </member>
        <member name="M:NSarrac.Service.UnknownKeyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NSarrac.Service.UnknownKeyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:NSarrac.Service.UnknownKeyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:NSarrac.Service.UnknownKeyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:NSarrac.Service.UnknownKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:NSarrac.Service.UnknownKeyException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="T:NSarrac.Service.XmlConfigurationReader">
            <summary>
            Reads the system configuration from an XML file.
            </summary>
        </member>
        <member name="F:NSarrac.Service.XmlConfigurationReader.m_Values">
            <summary>
            The collection that holds all the values.
            </summary>
        </member>
        <member name="M:NSarrac.Service.XmlConfigurationReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:NSarrac.Service.XmlConfigurationReader"/> class.
            </summary>
            <param name="stream">The stream which contains the XML document.</param>
        </member>
        <member name="M:NSarrac.Service.XmlConfigurationReader.#ctor(System.Xml.Linq.XDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:NSarrac.Service.XmlConfigurationReader"/> class.
            </summary>
            <param name="document">The document.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="document"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:NSarrac.Service.XmlConfigurationReader.Contains(System.String)">
            <summary>
            Determines whether the projectMap contains a value for the specific key.
            </summary>
            <param name="key">The key that matches the required value.</param>
            <returns>
                <see langword="true"/> if the projectMap contains a value for the specific key; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NSarrac.Service.XmlConfigurationReader.ConfigurationValues">
            <summary>
            Returns a collection of configuration values.
            </summary>
            <returns>The collection of configuration values.</returns>
        </member>
        <member name="P:NSarrac.Service.XmlConfigurationReader.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> with the specified key.
            </summary>
            <param name="key">The key for the desired item.</param>
            <value>
            The value that belongs to the given <paramref name="key"/>.
            </value>
            <exception cref="T:NSarrac.Service.UnknownKeyException">
            Thrown if <paramref name="key"/> does not appear in the configuration.
            </exception>
        </member>
    </members>
</doc>
