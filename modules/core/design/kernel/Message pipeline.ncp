<Project>
  <Name>Message pipeline</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.0.1124.0, Culture=neutral, PublicKeyToken=null">
    <Name>Overview</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>MessagePipeline</Name>
        <Access>Public</Access>
        <Location left="220" top="712" />
        <Size width="590" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly IMessageQueue m_MessageQueue</Member>
        <Member type="Field">readonly INameService m_Dns</Member>
        <Member type="Method">public void RegisterAsListener(IProcessMessages service)</Member>
        <Member type="Method">public void RegisterAsListener(IProcessMessages service, IEnumerator&lt;MessageType&gt; messageTypesToListenTo)</Member>
        <Member type="Method">public void RegisterAsSender(ISendMessages service)</Member>
        <Member type="Method">public void Unregister(object service)</Member>
        <Member type="Method">public void UnregisterAsSender(ISendMessages service)</Member>
        <Member type="Method">public void UnregisterAsListener(IProcessMessages service)</Member>
        <Member type="Method">public void UnregisterAsListener(IProcessMessages service, IEnumerator&lt;MessageType&gt; messageTypesToListenTo)</Member>
        <Member type="Method">public MessageId Send(IMessage messageToSend)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IMessage&lt;T&gt;</Name>
        <Access>Public</Access>
        <Location left="612" top="487" />
        <Size width="224" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">MessageHeader Header { get; }</Member>
        <Member type="Property">MessageBody Message { get; }</Member>
        <Member type="Property">T Data { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IMessageQueue</Name>
        <Access>Public</Access>
        <Location left="982" top="712" />
        <Size width="162" height="152" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>INameService</Name>
        <Access>Public</Access>
        <Location left="982" top="938" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Interface">
        <Name>IProcessMessages</Name>
        <Access>Public</Access>
        <Location left="1255" top="624" />
        <Size width="347" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Property">DnsName DnsName { get; }</Member>
        <Member type="Method">void ProcessMessages(IMessage message)</Member>
        <Member type="Method">void ProcessMessages(IEnumerator&lt;IMessage&gt; messages)</Member>
        <Member type="Method">void ProcessMessages(params IMessage[] messages)</Member>
      </Entity>
      <Entity type="Structure">
        <Name>DnsName</Name>
        <Access>Public</Access>
        <Location left="205" top="10" />
        <Size width="220" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string m_Name</Member>
        <Member type="Property">public static DnsName AllServices { get; }</Member>
        <Member type="Property">public static DnsName Nobody { get; }</Member>
        <Member type="Constructor">public DnsName(DnsName nameToCopy)</Member>
        <Member type="Constructor">public DnsName(string name)</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ISendMessages</Name>
        <Access>Public</Access>
        <Location left="1255" top="460" />
        <Size width="419" height="140" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void OnMessageDeliveryFailure(object sender, MessageEventArgs e)</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Message has:
- Header;
  - Sender
  - Recipient
  - ID
- Body
  - Message
  - Data</Text>
        <Location left="982" top="487" />
        <Size width="154" height="145" />
      </Entity>
      <Entity type="Structure">
        <Name>MessageHeader</Name>
        <Access>Public</Access>
        <Location left="589" top="48" />
        <Size width="218" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DnsName Sender { get; }</Member>
        <Member type="Property">public DnsName Recipient { get; }</Member>
        <Member type="Property">public MessageId MessageId { get; }</Member>
      </Entity>
      <Entity type="Structure">
        <Name>MessageBody</Name>
        <Access>Public</Access>
        <Location left="859" top="48" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
      </Entity>
      <Entity type="Structure">
        <Name>MessageId</Name>
        <Access>Public</Access>
        <Location left="10" top="10" />
        <Size width="162" height="155" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Guid m_Id</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Each service has it's own DNS name which is used by the pipeline to look up the actual proxy to the service.

The other DNS names (which are not related to a specific service) are:
- AllServices (used for broadcast)
- Nobody (used to make message disappear)</Text>
        <Location left="189" top="282" />
        <Size width="254" height="148" />
      </Entity>
      <Entity type="Comment">
        <Text>What do we store in the message body. It must be possible for services to select a message based on stuff in the body too so the types have to be known a head of time...</Text>
        <Location left="1182" top="97" />
        <Size width="215" height="100" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>566</X>
          <Y>523</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <IsAggregation>False</IsAggregation>
        <IsComposition>False</IsComposition>
      </Relationship>
      <Relationship type="Association" first="0" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>859</X>
          <Y>789</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>935</X>
          <Y>789</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <IsAggregation>False</IsAggregation>
        <IsComposition>True</IsComposition>
      </Relationship>
      <Relationship type="Association" first="0" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>938</X>
          <Y>1062</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <IsAggregation>False</IsAggregation>
        <IsComposition>True</IsComposition>
      </Relationship>
      <Relationship type="Comment" first="7" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>724</X>
          <Y>636</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="11" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="12" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>