<Project>
  <Name>Logging</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.2.1174.0, Culture=neutral, PublicKeyToken=null">
    <Name>Logging - overview</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>LogSink</Name>
        <Access>Internal</Access>
        <Location left="1051" top="537" />
        <Size width="397" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public LogLevel Level(LogType logType)</Member>
        <Member type="Method">public bool ShouldLogMessage(ILogMesage message, LogType logType)</Member>
        <Member type="Method">public void Log(ILogMessage message, LogType logType)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>KernelService</Name>
        <Access>Internal</Access>
        <Location left="1087" top="189" />
        <Size width="302" height="153" />
        <Collapsed>False</Collapsed>
        <Member type="Method">protected abstract void StartService()</Member>
        <Member type="Event">public event EventHandler&lt;StartupProgressEventArgs&gt; StartupProgress</Member>
        <Member type="Method">public void Start()</Member>
        <Member type="Method">public StartupState GetStartupState()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Links to nlog for the actual logging.</Text>
        <Location left="385" top="952" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Comment">
        <Text>Do we need a log template? This could define a way to write log data to the disk in such a way that we can parse it later?</Text>
        <Location left="332" top="47" />
        <Size width="211" height="94" />
      </Entity>
      <Entity type="Interface">
        <Name>ILogTemplate</Name>
        <Access>Internal</Access>
        <Location left="302" top="239" />
        <Size width="260" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">LogType LogType { get; }</Member>
        <Member type="Property">string Name { get; }</Member>
        <Member type="Method">string Transfer(ILogMessage message)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ILogSink</Name>
        <Access>Internal</Access>
        <Location left="1039" top="825" />
        <Size width="381" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Method">LogLevel Level(LogType logType)</Member>
        <Member type="Method">bool ShouldLogMessage(ILogMesage message, LogType logType)</Member>
        <Member type="Method">void Log(ILogMessage message, LogType logType)</Member>
      </Entity>
      <Entity type="Enum">
        <Name>LogType</Name>
        <Access>Internal</Access>
        <Location left="10" top="10" />
        <Size width="162" height="119" />
        <Collapsed>False</Collapsed>
        <Value>None</Value>
        <Value>Debug</Value>
        <Value>Command</Value>
      </Entity>
      <Entity type="Enum">
        <Name>LogLevel</Name>
        <Access>Internal</Access>
        <Location left="10" top="150" />
        <Size width="162" height="185" />
        <Collapsed>False</Collapsed>
        <Value>Trace</Value>
        <Value>Debug</Value>
        <Value>Info</Value>
        <Value>Warn</Value>
        <Value>Error</Value>
        <Value>Fatal</Value>
        <Value>None</Value>
      </Entity>
      <Entity type="Interface">
        <Name>ILogger</Name>
        <Access>Internal</Access>
        <Location left="636" top="537" />
        <Size width="246" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">LogLevel Level { get; }</Member>
        <Member type="Method">bool ShouldLog(ILogMessage message)</Member>
        <Member type="Method">void Log(ILogMessage message)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ILoggerConfiguration</Name>
        <Access>Internal</Access>
        <Location left="21" top="694" />
        <Size width="244" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Property">string TargetDirectory { get; }</Member>
        <Member type="Property">int NumberOfMessagesToBuffer { get; }</Member>
        <Member type="Property">int FlushAfter { get; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>DebugLogTemplate</Name>
        <Access>Internal</Access>
        <Location left="636" top="105" />
        <Size width="248" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public LogType LogType { get; }</Member>
        <Member type="Property">public string Name { get; }</Member>
        <Member type="Method">public string Transfer(ILogMessage message)</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommandLogTemplate</Name>
        <Access>Internal</Access>
        <Location left="636" top="318" />
        <Size width="248" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public LogType LogType { get; }</Member>
        <Member type="Property">public string Name { get; }</Member>
        <Member type="Method">public string Transfer(ILogMessage message)</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Logger</Name>
        <Access>Internal</Access>
        <Location left="332" top="694" />
        <Size width="256" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public LogLevel Level { get; }</Member>
        <Member type="Method">public bool ShouldLog(ILogMessage message)</Member>
        <Member type="Method">public void Log(ILogMessage message)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ILogMessage</Name>
        <Access>Internal</Access>
        <Location left="705" top="858" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="0" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="3" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="0" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="0" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="10" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="11" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>587</X>
          <Y>310</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="12" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>644</X>
          <Y>795</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>761</X>
          <Y>678</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Comment" first="2" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="12" second="4">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="12" second="9">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>