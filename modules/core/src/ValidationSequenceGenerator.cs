//-----------------------------------------------------------------------
// <copyright company="P. van der Velde">
//     Copyright (c) P. van der Velde. All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
//
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Reflection;
using Apollo.Utils;
using Apollo.Utils.Licensing;

namespace Apollo.Core.Utils.Licensing
{
    /// <summary>
    /// A helper class that provides methods for generating validation sequences.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Powershell_Build_Script", "1.0.0.0")]
    [ExcludeFromCoverage("This class is automatically generated by the build script.")]
    internal sealed class ValidationSequenceGenerator : IValidationSequenceGenerator
    {
        /// <summary>
        /// Returns the date and time on which the current <see cref="Assembly"/> was build.
        /// </summary>
        /// <returns>
        ///     The build time for the current <see cref="Assembly"/>.
        /// </returns>
        private static DateTimeOffset BuildTime()
        {
            DateTimeOffset result = DateTimeOffset.Now;
            var buildTimeAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof(AssemblyBuildTimeAttribute), false);
            if (buildTimeAttributes.Length == 1)
            {
                result = ((AssemblyBuildTimeAttribute)buildTimeAttributes[0]).BuildTime;
            }

            return result;
        }

        /// <summary>
        /// Returns the date and time on which the current application was installed.
        /// </summary>
        /// <returns>
        ///     The install time for the current application.
        /// </returns>
        private static DateTimeOffset InstallTime()
        {
            return DateTimeOffset.Now;
        }

        /// <summary>
        /// Returns the date and time on which the current application was started.
        /// </summary>
        /// <returns>
        ///     The started time for the current application.
        /// </returns>
        private static DateTimeOffset ProcessStartTime()
        {
            var ourProcess = Process.GetCurrentProcess();
            return new DateTimeOffset(ourProcess.StartTime);
        }

        /// <summary>
        /// Generates a set of validation sequences.
        /// </summary>
        /// <returns>
        ///     A collection of <see cref="ValidationSequence"/> instances.
        /// </returns>
        [SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate",
            Justification = "The return value is an IEnumerable, generating this may take time thus a method is more suitable.")]
        public IEnumerable<ValidationSequence> GetLicenseValidationSequences()
        {
            yield return new ValidationSequence(
                new TimePeriod(RepeatPeriod.Hourly, 1),
                BuildTime());

            yield return new ValidationSequence(
                new TimePeriod(RepeatPeriod.Hourly, 1),
                InstallTime());

            yield return new ValidationSequence(
                new TimePeriod(RepeatPeriod.Hourly, 1),
                ProcessStartTime());

            yield return new ValidationSequence(
                new TimePeriod(RepeatPeriod.Hourly, 1),
                new DateTimeOffset(2010, 9, 20, 23, 29, 6, 42, new TimeSpan(432000000000)));
        }
    }
}
