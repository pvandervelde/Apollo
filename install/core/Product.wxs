<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:netfx="http://schemas.microsoft.com/wix/NetFxExtension">

    <!-- 
        Include the dependencies file. This contains links to file paths and the 
        client WiX files.
   -->
    <?include $(var.SolutionDir)Dependencies.wxi ?>

    <!--
        Include the version number file. This contains the current version number
        and the version number of the oldest version of Apollo that we allow 
        upgrading from.
   -->
    <?include $(var.SolutionDir)VersionNumber.wxi ?>

    <!--
        Include the company include file. This contains some general information
        regarding the manufacturer that is needed for the installer.
   -->
    <?include $(var.SolutionDir)CompanyIncludes.wxi ?>

    <!--
        Include the include file. This contains some general information
        regarding Apollo that is needed for the installer.
   -->
    <?include Includes.wxi ?>
    
    <!--
        Define the product information.
        - We always force a major upgrade, so we set the productCode to 
          '*' for automatic generation each time. 
        - The installer language is US english (1033)
        - The upgrade code is fixed and defined in dependencies.wxi
   -->
    <Product Id="*"
             Name="$(var.Apollo_ProductName)"
             Language="1033"
             Version="$(var.Apollo_CurrentVersion)"
             Manufacturer="$(var.Company_Name)"
             UpgradeCode="$(var.Apollo_UpgradeCode)">

        <!--
            Define the package information.
            - We demand version 3.0 of the installer (i.e. InstallerVersion=300)
            - We demand an elevated install
            - We always install per machine (not per user)
            - we do not specify a Platform attribute, in which case it should use whatever the current configuration is.
              (to specify it explicitly, we would have to set it to $(var.Platform) which produces spurious warnings when
               VS fails to validate that against the schema)
        -->
        <Package InstallerVersion="300"
                 Compressed="yes"
                 InstallPrivileges="elevated"
                 InstallScope="perMachine"
                 Manufacturer="$(var.Company_Name)"
                 Description="$(var.Apollo_Description)" />

        <!-- 
            Define the upgrade conditions. The upgrade code must be retained
            as long as we want to be able to replace an older version with a
            newer version.
        -->
        <Upgrade Id="$(var.Apollo_UpgradeCode)">
            <!--
                Detect and overwrite previous versions of the product, upto
                and including the OldestUpgradeVersion (see VersionNumber.wxi). 
            -->
            <UpgradeVersion OnlyDetect="no"
                            Property="PREVIOUSVERSIONDETECTED"
                            Minimum="$(var.Apollo_OldestUpgradeVersion)"
                            IncludeMinimum="yes"
                            Maximum="$(var.Apollo_CurrentVersion)"
                            IncludeMaximum="no" />
            <!--
                Detect (but do not overwrite) any 'newer' versions, including
                the current version. If a newer version is detected then we
                exit the installer.
            -->
            <UpgradeVersion OnlyDetect="yes"
                            Property="NEWERVERSIONDETECTED"
                            Minimum="$(var.Apollo_CurrentVersion)"
                            IncludeMinimum="yes" />
        </Upgrade>

        <!-- Pack all the media in a single CAB file and stuff that in the MSI. -->
        <Media Id="1"
               Cabinet="media1.cab"
               EmbedCab="yes" />

        <!-- 
            Define the install directory. By default this will be in the program files 
            folder. However we do allow the user to change this.
            By default the install location for a 32-bit binary on a 
            64-bit Windows version will look like:
            <PROGRAM_FILES_X86>\<COMPANY_NAME>\Apollo
        -->
        <Directory Id="TARGETDIR"
                   Name="SourceDir">
            <Directory Id="$(var.PlatformProgramFilesFolder)">
                <Directory Id="Dir.Install.Company"
                           Name="$(var.Company_InstallFolder)">
                    <Directory Id="Dir.Install.Apollo"
                               Name="$(var.Apollo_ProductInstallFolder)">
                        <Directory Id="INSTALLLOCATION"
                                   Name="$(var.Apollo_ProductVersionFolder)">
                        </Directory>
                    </Directory>
                </Directory>
            </Directory>

            <!-- 
                Define the Start manu folder in which we'll dump the shortcuts 
            -->
            <Directory Id="ProgramMenuFolder">
                <!-- Define the sub-directory for the product -->
                <Directory Id="Dir.Menu.Apollo"
                           Name="$(var.Company_InstallFolder)">
                    <!-- Wipe out the directory on un-install -->
                    <Component Id="C.CleanApolloStartMenu"
                               Guid="{ADAED3EC-FF15-43F9-95FB-AAF469F69E1C}">
                        <RemoveFolder Id="Dir.Menu.Apollo"
                                      On="uninstall" />
                        <!-- 
                             Remove the registry key. Apollo doesn't create this 
                             but we do install to the Users start menu folder, so we
                             must wipe the key from there. Again the installer will
                             complain if we don't set this action.
                        -->
                        <RegistryValue Root='HKCU'
                                       Key='Software\[Manufacturer]\[ProductName]'
                                       Type='string'
                                       Value=''
                                       KeyPath='yes' />
                    </Component>
                </Directory>
            </Directory>

            <!-- Define the desktop folder in which we'll dump the shortcuts -->
            <Directory Id="DesktopFolder" />
        </Directory>

        <Feature Id="F.Complete"
                 Title="[ProductName]"
                 Description="The complete install of the [ProductName] suite."
                 ConfigurableDirectory="INSTALLLOCATION"
                 Display="1"
                 Level="1">
            <FeatureRef Id="F.Apollo.UI.ProjectExplorer" />
                     
            <!-- Include the clean-up actis for the start menu item(s) -->
            <ComponentRef Id="C.CleanApolloStartMenu" />
            
            <!-- Note: The following ComponentGroupRef is required to pull in generated authoring from project references. -->
            <ComponentGroupRef Id="Product.Generated" />
        </Feature>

        <!-- Properties -->
        <!-- This information is used in the install / uninstall dialog -->
        <!-- Contact information -->
        <Property Id='ARPCONTACT'>$(var.Company_Name)</Property>
        <!-- URL for technical support -->
        <Property Id='ARPHELPLINK'>$(var.Company_HelpUrl)</Property>
        <!-- URL for general information about the product -->
        <Property Id='ARPURLINFOABOUT'>$(var.Company_HelpUrl)</Property>
        <!-- Icon -->
        <Property Id='ARPPRODUCTICON'>Icon.Apollo.ico</Property>

        <!-- Installer UI -->
        <!-- 
         Indicate that we need the UI that allows the user to select the 
         install directory only.
      -->
        <UIRef Id="WixUI_Mondo" />
        <!-- Define where the value of the install directory should be written to -->
        <!-- <Property Id="WIXUI_INSTALLDIR"
                  Value="INSTALLLOCATION" /> -->

        <!-- The banner bitmap. Needs to be 500 x 63 pixels -->
        <!-- <WixVariable Id="WixUIBannerBmp"
                     Value="Wix_ApolloBanner.bmp" /> -->

        <!-- The sidebar bitmap. Only used on the first page. Should be 164 x 314 pixels -->
        <!-- <WixVariable Id="WixUIDialogBmp"
                     Value="Wix_ApolloSidebar.bmp" /> -->

        <!-- 
            Indicate that an newer version is already installed.
            see: http://wix.sourceforge.net/manual-wix3/major_upgrade.htm
        -->
        <Condition Message="A newer version of [ProductName] is already installed. In order to install an older version please un-install the current version first.">
            NOT NEWERVERSIONDETECTED OR Installed
        </Condition>

        <PropertyRef Id="NETFRAMEWORK40FULL"/>
        <?if $(var.Platform) = x64 ?>
            <PropertyRef Id="NETFRAMEWORK40FULLINSTALLROOTDIR64"/>
        <?else ?>
            <PropertyRef Id="NETFRAMEWORK40FULLINSTALLROOTDIR"/>
        <?endif ?>
        <Condition Message="Version 4.0 of the .NET framework is required for the setup to continue.">
            <![CDATA[Installed OR NETFRAMEWORK40FULL]]>
        </Condition>


        <!-- Remove old products if there are any before installing the new product. i.e. we're always doing a major upgrade. -->
        <InstallExecuteSequence>
            <RemoveExistingProducts After="InstallInitialize"/>
        </InstallExecuteSequence>
    </Product>
</Wix>
