<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Build flags -->
        <ShouldClean>true</ShouldClean>
        <ShouldCleanPackages>false</ShouldCleanPackages>
        
        <!-- Directories -->
        <DirWorkspace>$(MSBuildProjectDirectory)</DirWorkspace>
        <DirPackages>$(DirWorkspace)\packages</DirPackages>
        <DirTools>$(DirWorkspace)\tools</DirTools>
        <DirBuild>$(DirWorkspace)\build</DirBuild>
        <DirBuildBin>$(DirBuild)\bin\$(PlatformTranslated)\$(Configuration)</DirBuildBin>
        <DirBuildDeploy>$(DirBuild)\deploy</DirBuildDeploy>
        <DirBuildLogs>$(DirBuild)\logs</DirBuildLogs>
        <DirBuildTemp>$(DirBuild)\temp</DirBuildTemp>
        <DirSrc>$(DirWorkspace)\src</DirSrc>
        
        <!-- Tools -->
        <MsBuildExtensionsPath>$(DirTools)\msbuild.extensions</MsBuildExtensionsPath>
    </PropertyGroup>
    
    <Import Project="$(MsBuildExtensionsPath)\NugetRestore.msbuild"
            Condition="Exists('$(MsBuildExtensionsPath)\NugetRestore.msbuild')"/>    
    <Import Project="$(MsBuildExtensionsPath)\GitHasMasterBranch.msbuild"
            Condition="Exists('$(MsBuildExtensionsPath)\GitHasMasterBranch.msbuild')"/>    
            
    <Target Name="Run" DependsOnTargets="_DisplayInfo;_FetchOriginMasterIfNotExists;_Clean;_RestorePackages">
        <!-- Do nothing here -->
    </Target>
    
    <!-- Display info -->
    <Target Name="_DisplayInfo">
        <Message Text="Preparing workspace ..." />
    </Target>
    
    <PropertyGroup>
        <ExeGit>$(DirGit)\git.exe</ExeGit>
    </PropertyGroup>
    <Target Name="_FetchOriginMasterIfNotExists" DependsOnTargets="_DisplayInfo">
        <GitHasMasterBranch LocalPath="$(DirWorkspace)">
            <Output TaskParameter="HasMaster" PropertyName="HasMaster" />
        </GitHasMasterBranch>
    
        <Message Text="Not fetching master branch because it already exists" Condition="($(HasMaster))" />
        <Message Text="Fetching master branch because it does not exist" Condition="(!$(HasMaster))" />
        <Exec Command="&quot;$(ExeGit)&quot; fetch origin origin/master"
              WorkingDirectory="$(DirWorkspace)"
              Condition="(!$(HasMaster))"/>
    </Target>
    
    <!-- Clean -->
    <Target Name="_Clean" DependsOnTargets="_DisplayInfo;_FetchOriginMasterIfNotExists" Condition="$(ShouldClean)">
        <!-- 
            Don't try to delete the directory because that fails randomly because
            some file is being locked. This then leads to a failing task, but ..
            the next task is run and then the delete command still executes (delayed 
            by the OS). Unfortunately the next task is the task that puts the directories
            back ...
        -->
        <ItemGroup>
            <BuildFilesToDelete Include="$(DirBuild)\**\*.*"/>
        </ItemGroup>
        <Delete Files="@(BuildFilesToDelete)" />

        <RemoveDir Directories="$(DirPackages)" Condition="$(ShouldCleanPackages)" />
    </Target>
    
    <!-- Run Nuget for the global build -->
    <PropertyGroup>
        <FileNuGetExe>$(DirSrc)\.nuget\NuGet.exe</FileNuGetExe>
        <PackagesConfig>$([System.IO.Path]::Combine($(DirWorkspace), "packages.config"))</PackagesConfig>
    </PropertyGroup>
    <Target Name="_RestorePackages" DependsOnTargets="_DisplayInfo;_Clean">
        <NugetRestore NugetPath="$(FileNuGetExe)" PackageFile="$(PackagesConfig)" PackageDirectory="$(DirPackages)" />
    </Target>
 </Project>