<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Apollo.ProjectExplorer.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <sys:Double x:Key="CloseButtonWidthAndHeight">14</sys:Double>
    <Geometry x:Key="X_CloseButton">M0,0 L10,10 M0,10 L10,0</Geometry>
    
    <Color x:Key="TabControl_BackgroundColor_Base">#EEF7FF</Color>
    <Color x:Key="TabItem_ForegroundColor_Base">#4971A3</Color>

    <SolidColorBrush x:Key="TabItemCloseButtonNormalForegroundBrush"
                       Color="{StaticResource TabItem_ForegroundColor_Base}"/>
    <SolidColorBrush x:Key="TabItemCloseButtonHoverForegroundBrush"
                       Color="White"/>
    <SolidColorBrush x:Key="TabItemCloseButtonPressedForegroundBrush"
                       Color="#EEEE"/>

    <LinearGradientBrush x:Key="TabItemCloseButtonNormalBackgroundBrush" 
                           StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#5FFF" Offset="0.0"/>
                <GradientStop Color="#5CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItemCloseButtonNormalBorderBrush" 
                           StartPoint="0,0" EndPoint="1,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#5CCC" Offset="0.0"/>
                <GradientStop Color="#5444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItemCloseButtonHoverBackgroundBrush" 
                           StartPoint="0,1" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFDF2B1E" Offset="0.0"/>
                <GradientStop Color="#FFA41F00" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItemCloseButtonPressedBackgroundBrush" 
                           StartPoint="0,0" EndPoint="1,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFA41F00" Offset="0.0"/>
                <GradientStop Color="#FFDF2B1E" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItemCloseButtonPressedBorderBrush" 
                           StartPoint="0,0" EndPoint="1,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#5444" Offset="0.0"/>
                <GradientStop Color="#5CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="TabItemCloseButtonStyle" TargetType="{x:Type Button}">
        <!-- 
            The default value for SnapsToDevicePixels actually is False
            (so this setter really wouldn't be required). However, I'm 
            adding this nevertheless in order to explicitly point out that,
            in this case, it is required (see below).
         -->
        <Setter Property="SnapsToDevicePixels" Value="false"/>
        <Setter Property="Height" Value="{StaticResource CloseButtonWidthAndHeight}"/>
        <Setter Property="Width" Value="{StaticResource CloseButtonWidthAndHeight}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder"  
                          CornerRadius="2" 
                          BorderThickness="1"
                          Background="{StaticResource TabItemCloseButtonNormalBackgroundBrush}"
                          BorderBrush="{StaticResource TabItemCloseButtonNormalBorderBrush}">
                        <Grid>
                            <!-- The Path below will render the button's X. -->
                            <Path x:Name="ButtonPath" 
                              Margin="2"
                              Data="{StaticResource X_CloseButton}"
                              Stroke="{StaticResource TabItemCloseButtonNormalForegroundBrush}" 
                              StrokeThickness="2"
                              StrokeStartLineCap="Round"
                              StrokeEndLineCap="Round"
                              Stretch="Uniform"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"/>
                            <!-- We don't really need the ContentPresenter, but what the heck ... -->
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" 
                                Value="{StaticResource TabItemCloseButtonHoverBackgroundBrush}" />
                            <Setter TargetName="ButtonPath" Property="Stroke" 
                                Value="{StaticResource TabItemCloseButtonHoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ButtonBorder" 
                                Property="Background" 
                                Value="{StaticResource TabItemCloseButtonPressedBackgroundBrush}" />
                            <Setter TargetName="ButtonBorder" 
                                Property="BorderBrush" 
                                Value="{StaticResource TabItemCloseButtonPressedBorderBrush}" />
                            <Setter TargetName="ButtonPath" Property="Stroke" 
                                Value="{StaticResource TabItemCloseButtonPressedForegroundBrush}"/>
                            <!-- 
                           Simulate a pressed-effect by moving the contents down and to the right.
                           Since the button is pretty small, the trick here is to only shift things
                           just a tiny little bit, hence the fractional values below.
                           Note that, in order for this to work as expected, SnapsToDevicePixels
                           must be set to "false" (see the setter at the top of this style).
                        -->
                            <Setter TargetName="ButtonPath" Property="Margin" Value="2.5,2.5,1.5,1.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        Taken from the accepted answer by 'rooks' from here: 
        http://stackoverflow.com/questions/561931/how-to-create-trapezoid-tabs-in-wpf-tab-control
    -->
    
    <SolidColorBrush x:Key="BorderBrush1" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ForegroundBrush" Color="#FF000000"/>
    <SolidColorBrush x:Key="HoverBrush" Color="#FFFF4500"/>
    
    <LinearGradientBrush x:Key="TabControlBackgroundBrush" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="#FFa9cde7" Offset="0"/>
        <GradientStop Color="#FFe7f4fc" Offset="0.3"/>
        <GradientStop Color="#FFf2fafd" Offset="0.85"/>
        <GradientStop Color="#FFe4f6fa" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItemPathBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF3164a5" Offset="0"/>
        <GradientStop Color="#FFe4f6fa" Offset="1"/>
    </LinearGradientBrush>

    <!-- TabControl style -->
    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" BorderThickness="2,0,2,2" Panel.ZIndex="2" CornerRadius="0,0,2,2"
                                BorderBrush="{StaticResource BorderBrush1}"
                                Background="{StaticResource TabControlBackgroundBrush}">
                            <ContentPresenter ContentSource="SelectedContent"/>
                        </Border>
                        <!--<src:TabPanel Grid.Row="0" Offset="16" Panel.ZIndex="1" IsItemsHost="true"/>-->
                        <StackPanel Orientation="Horizontal" Grid.Row="0" Panel.ZIndex="1" IsItemsHost="true"/>
                        <Rectangle Grid.Row="0" Height="2" VerticalAlignment="Bottom"
                                   Fill="{StaticResource BorderBrush1}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- TabItem style -->
    <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
        <Setter Property="Header" Value="{Binding Path=DataContext.DisplayName}" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="grd">
                        <Path x:Name="TabPath" StrokeThickness="2"
                              Margin="{Binding ElementName=TabItemContent, Converter={x:Static c:ContentToMarginConverter.Value}}"
                              Stroke="{StaticResource BorderBrush1}"
                              Fill="{StaticResource TabItemPathBrush}">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsClosed="False" StartPoint="1,0" 
                                                Segments="{Binding ElementName=TabItemContent, Converter={x:Static c:ContentToPathConverter.Value}}">
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                            <Path.LayoutTransform>
                                <!-- For some reason  -->
                                <ScaleTransform ScaleY="-1"/>
                            </Path.LayoutTransform>
                        </Path>
                        <Rectangle x:Name="TabItemTopBorder" Height="2" Visibility="Visible"
                                   VerticalAlignment="Bottom" Fill="{StaticResource BorderBrush1}"
                                   Margin="{Binding ElementName=TabPath, Path=Margin}" />
                        <Grid x:Name="TabItemContent"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Margin="0, 0, 0, 0"> 
                            <Grid.ColumnDefinitions>
                                <!-- Text / TabItem's Caption -->
                                <ColumnDefinition/>
                                <!-- Close button -->
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0" 
                                              VerticalAlignment="Center"
                                              ContentSource="Header"
                                              Margin="20,2,10,2"
                                              TextElement.Foreground="{StaticResource ForegroundBrush}"/>
                            <!-- 
                              This represents the Close-button.
                           
                              The Command-binding that we create here refers to the Window's 
                              DataContext (which, for the sample, is the window's code-behind);
                              In order for the Command to be able to determine which TabItem the
                              button belongs to, a relative binding will do the trick (i.e., 
                              (bubble up to the parent TabItem).
                           -->
                            <Button x:Name="cmdTabItemCloseButton"
                                    Grid.Column="1"
                                    Style="{StaticResource TabItemCloseButtonStyle}"
                                    Command="{Binding Path=DataContext.CloseCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                                    Margin="10,0,0,0"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="grd">
                            <Setter Property="Stroke" Value="{StaticResource HoverBrush}" TargetName="TabPath"/>
                        </Trigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="Fill" TargetName="TabPath">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FFe4f6fa"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BitmapEffect">
                                <Setter.Value>
                                    <DropShadowBitmapEffect Direction="302" Opacity="0.4" 
                                                            ShadowDepth="2" Softness="0.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.ZIndex" Value="2"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="TabItemTopBorder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>